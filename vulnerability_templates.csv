Vulnerability name ,Description,Impact,Severity,Steps,Fix,Cvss,Cvss_String,Cwe,Type
Endpoints Discovered,"Endpoints discovered refer to the process where attackers identify various API or web application endpoints that are publicly accessible or exposed. These endpoints can reveal valuable information about the application's structure, functionality, and available services. Attackers can leverage this information to gain insights into how the application works, what data it handles, and potential vulnerabilities in the exposed endpoints. Once endpoints are discovered, attackers can use this information to probe for vulnerabilities, exploit security weaknesses, or manipulate the application's data and behavior.","The impact of discovering endpoints in an application can vary depending on the level of exposure and the sensitivity of the endpoints: <ul class=""list-disc pt-2 pl-4""> <li><strong>Unauthorized Access:</strong> Attackers who discover endpoints may attempt to access them directly, potentially bypassing authentication or authorization mechanisms. This can lead to unauthorized access to sensitive data, functionalities, or resources.</li> <li><strong>Reconnaissance:</strong> Knowledge of endpoints can provide attackers with valuable information about the structure and functionality of an application. This can aid in planning and executing targeted attacks.</li> <li><strong>Exploitation of Vulnerabilities:</strong> If the endpoints have vulnerabilities, attackers may exploit them to gain access to the application or its data. This can lead to data breaches, account takeovers, or other forms of exploitation.</li> <li><strong>Manipulation of Data:</strong> Attackers may use discovered endpoints to manipulate data within the application. This can include altering records, injecting malicious data, or disrupting normal operations.</li> </ul>",INFO,"Discovering endpoints can occur through techniques such as: <ul class=""list-disc pt-2 pl-4""> <li><strong>Web Crawling:</strong> Scanning the application's publicly accessible URLs and directories to discover available endpoints.</li> <li><strong>Brute Forcing:</strong> Systematically trying different URL patterns or parameter combinations to uncover hidden endpoints.</li> <li><strong>Reverse Engineering:</strong> Analyzing client-side code, such as JavaScript files, or network traffic to identify and map application endpoints.</li> </ul>","To address the risks associated with the discovery of endpoints, organizations should implement the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Proper Authentication and Authorization:</strong> Secure endpoints by requiring authentication and authorization checks for all requests. Use role-based access control (RBAC) to limit access to endpoints based on user roles and permissions.</li> <li><strong>Rate Limiting and Throttling:</strong> Implement rate limiting and request throttling to prevent attackers from exploiting endpoints through brute-force attacks or denial-of-service (DoS) attacks.</li> <li><strong>Input Validation and Output Encoding:</strong> Validate all input data to ensure it meets expected criteria and avoid injection attacks. Encode output data to protect against cross-site scripting (XSS) and other injection attacks.</li> <li><strong>Secure API Design:</strong> Follow best practices for secure API design, such as using HTTPS for all communication, avoiding unnecessary data exposure, and using secure tokens for authentication.</li> <li><strong>Minimize Endpoint Exposure:</strong> Limit the number of publicly accessible endpoints to only those necessary for the application's functionality. Hide internal or administrative endpoints behind secure firewalls or VPNs.</li> </ul>",0,AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:N,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,list
Directory Listing Enabled,"Web servers can be configured to automatically list the contents of directories that do not have an index page present. This can aid an attacker by enabling them to quickly identify the resources at a given path, and proceed directly to analyzing and attacking those resources. It particularly increases the exposure of sensitive files within the directory that are not intended to be accessible to users, such as temporary files and crash dumps.<p class=""pt-3"">Directory listings themselves do not necessarily constitute a security vulnerability. Any sensitive resources within the web root should in any case be properly access-controlled, and should not be accessible by an unauthorized party who happens to know or guess the URL. Even when directory listings are disabled, an attacker may guess the location of sensitive files using automated tools.</p>","<ul class=""list-disc pl-4""> <li><strong>Sensitive Files:</strong> Directory listings can expose files that contain sensitive information, such as configuration files, backup files, or private documents. These files might include credentials, internal communications, or other confidential data.</li> <li><strong>Discovery of Hidden Resources:</strong> Attackers can discover hidden resources that are not linked or indexed, such as admin panels, test files, or deprecated scripts.</li> <li><strong>Identification of Vulnerable Files:</strong> Attackers can identify and exploit files with known vulnerabilities (e.g., outdated scripts with security flaws).</li> <li><strong>Website Structure Insight:</strong> Attackers can gain a comprehensive understanding of the website's directory structure, making it easier to identify important files and directories.</li> </ul>",MEDIUM,"Discovering endpoints can occur through techniques such as: <ul class=""list-disc pt-2 pl-4""> <li><strong>Web Crawling:</strong> Scanning the application's publicly accessible URLs and directories to discover available endpoints.</li> <li><strong>Brute Forcing:</strong> Systematically trying different URL patterns or parameter combinations to uncover hidden endpoints.</li> <li><strong>Reverse Engineering:</strong> Analyzing client-side code, such as JavaScript files, or network traffic to identify and map application endpoints.</li> </ul>","There is not usually any good reason to provide directory listings, and disabling them may place additional hurdles in the path of an attacker. This can normally be achieved in two ways: <ul class=""list-disc pt-2 pl-4 pb-3""> <li>Configure your web server to prevent directory listings for all paths beneath the web root;</li> <li>Place into each directory a default file (such as index.htm) that the web server will display instead of returning a directory listing.</li><li> Disable directory listing in the web server configuration (e.g., using .htaccess for Apache or nginx.conf for NGINX).</li> <li> Implement proper access controls to restrict unauthorized access to directories. </li> </ul> For <strong>Apache</strong> web server, disabling directory listing can be achieved by adding the following line to the <i>.htaccess</i> file or the server configuration: <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs italic""> <p class=""py-1""> Options -Indexes</p> </div> For <strong>NGINX</strong>, the following directive can be added to the server block: <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs italic""> <p class=""py-1""> autoindex off;</p> </div>",5.3,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-548: Exposure of Information Through Directory Listing,list
Insecure Cross-Origin Resource Sharing Configuration,"Cross-origin resource sharing (CORS) is a browser mechanism which enables controlled access to resources located outside of a given domain. It extends and adds flexibility to the same-origin policy (SOP). However, it also provides potential for cross-domain attacks, if a website's CORS policy is poorly configured and implemented. CORS is not a protection against cross-origin attacks such as cross-site request forgery (CSRF).<p class=""pt-2"">CORS Misconfiguration occurs when a web application's Cross-Origin Resource Sharing (CORS) policy is improperly configured, allowing unauthorized domains to access restricted resources. This vulnerability can lead to significant security issues, such as data theft, unauthorized actions, and exposure of sensitive information.</p>","An attacker can exploit a CORS Misconfiguration to: <ul class=""list-disc pl-8""> <li> Access sensitive data from the victim's web application.</li> <li>Perform unauthorized actions on behalf of a legitimate user.</li> <li>Bypass same-origin policy protections, leading to potential data breaches.</li> <li>Exploit other vulnerabilities in conjunction with CORS Misconfiguration to escalate attacks.</li> </ul> <p class=""font-semibold pt-2"">Common Causes:</p> <ul class=""list-disc pl-8""> <li> Allowing all origins (<b>*</b>) in the CORS policy.</li> <li>Permitting unsafe HTTP methods (e.g., PUT, DELETE) from untrusted origins.</li> <li>Incorrectly configuring the Access-Control-Allow-Origin header.</li> <li>Failing to properly validate and restrict the Origin header.</li> </ul>",MEDIUM,"Craft a request with the `Origin` header set to a random URL; in this example, we used <i class=""text-red-500 border-b border-b-red-500"">https://evil.com</i>. Examine the response header to check the value of <i>Access-Control-Allow-Origin</i>. It will either be <b>*</b> or the URL we specified in the <i>Origin</i> header.","By ensuring a properly configured CORS policy, web applications can effectively prevent unauthorized cross-origin access and protect sensitive data from malicious actors. <ul class=""list-disc pl-4""> <li> Define a strict CORS policy, specifying only trusted domains.</li> <li>Avoid using wildcard (<b>*</b>) in the <i>Access-Control-Allow-Origin</i> header.</li> <li>Restrict HTTP methods to only those necessary and safe.</li> <li>Implement proper validation and sanitation of the <i>Origin</i> header.</li> </ul>",6.1,AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,CWE-942: Permissive Cross-domain Whitelist,list
Missing Security Headers,"Missing security headers refers to the absence of HTTP headers that enhance the security of web applications and protect against common attacks. These headers provide instructions to web browsers on how to handle certain aspects of web pages, such as content type, origin policy, caching behavior, and scripts execution. Common security headers that may be missing include: <ul class=""list-disc pt-2 pl-4""> <li><strong>Content Security Policy (CSP):</strong> Helps prevent cross-site scripting (XSS) and data injection attacks by specifying which sources and types of content are allowed to be loaded and executed on the page.</li> <li><strong>HTTP Strict Transport Security (HSTS):</strong> Forces browsers to connect to the server using a secure HTTPS connection and protects against downgrade attacks.</li> <li><strong>X-Content-Type-Options:</strong> Protects against MIME type sniffing, which can lead to the execution of malicious content.</li> <li><strong>X-Frame-Options:</strong> Prevents clickjacking attacks by controlling whether the page can be embedded within an iframe.</li> <li><strong>X-XSS-Protection:</strong> Provides basic XSS filtering capabilities and instructs the browser to block or sanitize the page if an XSS attack is detected.</li> <li><strong>Referrer-Policy:</strong> Controls the information sent in the Referer header, protecting user privacy by limiting data leakage.</li> </ul>","The impact of having missing or misconfigured security headers can be detrimental to the security and privacy of a web application and its users: <ul class=""list-disc pt-2 pl-4""> <li><strong>Cross-Site Scripting (XSS) Attacks:</strong> Without a properly configured Content Security Policy (CSP) header, the application is more vulnerable to XSS attacks. Attackers can inject malicious scripts into web pages, potentially leading to data theft, session hijacking, or unauthorized actions on behalf of the user.</li> <li><strong>Clickjacking Attacks:</strong> The absence of the X-Frame-Options header allows attackers to embed the web application within an iframe and trick users into clicking on hidden or deceptive content. This can result in unauthorized actions being performed, such as changing user settings or executing transactions.</li> <li><strong>Man-in-the-Middle Attacks:</strong> Missing the HTTP Strict Transport Security (HSTS) header can expose the application to man-in-the-middle attacks, where attackers intercept and manipulate data transmitted between the user and the server. This can lead to data breaches, privacy violations, and tampering with sensitive information.</li> <li><strong>MIME Type Sniffing:</strong> Without the X-Content-Type-Options header set to ""nosniff,"" the browser may attempt to determine the content type of a response based on its content rather than the declared content type. This can lead to unintended content execution or the display of malicious content, posing security risks.</li> <li><strong>Information Leakage:</strong> The absence of the Referrer-Policy header can result in unintentional exposure of user data, such as the URL of the referring page. This can lead to privacy concerns and potential data leakage.</li> <li><strong>Data Integrity Risks:</strong> Without the X-XSS-Protection header, the application lacks basic protection against XSS attacks. This can impact data integrity and user trust in the application's ability to secure their information.</li> </ul>",MEDIUM,"During the scan, the following security headers were missing from the response headers:","<p><strong>Content Security Policy (CSP)</strong><p> <div class=""px-5 mb-3""> Configuring Content Security Policy involves adding the Content-Security-Policy HTTP header to a web page and giving it values to control w2at resources the user agent is allowed to load for that page. For example, a page that uploads and displays images could allow images from anywhere, but restrict a form action to a specific endpoint. A properly designed Content Security Policy helps protect a page against a cross-site scripting attack. <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs w-fit italic""> <p class=""py-1"">Content-Security-Policy: default-src 'self'</p> <p class=""py-1"">Content-Security-Policy: default-src 'self' example.com *.example.com</p> <p class=""py-1"">Content-Security-Policy: default-src 'self'; img-src *; media-src example.net; script-src scripts.example.com</p> </div> </div> <p><strong>Strict-Transport-Security (HSTS)</strong><p> <div class=""px-5 mb-3""> If a website accepts a connection through HTTP and redirects to HTTPS, visitors may initially communicate with the non-encrypted version of the site before being redirected, if, for example, the visitor types http://www.foo.com/ or even just foo.com. This creates an opportunity for a man-in-the-middle attack. The redirect could be exploited to direct visitors to a malicious site instead of the secure version of the original site. <p>The HTTP Strict Transport Security header informs the browser that it should never load a site using HTTP and should automatically convert all attempts to access the site using HTTP to HTTPS requests instead.<p> <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs w-fit italic""> <p class=""py-1"">Strict-Transport-Security: max-age=&lt;expire-time&gt;</p> <p class=""py-1"">Strict-Transport-Security: max-age=&lt;expire-time&gt;; includeSubDomains</p> <p class=""py-1"">Strict-Transport-Security: max-age=&lt;expire-time&gt;; includeSubDomains; preload</p> </div> </div> <p><strong>X-Content-Type-Options</strong><p> <div class=""px-5 mb-3""> The X-Content-Type-Options response HTTP header is a marker used by the server to indicate that the MIME types advertised in the Content-Type headers should be followed and not be changed. The header allows you to avoid MIME type sniffing by saying that the MIME types are deliberately configured. <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs w-fit italic""> <p class=""py-1"">X-Content-Type-Options: nosniff</p> </div> </div> <p><strong>X-Frame-Options</strong><p> <div class=""px-5 mb-3""> The X-Frame-Options HTTP response header can be used to indicate whether a browser should be allowed to render a page in a &lt;frame&gt;, &lt;iframe&gt;, &lt;embed&gt; or &lt;object&gt;. Sites can use this to avoid click-jacking attacks, by ensuring that their content is not embedded into other sites. <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs w-fit italic""> <p class=""py-1"">X-Frame-Options: DENY</p> <p class=""py-1"">X-Frame-Options: SAMEORIGIN</p> </div> </div> <p><strong>Referrer-Policy</strong><p> <div class=""px-5 mb-3""> The Referrer-Policy HTTP header controls how much referrer information (sent with the Referer header) should be included with requests. Aside from the HTTP header, you can set this policy in HTML. <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs w-fit italic""> <p class=""py-1"">Referrer-Policy: no-referrer</p> <p class=""py-1"">Referrer-Policy: no-referrer-when-downgrade</p> <p class=""py-1"">Referrer-Policy: origin</p> <p class=""py-1"">Referrer-Policy: origin-when-cross-origin</p> <p class=""py-1"">Referrer-Policy: same-origin</p> <p class=""py-1"">Referrer-Policy: strict-origin</p> <p class=""py-1"">Referrer-Policy: strict-origin-when-cross-origin</p> <p class=""py-1"">Referrer-Policy: unsafe-url</p> </div> </div> <p><strong>Permissions Policy</strong><p> <div class=""px-5 mb-3""> Permissions Policy provides mechanisms for web developers to explicitly declare what functionality can and cannot be used on a website. You define a set of ""policies"" that restrict what APIs the site's code can access or modify the browser's default behavior for certain features. This allows you to enforce best practices, even as the codebase evolves — as well as more safely compose third-party content. <p>Permissions Policy is similar to Content Security Policy but controls features instead of security behavior.</p> <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs w-fit italic""> <p class=""py-1"">Permissions-Policy: &lt;directive&gt;=&lt;allowlist&gt;</p> <p class=""py-1"">Permissions-Policy: geolocation=()</p> <p class=""py-1"">Permissions-Policy: geolocation=(self ""https://a.example.com"" ""https://b.example.com"")</p> <p class=""py-1"">Permissions-Policy: picture-in-picture=(), geolocation=(self https://example.com), camera=*;</p> </div> </div> <p><strong>Cross-Origin-Embedder-Policy (COEP)</strong><p> <div class=""px-5 mb-3""> The HTTP Cross-Origin-Embedder-Policy (COEP) response header configures embedding cross-origin resources into the document. <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs w-fit italic""> <p class=""py-1"">Cross-Origin-Embedder-Policy: unsafe-none | require-corp | credentialless</p> </div> </div> <p><strong>Cross-Origin Resource Policy (CORP)</strong><p> <div class=""px-5 mb-3""> Cross-Origin Resource Policy is a policy set by the Cross-Origin-Resource-Policy HTTP header that lets websites and applications opt in to protection against certain requests from other origins (such as those issued with elements like &lt;script&gt; and &lt;img&gt;), to mitigate speculative side-channel attacks, like Spectre, as well as Cross-Site Script Inclusion attacks. <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs w-fit italic""> <p class=""py-1"">Cross-Origin-Resource-Policy: same-site | same-origin | cross-origin</p> </div> </div> <p><strong>Cross-Origin-Opener-Policy (COOP)</strong><p> <div class=""px-5 mb-3""> The HTTP Cross-Origin-Opener-Policy (COOP) response header allows you to ensure a top-level document does not share a browsing context group with cross-origin documents. <p>COOP will process-isolate your document and potential attackers can't access your global object if they were to open it in a popup, preventing a set of cross-origin attacks dubbed XS-Leaks.</p> <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs w-fit italic""> <p class=""py-1"">Cross-Origin-Opener-Policy: unsafe-none</p> <p class=""py-1"">Cross-Origin-Opener-Policy: same-origin-allow-popups</p> <p class=""py-1"">Cross-Origin-Opener-Policy: same-origin</p> </div> </div>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N,CWE-525: Missing HTTP Security Headers,list
Banner Grabbing,"When an HTTP response includes a server header that discloses the server software and its version, it provides attackers with valuable information about the underlying infrastructure. This disclosure can help attackers tailor their attacks to target known vulnerabilities associated with the specific server software version. Such information may include the type of server (e.g., Apache, Nginx, or IIS) and its exact version number. <p class=""pt-2"">Attackers can use this information for:</p> <ul class=""list-disc pt-1 pl-4""> <li><strong>Targeted Attacks:</strong> Knowing the server software and its version allows attackers to research known vulnerabilities and exploits specific to that version. This can lead to targeted attacks such as buffer overflow, code execution, or denial-of-service attacks.</li> <li><strong>Reconnaissance:</strong> Server header information can provide attackers with insights into the technology stack of the application, enabling them to map out the network infrastructure and identify potential attack vectors.</li> <li><strong>Fingerprinting:</strong> Attackers can use server version information for fingerprinting purposes, gathering details about the server environment to inform their attack strategies.</li> </ul>","The impact of banner grabbing can be significant, especially when attackers obtain sensitive information about a server's configuration and software versions: <ul class=""list-disc pt-2 pl-4""> <li><strong>Targeted Attacks:</strong> Banner grabbing provides attackers with details about the server's software, including type and version. Attackers can use this information to tailor their attacks to exploit known vulnerabilities specific to the server software version.</li> <li><strong>Reconnaissance and Mapping:</strong> Attackers can gather information about the server and its technology stack, aiding in reconnaissance and mapping the network infrastructure. This information can be used to identify potential attack vectors and weaknesses in the network.</li> <li><strong>Exploitation of Known Vulnerabilities:</strong> By knowing the server's software and version, attackers can look up known vulnerabilities in vulnerability databases and attempt to exploit them. This can lead to unauthorized access, data breaches, and other forms of exploitation.</li> <li><strong>Increased Risk of Other Attacks:</strong> Knowing the server's software and version can provide attackers with insights into potential weaknesses that could be exploited through other attack methods, such as cross-site scripting (XSS), cross-site request forgery (CSRF), or SQL injection.</li> <li><strong>Information Leakage:</strong> Banner grabbing may reveal other sensitive information, such as the server's operating system, configuration settings, or internal network details. This information can aid attackers in crafting more precise and effective attacks.</li> </ul>",MEDIUM,The headers revealing the server version was discovered,"To address the issue of a header revealing the server version, consider the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Remove or Obfuscate the Server Header:</strong> Configure the server to remove or modify the server header in HTTP responses. This can help prevent attackers from easily identifying the server software and its version.</li> <li><strong>Server Configuration:</strong> Most web servers allow you to customize or disable the server header. Refer to your server's documentation (e.g., Apache, Nginx, IIS) to configure the server appropriately.</li> <li><strong>Implement a Web Application Firewall (WAF):</strong> A WAF can help filter and block suspicious requests and responses, potentially providing an additional layer of protection and masking certain server information.</li> </ul>",5.3,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-213: Exposed Information through Server Headers,list
Review Open Ports,"Open ports refer to network ports on a server or device that are accessible to the outside world. These ports allow incoming and outgoing communication for specific services and protocols (e.g., HTTP on port 80, HTTPS on port 443, SSH on port 22). While open ports are necessary for legitimate network services and applications to function, they can also pose security risks if not properly managed. <p class=""py-2"">When ports are left open, particularly those not needed for normal operations, it can create vulnerabilities in the network or server. Attackers may exploit these open ports to gain unauthorized access, compromise systems, or launch attacks.</p>","<ul class=""list-disc pl-4""> <li><strong>Unrestricted Access:</strong> Open ports can provide attackers with direct access to services running on the server, potentially bypassing other network defenses.</li> <li><strong>Vulnerability Exploitation:</strong> Attackers may attempt to exploit vulnerabilities in services running on open ports, such as outdated software or misconfigured services, leading to unauthorized access or service disruptions.</li> <li><strong>Network Reconnaissance:</strong> Open ports can reveal information about the types of services and software running on the server, aiding attackers in mapping the network and planning targeted attacks.</li> <li><strong>Denial of Service (DoS) Attacks:</strong> Open ports can be targeted with a high volume of traffic, potentially causing service disruptions and server overload.</li> <li><strong>Data Breaches:</strong> Unsecured open ports can provide attackers with a pathway to access sensitive data stored on the server or transmitted through network communications.</li> </ul>",LOW,The following ports are open,"To address the risks associated with open ports, consider the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Close Unnecessary Ports:</strong> Review the open ports on your servers and close any that are not necessary for the normal operation of your services. Only keep ports open that are required for specific services and applications.</li> <li><strong>Firewall Configuration:</strong> Use firewalls to control access to open ports. Configure firewall rules to restrict incoming and outgoing traffic to only trusted sources and required services.</li> <li><strong>Access Control:</strong> Implement strict access controls on open ports, limiting access to authorized users and trusted networks. Use methods such as VPNs or IP whitelisting to secure access to sensitive services.</li> <li><strong>Port Scanning:</strong> Regularly perform port scans on your network to identify open ports and ensure that only necessary ports remain open. Identify any unexpected or unauthorized open ports and investigate their causes.</li> </ul>",3.7,AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L,CWE-1125: Excessive Attack Surface,nmap_table
Ports Running Services With Known Vulnerabilities,"Ports running services with known vulnerabilities refers to the situation where network ports on a server or device are running software services with publicly disclosed security vulnerabilities. This type of vulnerability poses significant risks, as attackers can exploit known vulnerabilities in the services to gain unauthorized access, execute arbitrary code, or disrupt services. <p>Attackers can exploit these vulnerabilities in various ways, including:</p> <ul class=""list-disc pt-2 pl-4""> <li><strong>Remote Code Execution:</strong> Attackers may execute arbitrary code on the server running the vulnerable service, potentially compromising the server and the data it hosts.</li> <li><strong>Data Breach:</strong> Services with known vulnerabilities may allow attackers to access and exfiltrate sensitive data stored on the server, leading to data breaches and privacy violations.</li> <li><strong>Denial of Service (DoS):</strong> Attackers may exploit vulnerabilities to disrupt services and cause downtime, impacting the availability of applications and services.</li> <li><strong>Privilege Escalation:</strong> Attackers may escalate their privileges on the server through vulnerabilities in running services, gaining higher-level access to the server and other connected systems.</li> <li><strong>Malware Distribution:</strong> Attackers may use vulnerable services to distribute malware to users who interact with the server, spreading infections and causing further harm.</li> <li><strong>Man-in-the-Middle Attacks:</strong> Vulnerable services may be exploited to intercept and manipulate data in transit, leading to man-in-the-middle attacks and data integrity issues.</li> </ul>","<ul class=""list-disc""> <li><strong>Unauthorized Access:</strong> Attackers can exploit vulnerabilities in services to gain unauthorized access to the server or network, potentially compromising sensitive data and systems.</li> <li><strong>Data Breach:</strong> Known vulnerabilities can be exploited to access, steal, or manipulate sensitive data, such as personally identifiable information (PII), financial data, or intellectual property.</li> <li><strong>Remote Code Execution:</strong> Attackers may execute arbitrary code on the server running the vulnerable service, allowing them to take control of the server and perform malicious actions, such as deploying malware or conducting further attacks.</li> <li><strong>Denial of Service (DoS):</strong> Vulnerable services can be exploited to launch DoS or distributed denial of service (DDoS) attacks, causing service disruptions and making the server or application unavailable to legitimate users.</li> <li><strong>Privilege Escalation:</strong> Attackers can escalate their privileges on the server by exploiting vulnerabilities, gaining access to higher-level functions and other connected systems.</li> <li><strong>Malware Distribution:</strong> Attackers may use vulnerable services as a means to distribute malware, such as ransomware or trojans, to users interacting with the server.</li> <li><strong>Data Integrity Issues:</strong> Attackers may manipulate or alter data passing through the vulnerable services, compromising the integrity and reliability of the data.</li> <li><strong>Compliance Violations:</strong> Failure to address known vulnerabilities in services may result in non-compliance with regulations such as GDPR, HIPAA, or PCI DSS, leading to potential legal and financial penalties.</li> </ul>",CRITICAL,The following ports are open and running services that are vulnerable and outdated.,"To address the issue of open ports running vulnerable and outdated services, consider the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Close Unnecessary Ports:</strong> Identify and close any open ports that are not needed for the normal operation of your services. Only keep essential ports open to minimize the attack surface.</li> <li><strong>Update and Patch Services:</strong> Ensure that the services running on open ports are up to date with the latest versions and security patches. This helps address known vulnerabilities and protect against exploitation.</li> <li><strong>Configure Firewalls:</strong> Use firewalls to control access to open ports. Configure firewall rules to restrict traffic to only trusted sources and required services.</li> <li><strong>Monitor Network Traffic:</strong> Continuously monitor network traffic for signs of suspicious activity on open ports. Implement intrusion detection or prevention systems (IDS/IPS) to identify and block potential threats.</li> <li><strong>Limit Access to Services:</strong> Implement strict access controls on services running on open ports. Use IP whitelisting, VPNs, or other access control mechanisms to restrict who can connect to the services.</li> <li><strong>Implement Security Best Practices:</strong> Secure services running on open ports by following security best practices such as enforcing strong authentication, encryption, and secure configurations.</li> </ul>",9.4,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:H,CWE-923: Improper Restriction of Network Ports/Services,nmap_vuln
Vulnerable To Diffie-Hellman Key Exchange Attack,"Vulnerability to a Diffie-Hellman key exchange attack occurs when the Diffie-Hellman key exchange process is implemented using weak or insecure parameters, making it susceptible to cryptographic attacks such as the Logjam attack. Diffie-Hellman key exchange is a method used to establish a shared secret between two parties over an insecure communication channel. <ul class=""list-disc pt-2 pl-4""> <li><strong>Man-in-the-Middle (MitM) Attacks:</strong> An attacker can intercept and manipulate the key exchange process, inserting themselves between the two parties to establish two separate secure channels. This allows the attacker to decrypt, modify, or inject data as it passes through them.</li> <li><strong>Weak Parameters:</strong> The use of weak or commonly used parameters (e.g., small or non-random prime numbers) in the Diffie-Hellman key exchange process can allow attackers to crack the key exchange and compromise the shared secret.</li> <li><strong>Insufficient Key Sizes:</strong> Using insufficiently large key sizes can make the Diffie-Hellman key exchange vulnerable to brute-force or other cryptographic attacks.</li> </ul>","<ul class=""list-disc""> <li><strong>Data Interception:</strong> Attackers can eavesdrop on encrypted communications, intercepting sensitive information such as authentication credentials, personal data, or financial information.</li> <li><strong>Data Manipulation:</strong> Attackers may manipulate the data being transmitted between parties, leading to data corruption or unauthorized changes.</li> <li><strong>Loss of Confidentiality:</strong> By breaking the key exchange process, attackers can gain access to the shared secret and decrypt communications, resulting in the loss of confidentiality.</li> <li><strong>Loss of Integrity:</strong> Attackers can modify data in transit, compromising the integrity of the communication and potentially leading to further attacks.</li> </ul>",MEDIUM,Ports and Services Vulnerable To Diffie-Hellman Key Exchange Attack are,"To mitigate these risks, one should use secure and updated Diffie-Hellman key exchange implementations, avoid using commonly used or weak parameters, and opt for sufficiently large key sizes. Additionally, using other cryptographic protocols, such as Elliptic Curve Diffie-Hellman (ECDH), can provide stronger security and protection against such attacks.",5.9,AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-324: Use of a Key Exchange Without Entity Authentication,nmap_vuln
Vulnerable To Slowloris DDoS Attack,"A vulnerability to Slowloris Denial of Service (DoS) attacks occurs when a server or application does not adequately handle partially open connections or slow HTTP requests. Slowloris is a low-bandwidth, application-layer attack designed to consume server resources by making multiple HTTP requests and keeping them open for as long as possible, while sending data very slowly. <p class=""pt-2"">Attackers exploit this vulnerability by establishing numerous slow connections to the target server and maintaining them for an extended period. By doing so, Slowloris gradually exhausts the server's available connections, sockets, or memory, preventing legitimate users from establishing new connections.</p>","<ul class=""list-disc""> <li><strong>Service Disruption:</strong> The server's capacity to handle new connections is reduced, potentially leading to service interruptions or outages.</li> <li><strong>Resource Consumption:</strong> Slowloris consumes server resources such as CPU, memory, and sockets, impacting the server's performance and availability.</li> <li><strong>Denial of Service:</strong> Legitimate users may experience slow response times or be unable to access the server altogether due to resource exhaustion caused by Slowloris.</li> </ul>",HIGH,Ports and Services Vulnerable To Slowloris DDoS Attack are,"To mitigate the risks associated with Slowloris Denial of Service (DoS) attacks, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Connection Timeouts:</strong> Configure the server to enforce timeouts for connections that remain idle for too long. This can prevent attackers from keeping connections open indefinitely.</li> <li><strong>Rate Limiting:</strong> Implement rate limiting on incoming connections to restrict the number of simultaneous connections or requests from a single IP address. This can help prevent attackers from overwhelming the server with slow connections.</li> <li><strong>Connection Management:</strong> Limit the number of connections each client can establish and control the maximum number of connections per IP address. This can prevent any single client from monopolizing server resources.</li> <li><strong>Application-Layer Firewalls:</strong> Use an application-layer firewall to monitor and filter incoming HTTP requests. These firewalls can detect and block suspicious or malicious requests that exhibit Slowloris-like behavior.</li> <li><strong>Reverse Proxies and Load Balancers:</strong> Deploy a reverse proxy or load balancer to distribute traffic across multiple servers. This can help absorb and mitigate the impact of Slowloris attacks by spreading the load and filtering out malicious requests.</li> <li><strong>Request Limitations:</strong> Set limits on the number of headers, cookies, or query parameters a single request can contain. This can help protect against overly complex or malformed requests used in Slowloris attacks.</li> <li><strong>Web Server Configuration:</strong> Optimize web server configurations to handle slow clients more efficiently, such as adjusting worker processes, thread pooling, and other performance settings.</li> <li><strong>IP Blocking and Blacklisting:</strong> Implement IP blocking or blacklisting for known malicious IP addresses exhibiting Slowloris attack patterns.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-400: Uncontrolled Resource Consumption,nmap_vuln
Vulnerable To OpenSSL Heartbleed Attack,"Vulnerability to the OpenSSL Heartbleed attack refers to a security flaw in the OpenSSL cryptographic library that allows attackers to exploit a weakness in the TLS/DTLS heartbeat extension. This vulnerability, known as ""Heartbleed,"" allows attackers to read memory from the server or client running a vulnerable version of OpenSSL. <p class=""pt-2"">The Heartbleed vulnerability (CVE-2014-0160) occurs when the TLS/DTLS heartbeat extension processes malformed heartbeat requests without properly validating the length of the data. This can lead to the unintended disclosure of data stored in the memory of the affected process.</p>","The impact of vulnerability to the OpenSSL Heartbleed attack can be severe: <ul class=""list-disc pt-2 pl-4""> <li><strong>Sensitive Data Exposure:</strong> Attackers can exploit the Heartbleed vulnerability to read arbitrary chunks of memory from the server or client running a vulnerable version of OpenSSL. This can lead to the exposure of sensitive information such as encryption keys, private keys, session tokens, user credentials, and other data stored in the process's memory.</li> <li><strong>Compromised Encryption:</strong> Exposing encryption keys and other cryptographic secrets can undermine the security of encrypted communications. Attackers may be able to decrypt secure data transmissions, leading to loss of confidentiality.</li> <li><strong>Identity Theft:</strong> With access to sensitive data such as user credentials, attackers can impersonate legitimate users, leading to identity theft and unauthorized access to accounts or systems.</li> <li><strong>Service Impersonation:</strong> Attackers may obtain private keys and certificates, allowing them to impersonate the server and carry out man-in-the-middle attacks, intercepting and manipulating data in transit.</li> <li><strong>Further Exploitation:</strong> The data exposed through Heartbleed can include information that allows attackers to launch further attacks, such as gaining access to other systems, escalating privileges, or conducting targeted attacks.</li> <li><strong>Data Integrity Issues:</strong> Attackers who intercept and manipulate data using Heartbleed can compromise the integrity of the data, resulting in data corruption, tampering, or manipulation.</li> </ul>",HIGH,Ports and Services Vulnerable To OpenSSL Heartbleed Attack are,"To address the vulnerability to the OpenSSL Heartbleed attack and mitigate the associated risks, organizations should take the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Update OpenSSL:</strong> Ensure that the OpenSSL library is updated to a version that includes the patch for the Heartbleed vulnerability. Versions 1.0.1g and later have patched the vulnerability. Use the latest stable release if possible.</li> <li><strong>Replace Private Keys and Certificates:</strong> If a server was affected by the Heartbleed vulnerability, replace all private keys and SSL/TLS certificates that may have been exposed. This prevents attackers from using compromised keys and certificates to impersonate the server.</li> <li><strong>Revoke Compromised Certificates:</strong> Revoke any SSL/TLS certificates that may have been exposed to prevent their misuse. Inform Certificate Authorities (CAs) of the need for revocation.</li> <li><strong>Reset User Credentials:</strong> If user credentials were potentially exposed, inform users and prompt them to reset their passwords. Encourage the use of strong, unique passwords and multi-factor authentication (MFA) where possible.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,nmap_vuln
Vulnerable To Poodle SSLv3 Attack,"The vulnerability to the POODLE (Padding Oracle On Downgraded Legacy Encryption) SSLv3 attack occurs when a server or client supports the outdated SSLv3 encryption protocol. The POODLE attack exploits a design flaw in the SSLv3 protocol's padding mechanism, allowing attackers to decrypt encrypted communications and access sensitive information. <p class=""py-2"">In the POODLE attack, an attacker intercepts encrypted data between a client and server and manipulates the data to create errors in the decryption process. By observing how the server responds to these errors, the attacker can use a padding oracle attack to gradually recover the plaintext data from the encrypted messages.</p> <p>Key points about the POODLE SSLv3 vulnerability:</p> <ul class=""list-disc pt-2 pl-4""> <li><strong>Legacy Protocol:</strong> SSLv3 is an outdated and insecure protocol that should no longer be used due to its susceptibility to attacks like POODLE.</li> <li><strong>Decryption of Encrypted Data:</strong> Attackers can exploit the POODLE vulnerability to decrypt encrypted communications and gain access to sensitive information such as usernames, passwords, session cookies, and other confidential data.</li> <li><strong>Man-in-the-Middle Attack:</strong> The POODLE attack is a type of man-in-the-middle attack that involves intercepting and manipulating data between a client and server.</li> <li><strong>Downgrade Attack:</strong> Attackers can force a downgrade of the encryption protocol from a more secure version (e.g., TLS 1.2) to SSLv3 to exploit the vulnerability.</li> </ul>","The impact of vulnerability to the POODLE (Padding Oracle On Downgraded Legacy Encryption) SSLv3 attack can be significant: <ul class=""list-disc pt-2 pl-4""> <li><strong>Decryption of Encrypted Data:</strong> Attackers can exploit the POODLE vulnerability to decrypt encrypted communications, exposing sensitive data such as usernames, passwords, session cookies, financial information, or other confidential data.</li> <li><strong>Man-in-the-Middle Attacks:</strong> The POODLE attack involves intercepting and manipulating data between a client and server, allowing attackers to perform man-in-the-middle attacks. This can lead to data tampering, interception, or redirection of traffic.</li> <li><strong>Session Hijacking:</strong> By decrypting session cookies and other session-related information, attackers can hijack user sessions, gaining unauthorized access to accounts and performing actions on behalf of the user.</li> <li><strong>Loss of Confidentiality:</strong> Successful exploitation of the POODLE attack compromises the confidentiality of encrypted communications, leading to data breaches and exposure of sensitive information.</li> <li><strong>Compliance Violations:</strong> Using the outdated SSLv3 protocol may violate data protection regulations or industry standards that require the use of up-to-date encryption protocols. This can result in legal consequences, fines, or penalties for non-compliance.</li> </ul>",LOW,Ports and Services Vulnerable To Poodle SSLv3 Attack are,"To mitigate the risks associated with vulnerability to the POODLE (Padding Oracle On Downgraded Legacy Encryption) SSLv3 attack, consider the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Disable SSLv3 Support:</strong> Remove support for the SSLv3 encryption protocol in servers and clients. This ensures that connections use more secure and modern encryption protocols such as TLS 1.2 or later.</li> <li><strong>Use Secure Protocols:</strong> Enable and prioritize the use of modern and secure encryption protocols, such as TLS 1.2 or TLS 1.3, which are not susceptible to the POODLE attack.</li> <li><strong>Update Software and Libraries:</strong> Ensure that server software, libraries, and clients are up to date with the latest security patches. This helps protect against known vulnerabilities and ensures the use of secure protocols.</li> <li><strong>Configure Cipher Suites:</strong> Configure secure cipher suites for SSL/TLS connections. Use strong encryption algorithms and avoid weak or deprecated cipher suites.</li> </ul>",3.4,AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N,CWE-319: Cleartext Transmission of Sensitive Information,nmap_vuln
Discovered Subdomains,"Discovered subdomains refer to the process of identifying and enumerating subdomains of a main domain. Subdomains are extensions of a main domain and can host different services, applications, or websites. While some subdomains are intentionally public and accessible, others may contain sensitive or private information and services. <p class=""py-2"">Attackers can use discovered subdomains to gather intelligence and potentially exploit security weaknesses. The process of discovering subdomains can provide insights into the structure and organization of a target domain and its associated services.</p>","<ul class=""list-disc""> <li><strong>Reconnaissance:</strong> Attackers can gather information about the domain's infrastructure and services by enumerating subdomains. This information can be used for planning targeted attacks.</li> <li><strong>Vulnerabilities:</strong> Subdomains may host different services or applications, each with its own potential vulnerabilities. Attackers can probe these services to identify weaknesses for exploitation.</li> <li><strong>Exposed Sensitive Data:</strong> Some subdomains may host sensitive data or services, such as development environments, staging servers, or administration panels. These subdomains may be more vulnerable to attack if not properly secured.</li> <li><strong>Brute-Force and Enumeration:</strong> Attackers can use automated tools to brute-force and enumerate subdomains, creating a comprehensive list of potential targets.</li> <li><strong>Phishing and Social Engineering:</strong> Discovered subdomains can be used for phishing attacks, where attackers create spoofed versions of legitimate services to deceive users.</li> </ul>",INFO,List of all Discovered Subdomains,"<ul class=""list-disc""> <li><strong>Secure Subdomains:</strong> Apply security best practices to secure each subdomain, such as using HTTPS with strong encryption, setting security headers, and enforcing strong authentication and access controls.</li> <li><strong>Disable Unused Subdomains:</strong> Identify and disable or remove any subdomains that are no longer in use or necessary for business operations. This reduces the attack surface and minimizes potential entry points for attackers.</li> <li><strong>Configure Wildcard DNS Records Carefully:</strong> Avoid using wildcard DNS records that resolve any subdomain to the same IP address, as this can inadvertently expose more services than intended. Instead, configure specific DNS records for each required subdomain.</li> <li><strong>Access Controls and Permissions:</strong> Apply strict access controls to each subdomain, limiting access based on user roles and permissions. This can help protect sensitive services and data hosted on subdomains.</li> </ul>",2.1,AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:N,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,list
Potentially Vulnerable To CRIME,"A system is potentially vulnerable to the CRIME (Compression Ratio Info-leak Made Easy) attack when it supports TLS or SPDY connections with compression enabled, such as TLS-level compression (e.g., SSLv3/TLS with DEFLATE) or SPDY compression. CRIME is a side-channel attack that exploits vulnerabilities in these compression schemes to leak sensitive information. <p class=""pt-2"">The attack works by observing the length of encrypted data (ciphertext) and the way data compresses. By manipulating the contents of requests and responses, attackers can make educated guesses about the plaintext data being compressed and measure the resulting changes in length. By repeatedly making requests and analyzing the length of the responses, attackers can deduce sensitive information.</p>","<ul class=""list-disc""> <li><strong>Compression in TLS and SPDY:</strong> CRIME targets the use of compression in the TLS and SPDY protocols, which can lead to data leaks due to the relationship between plaintext and compressed data.</li> <li><strong>Information Leakage:</strong> By analyzing the length of encrypted, compressed data, attackers can infer sensitive information such as cookies, authentication tokens, or other plaintext data.</li> <li><strong>Man-in-the-Middle Attacks:</strong> CRIME can be particularly effective in man-in-the-middle attack scenarios, where attackers can intercept and manipulate network traffic.</li> <li><strong>Potentially Confidential Data at Risk:</strong> Sensitive information such as session cookies and user credentials could be exposed through this attack.</li> </ul>",LOW,,"To mitigate the risks associated with the CRIME (Compression Ratio Info-leak Made Easy) attack and protect against vulnerabilities in TLS and SPDY compression, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Disable Compression:</strong> Turn off TLS-level compression (e.g., SSLv3/TLS with DEFLATE) in your server and client configurations. This is the most effective way to protect against CRIME by eliminating the use of compression in encrypted communications.</li> <li><strong>Disable SPDY:</strong> If your systems use SPDY, consider disabling it, as SPDY includes compression that could be susceptible to CRIME. Instead, use modern protocols like HTTP/2, which offer improved security and performance without the specific compression issues found in SPDY.</li> <li><strong>Update Software:</strong> Ensure that your servers, clients, and libraries are updated to the latest versions, which may include security patches and improvements that mitigate CRIME.</li> <li><strong>Monitor Traffic:</strong> Monitor network traffic for signs of unusual patterns that could indicate an attempted CRIME attack. This includes observing unexpected changes in traffic length or timing.</li> <li><strong>Use Secure Cookies:</strong> Secure cookies by using the HttpOnly and Secure flags to protect sensitive data such as session tokens. While this doesn't prevent CRIME, it can help mitigate the impact if data is leaked.</li> </ul>",3.7,AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L,CWE-310: Cryptographic Issues,list
Potentially Vulnerable To POODLE,"The vulnerability to the POODLE (Padding Oracle On Downgraded Legacy Encryption) SSLv3 attack occurs when a server or client supports the outdated SSLv3 encryption protocol. The POODLE attack exploits a design flaw in the SSLv3 protocol's padding mechanism, allowing attackers to decrypt encrypted communications and access sensitive information. <p class=""py-2"">In the POODLE attack, an attacker intercepts encrypted data between a client and server and manipulates the data to create errors in the decryption process. By observing how the server responds to these errors, the attacker can use a padding oracle attack to gradually recover the plaintext data from the encrypted messages.</p> <p>Key points about the POODLE SSLv3 vulnerability:</p> <ul class=""list-disc pt-2 pl-4""> <li><strong>Legacy Protocol:</strong> SSLv3 is an outdated and insecure protocol that should no longer be used due to its susceptibility to attacks like POODLE.</li> <li><strong>Decryption of Encrypted Data:</strong> Attackers can exploit the POODLE vulnerability to decrypt encrypted communications and gain access to sensitive information such as usernames, passwords, session cookies, and other confidential data.</li> <li><strong>Man-in-the-Middle Attack:</strong> The POODLE attack is a type of man-in-the-middle attack that involves intercepting and manipulating data between a client and server.</li> <li><strong>Downgrade Attack:</strong> Attackers can force a downgrade of the encryption protocol from a more secure version (e.g., TLS 1.2) to SSLv3 to exploit the vulnerability.</li> </ul>","The impact of vulnerability to the POODLE (Padding Oracle On Downgraded Legacy Encryption) SSLv3 attack can be significant: <ul class=""list-disc pt-2 pl-4""> <li><strong>Decryption of Encrypted Data:</strong> Attackers can exploit the POODLE vulnerability to decrypt encrypted communications, exposing sensitive data such as usernames, passwords, session cookies, financial information, or other confidential data.</li> <li><strong>Man-in-the-Middle Attacks:</strong> The POODLE attack involves intercepting and manipulating data between a client and server, allowing attackers to perform man-in-the-middle attacks. This can lead to data tampering, interception, or redirection of traffic.</li> <li><strong>Session Hijacking:</strong> By decrypting session cookies and other session-related information, attackers can hijack user sessions, gaining unauthorized access to accounts and performing actions on behalf of the user.</li> <li><strong>Loss of Confidentiality:</strong> Successful exploitation of the POODLE attack compromises the confidentiality of encrypted communications, leading to data breaches and exposure of sensitive information.</li> <li><strong>Compliance Violations:</strong> Using the outdated SSLv3 protocol may violate data protection regulations or industry standards that require the use of up-to-date encryption protocols. This can result in legal consequences, fines, or penalties for non-compliance.</li> </ul>",LOW,,"To mitigate the risks associated with vulnerability to the POODLE (Padding Oracle On Downgraded Legacy Encryption) SSLv3 attack, consider the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Disable SSLv3 Support:</strong> Remove support for the SSLv3 encryption protocol in servers and clients. This ensures that connections use more secure and modern encryption protocols such as TLS 1.2 or later.</li> <li><strong>Use Secure Protocols:</strong> Enable and prioritize the use of modern and secure encryption protocols, such as TLS 1.2 or TLS 1.3, which are not susceptible to the POODLE attack.</li> <li><strong>Update Software and Libraries:</strong> Ensure that server software, libraries, and clients are up to date with the latest security patches. This helps protect against known vulnerabilities and ensures the use of secure protocols.</li> <li><strong>Configure Cipher Suites:</strong> Configure secure cipher suites for SSL/TLS connections. Use strong encryption algorithms and avoid weak or deprecated cipher suites.</li> </ul>",3.4,AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N,CWE-319: Cleartext Transmission of Sensitive Information,list
Potentially Vulnerable To SWEET32,"A system is potentially vulnerable to the SWEET32 attack when it supports certain block cipher modes of operation that use small block sizes, such as 64-bit blocks. The attack targets commonly used block ciphers like DES and 3DES (Triple DES) and takes advantage of the birthday attack to compromise the encryption. <p class=""pt-2"">The SWEET32 attack is a practical collision attack that exploits the birthday paradox, allowing attackers to generate collisions within the small block size of the cipher. This attack can lead to the compromise of secure communications by decrypting encrypted data.</p>","<ul class=""list-disc""> <li><strong>Small Block Sizes:</strong> The attack targets block ciphers with small block sizes (e.g., 64 bits) because the smaller the block size, the more feasible it is to generate collisions within the cipher.</li> <li><strong>Long-lived Sessions:</strong> Long-lived sessions with large amounts of encrypted data using vulnerable block ciphers increase the attack surface and the likelihood of an attack succeeding.</li> <li><strong>Exploitation Potential:</strong> Attackers can exploit the SWEET32 vulnerability to intercept and decrypt secure communications, potentially exposing sensitive data such as user credentials, session tokens, or other confidential information.</li> <li><strong>Legacy Cipher Support:</strong> The attack is often a risk when systems support legacy ciphers like DES or 3DES, which are known to be vulnerable due to their small block sizes.</li> </ul>",HIGH,,"To mitigate the risks associated with the SWEET32 attack and protect against vulnerabilities in block ciphers with small block sizes, such as DES and 3DES, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Use Modern Block Ciphers:</strong> Replace vulnerable block ciphers such as DES and 3DES with modern and secure block ciphers such as AES. AES uses larger block sizes (e.g., 128 bits) and is not susceptible to the SWEET32 attack.</li> <li><strong>Disable Legacy Cipher Suites:</strong> Ensure that servers and applications do not support legacy or weak cipher suites that include vulnerable block ciphers. Configure systems to use only strong, modern encryption algorithms.</li> <li><strong>Secure Long-lived Sessions:</strong> Limit the use of long-lived sessions when using encryption, as long-lived sessions can increase the risk of the SWEET32 attack. Use short-lived sessions or re-establish secure connections periodically.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-326: Inadequate Encryption Strength,list
Potentially Vulnerable To FREAK,"A system is potentially vulnerable to the FREAK (Factoring RSA Export Keys) attack when it supports outdated and weak export-grade cryptographic algorithms for SSL/TLS connections. FREAK is a cryptographic attack that exploits a weakness in the implementation of SSL/TLS, allowing attackers to force clients and servers to use export-grade RSA cipher suites with smaller, easily factorable keys. <p class=""pt-2"">In a FREAK attack, an attacker can downgrade a secure connection from strong encryption to weak export-grade encryption, which uses small key lengths (e.g., 512-bit RSA). The attacker can then factor the weak keys, decrypt encrypted data, and compromise secure communications.</p>","<ul class=""list-disc""> <li><strong>Weak Export-Grade Cipher Suites:</strong> The attack targets systems that support export-grade RSA cipher suites, which use small key lengths due to historical restrictions on exporting strong encryption.</li> <li><strong>Man-in-the-Middle Attack:</strong> FREAK allows attackers to perform a man-in-the-middle attack, intercepting and manipulating secure communications to downgrade the encryption.</li> <li><strong>Data Interception and Decryption:</strong> Once the connection is downgraded, attackers can intercept encrypted data and decrypt it using the factored keys, potentially exposing sensitive information such as user credentials, session cookies, or financial data.</li> <li><strong>Exploitation of Misconfigured Servers:</strong> FREAK often targets servers that have not been configured to disable support for weak export-grade ciphers.</li> </ul>",MEDIUM,,"To mitigate the risks associated with the FREAK (Factoring RSA Export Keys) attack and protect against vulnerabilities in weak export-grade RSA cipher suites, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Disable Export-Grade Cipher Suites:</strong> Configure servers and clients to disable support for export-grade RSA cipher suites and weak cryptographic algorithms. This includes avoiding the use of small key lengths, such as 512-bit RSA.</li> <li><strong>Use Modern Encryption Protocols:</strong> Upgrade to modern encryption protocols such as TLS 1.2 or later, which offer improved security and support strong cipher suites.</li> <li><strong>Configure Strong Cipher Suites:</strong> Choose and prioritize strong cipher suites for SSL/TLS connections. Ensure that only secure algorithms and appropriate key lengths are used.</li> </ul>",4.4,AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:L/A:N,CWE-326: Inadequate Encryption Strength,list
Potentially Vulnerable To DROWN,"A system is potentially vulnerable to the DROWN (Decrypting RSA with Obsolete and Weakened eNcryption) attack when it supports the outdated SSLv2 protocol or uses servers that share RSA keys with systems that do support SSLv2. DROWN is a cryptographic attack that exploits weaknesses in the SSLv2 protocol, allowing attackers to decrypt encrypted communications and expose sensitive data. <p class=""pt-2"">The attack works by intercepting encrypted communications between a client and server and using information from SSLv2 connections to decrypt the data. If a server supports SSLv2 or shares RSA keys with another server that supports SSLv2, it becomes vulnerable to the DROWN attack.</p>","<ul class=""list-disc""> <li><strong>Legacy Protocol (SSLv2):</strong> The attack targets the use of the outdated SSLv2 protocol, which has known cryptographic weaknesses and should not be used in modern systems.</li> <li><strong>Shared RSA Keys:</strong> Even if a server itself does not support SSLv2, it can still be vulnerable if it shares RSA keys with a server that does support SSLv2.</li> <li><strong>Data Decryption:</strong> By exploiting the SSLv2 weaknesses, attackers can decrypt encrypted data and potentially expose sensitive information such as user credentials, session tokens, or other confidential data.</li> <li><strong>Man-in-the-Middle Attack:</strong> The attack involves intercepting encrypted communications, making DROWN a type of man-in-the-middle attack.</li> </ul>",MEDIUM,,"To mitigate the risks associated with the DROWN (Decrypting RSA with Obsolete and Weakened eNcryption) attack and protect against vulnerabilities in SSLv2, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Disable SSLv2 Support:</strong> Ensure that servers do not support the outdated SSLv2 protocol. Disabling SSLv2 helps eliminate the primary vector for the DROWN attack.</li> <li><strong>Use Modern Encryption Protocols:</strong> Upgrade to modern encryption protocols such as TLS 1.2 or TLS 1.3, which provide stronger security and are not susceptible to the DROWN attack.</li> <li><strong>Separate RSA Keys:</strong> Avoid sharing RSA keys across multiple servers, especially if any server supports SSLv2. Unique RSA keys for each server help prevent the attack's spread.</li> </ul>",5.9,AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-310: Cryptographic Issues,list
Potentially Vulnerable To LOGJAM,"A system is potentially vulnerable to the Logjam attack when it supports weak Diffie-Hellman (DH) key exchange parameters, particularly small or non-random prime numbers. Logjam is a cryptographic attack that targets the Diffie-Hellman key exchange protocol and allows attackers to downgrade secure connections and break the encryption to intercept and manipulate data. <p class=""pt-2"">The attack leverages a vulnerability in the key exchange process to downgrade secure connections to use weak DH parameters. When a server supports weak DH groups, attackers can perform a man-in-the-middle attack to downgrade the connection and exploit the key exchange process. This can lead to the compromise of secure communications.</p>","<ul class=""list-disc""> <li><strong>Weak DH Parameters:</strong> The attack targets the use of small or non-random prime numbers in the DH key exchange process, which are easier to factorize and compromise.</li> <li><strong>Man-in-the-Middle Attacks:</strong> Attackers can perform a man-in-the-middle attack to intercept and manipulate the key exchange process, downgrading the connection to use weak DH parameters.</li> <li><strong>Compromise of Secure Communications:</strong> By compromising the key exchange, attackers can decrypt secure communications, exposing sensitive data such as encryption keys, session tokens, or user credentials.</li> <li><strong>Downgrade Attacks:</strong> Attackers can force connections to use weak DH parameters even if the client and server support stronger parameters.</li> </ul>",LOW,,"To mitigate the risks associated with the Logjam attack and protect against vulnerabilities in Diffie-Hellman (DH) key exchange, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Use Strong DH Parameters:</strong> Ensure that the server supports only secure and strong Diffie-Hellman parameters, such as large prime numbers (at least 2048 bits). This makes it more difficult for attackers to compromise the key exchange.</li> <li><strong>Upgrade to Modern Cryptographic Protocols:</strong> Use modern cryptographic protocols such as TLS 1.2 or TLS 1.3, which use stronger encryption algorithms and do not support weak DH parameters.</li> <li><strong>Disable Export-Grade Cipher Suites:</strong> Avoid using export-grade or weak cipher suites that may use small DH parameters. Modern servers should use secure cipher suites and avoid any that allow for insecure key exchanges.</li> <li><strong>Secure DH Parameter Generation:</strong> Generate and use secure, large, and safe prime numbers for DH parameters. Avoid using commonly used or publicly known prime numbers.</li> <li><strong>Monitor and Audit:</strong> Continuously monitor and audit your cryptographic configurations to ensure compliance with security best practices and prevent the use of weak DH parameters.</li> <li><strong>Configure Server Security Settings:</strong> Check and update server configurations to ensure they do not support legacy protocols or insecure DH parameters. This may involve updating software, adjusting configurations, and reviewing cipher suite preferences.</li> <li><strong>Implement Certificate Pinning:</strong> Use certificate pinning to ensure the integrity of SSL/TLS connections, protecting against man-in-the-middle attacks and downgrades.</li> </ul>",3.7,AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L,CWE-310: Cryptographic Issues,list
Potentially Vulnerable To BEAST,"A system is potentially vulnerable to the BEAST (Browser Exploit Against SSL/TLS) attack when it uses the TLS 1.0 or SSL 3.0 protocols with cipher block chaining (CBC) mode encryption. BEAST is a cryptographic attack that exploits a vulnerability in the way the protocols handle CBC mode, allowing attackers to decrypt encrypted data and potentially expose sensitive information. <p class=""pt-2"">The attack works by intercepting encrypted communications between a client and server and manipulating the initialization vector (IV) of the CBC mode to decrypt data one byte at a time. By observing the decrypted data, attackers can recover plaintext information from the encrypted messages.</p>","The impact of vulnerability to the BEAST (Browser Exploit Against SSL/TLS) attack can be significant: <ul class=""list-disc pt-2 pl-4""> <li><strong>Decryption of Encrypted Data:</strong> Attackers can exploit the BEAST vulnerability to decrypt encrypted communications, exposing sensitive information such as session cookies, user credentials, or financial data.</li> <li><strong>Session Hijacking:</strong> By decrypting session cookies, attackers can hijack user sessions and gain unauthorized access to accounts, potentially compromising user data and activities.</li> <li><strong>Loss of Confidentiality:</strong> Successful exploitation of the BEAST attack compromises the confidentiality of encrypted communications, leading to data breaches and exposure of sensitive information.</li> <li><strong>Man-in-the-Middle Attacks:</strong> Attackers can perform man-in-the-middle attacks by intercepting and manipulating data in transit. This can lead to data tampering or injection of malicious content.</li> <li><strong>Privacy Violations:</strong> The exposure of encrypted data can lead to privacy violations, affecting both individual users and organizations.</li> </ul>",LOW,,"To mitigate the risks associated with the BEAST (Browser Exploit Against SSL/TLS) attack and protect against vulnerabilities in TLS 1.0 or SSL 3.0 with cipher block chaining (CBC) mode encryption, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Upgrade to Modern Encryption Protocols:</strong> Transition to TLS 1.2 or later protocols that do not support the weak encryption methods vulnerable to BEAST. Modern protocols offer improved security features and are not susceptible to the BEAST attack.</li> <li><strong>Avoid CBC Mode in Encryption:</strong> Use encryption modes that are resistant to the BEAST attack, such as Galois/Counter Mode (GCM) or Counter Mode (CTR), instead of CBC mode.</li> <li><strong>Disable SSL 3.0 and TLS 1.0:</strong> Disable outdated SSL 3.0 and TLS 1.0 protocols on servers and clients. Ensure that your servers and clients support only TLS 1.2 or later.</li> <li><strong>Configure Secure Cipher Suites:</strong> Choose and prioritize strong cipher suites for SSL/TLS connections that use modern encryption modes. Avoid weak or deprecated cipher suites that support vulnerable encryption methods.</li> <li><strong>Review Third-Party Dependencies:</strong> If your systems rely on third-party services or dependencies, ensure they adhere to security best practices and do not use vulnerable protocols or encryption methods.</li> </ul>",3.7,AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L,CWE-326: Inadequate Encryption Strength,list
Potentially Vulnerable To RC4,"A system is potentially vulnerable to attacks when it uses the RC4 encryption algorithm, particularly in SSL/TLS connections. RC4 is a stream cipher that has been widely used in the past due to its speed and simplicity. However, RC4 has known vulnerabilities, including biases in its keystream that can be exploited by attackers to recover plaintext data. <p class=""pt-2"">The use of RC4 in SSL/TLS connections can compromise the confidentiality and integrity of encrypted communications. Attackers can leverage weaknesses in the RC4 algorithm to perform attacks such as:</p> <ul class=""list-disc pt-2 pl-4""> <li><strong>Ciphertext Analysis:</strong> By analyzing the keystream biases in the RC4 encryption, attackers can gradually recover portions of the plaintext data, potentially exposing sensitive information such as session cookies, user credentials, or financial data.</li> <li><strong>Man-in-the-Middle Attacks:</strong> Attackers can perform man-in-the-middle attacks by intercepting encrypted communications and exploiting the biases in the RC4 keystream.</li> <li><strong>Data Decryption:</strong> Successful exploitation of the RC4 vulnerabilities can lead to the decryption of encrypted data, resulting in exposure of sensitive information.</li> </ul>","The impact of using the RC4 encryption algorithm in SSL/TLS connections can be significant due to its known vulnerabilities: <ul class=""list-disc pt-2 pl-4""> <li><strong>Decryption of Encrypted Data:</strong> Attackers can exploit weaknesses in the RC4 keystream to decrypt encrypted data, exposing sensitive information such as session cookies, user credentials, financial data, or personal data.</li> <li><strong>Data Interception and Manipulation:</strong> Once attackers gain access to encrypted data, they can intercept and manipulate communications, leading to potential data tampering or man-in-the-middle attacks.</li> <li><strong>Loss of Confidentiality:</strong> The compromise of encrypted data can lead to a loss of confidentiality, exposing users and organizations to data breaches and privacy violations.</li> <li><strong>Session Hijacking:</strong> Attackers can hijack user sessions by decrypting session cookies, potentially gaining unauthorized access to accounts and performing actions on behalf of the user.</li> <li><strong>Privacy Violations:</strong> The exposure of encrypted data can lead to privacy violations, affecting both individual users and organizations.</li> </ul>",MEDIUM,,"To mitigate the risks associated with using the RC4 encryption algorithm in SSL/TLS connections, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Disable RC4 Support:</strong> Ensure that servers and clients do not support the RC4 encryption algorithm in SSL/TLS connections. By disabling RC4, you eliminate its known vulnerabilities and use more secure algorithms.</li> <li><strong>Use Modern Encryption Algorithms:</strong> Upgrade to modern and secure encryption algorithms such as AES, which offer stronger security and are not susceptible to the vulnerabilities associated with RC4.</li> <li><strong>Prioritize Strong Cipher Suites:</strong> Configure servers to prioritize and use strong cipher suites that use secure encryption algorithms like AES. Avoid weak or deprecated cipher suites that include RC4.</li> </ul>",5.9,AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-326: Inadequate Encryption Strength,list
Non Compliant TLS Enabled,"A system is potentially vulnerable due to non-compliant TLS configurations when it uses outdated, insecure, or incorrectly implemented TLS protocols and cipher suites. TLS (Transport Layer Security) is the standard protocol for securing data in transit, but its effectiveness relies on using modern and compliant configurations. <p class=""pt-2"">A non-compliant TLS configuration can occur in several ways:<p/> <ul class=""list-disc pt-2 pl-4""> <li><strong>Outdated Protocols:</strong> The system may use older versions of TLS (e.g., TLS 1.0 or TLS 1.1), which have known vulnerabilities and are considered insecure. Modern protocols like TLS 1.2 and TLS 1.3 are more secure and should be used instead.</li> <li><strong>Weak Cipher Suites:</strong> The system may support weak or deprecated cipher suites that use vulnerable encryption methods (e.g., RC4) or small key lengths. These cipher suites can be exploited by attackers to decrypt communications or perform other attacks.</li> <li><strong>Improper Configurations:</strong> TLS configurations that do not adhere to security best practices, such as using default settings, missing security headers, or improper certificate management, can leave the system exposed to various attacks.</li> <li><strong>Lack of Forward Secrecy:</strong> The system may lack support for cipher suites that provide forward secrecy, which ensures that session keys are not compromised even if the private key is exposed.</li> <li><strong>Insecure Certificate Management:</strong> The system may use weak or self-signed certificates, or may not properly verify certificates, exposing it to man-in-the-middle attacks.</li> </ul>","<ul class=""list-disc""> <li><strong>Data Interception and Decryption:</strong> Attackers can exploit vulnerabilities in non-compliant TLS configurations to intercept and decrypt encrypted communications, exposing sensitive information.</li> <li><strong>Man-in-the-Middle Attacks:</strong> Weak or improperly configured TLS can allow attackers to perform man-in-the-middle attacks, intercepting and manipulating data in transit.</li> <li><strong>Loss of Confidentiality and Integrity:</strong> Non-compliant TLS configurations can compromise the confidentiality and integrity of communications, leading to data breaches and privacy violations.</li> <li><strong>Compliance Violations:</strong> Using non-compliant TLS configurations may result in violations of data protection regulations and industry standards, potentially leading to legal and financial consequences.</li> </ul>",MEDIUM,The following non-compliant TLS versions are enabled:,"To mitigate the risks associated with enabling non-compliant TLS versions, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Disable Outdated TLS Versions:</strong> Disable support for outdated TLS versions such as TLS 1.0 and TLS 1.1 on servers and clients. This ensures that only secure, modern TLS versions like TLS 1.2 and TLS 1.3 are used.</li> <li><strong>Use Strong Cipher Suites:</strong> Configure servers to use strong, modern cipher suites that offer secure encryption and authentication. Avoid weak or deprecated cipher suites that may pose security risks.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N,CWE-326: Inadequate Encryption Strength,list
Vulnerable to Lucky13,"A system is potentially vulnerable due to non-compliant TLS configurations when it uses outdated, insecure, or incorrectly implemented TLS protocols and cipher suites. TLS (Transport Layer Security) is the standard protocol for securing data in transit, but its effectiveness relies on using modern and compliant configurations. <p class=""pt-2"">A non-compliant TLS configuration can occur in several ways:<p/> <ul+B25> <li><strong>Outdated Protocols:</strong> The system may use older versions of TLS (e.g., TLS 1.0 or TLS 1.1), which have known vulnerabilities and are considered insecure. Modern protocols like TLS 1.2 and TLS 1.3 are more secure and should be used instead.</li> <li><strong>Weak Cipher Suites:</strong> The system may support weak or deprecated cipher suites that use vulnerable encryption methods (e.g., RC4) or small key lengths. These cipher suites can be exploited by attackers to decrypt communications or perform other attacks.</li> <li><strong>Improper Configurations:</strong> TLS configurations that do not adhere to security best practices, such as using default settings, missing security headers, or improper certificate management, can leave the system exposed to various attacks.</li> <li><strong>Lack of Forward Secrecy:</strong> The system may lack support for cipher suites that provide forward secrecy, which ensures that session keys are not compromised even if the private key is exposed.</li> <li><strong>Insecure Certificate Management:</strong> The system may use weak or self-signed certificates, or may not properly verify certificates, exposing it to man-in-the-middle attacks.</li> </ul>","The impact of vulnerability to the Lucky13 attack can be significant due to its ability to compromise the confidentiality and integrity of encrypted data: <ul class=""list-disc pt-2 pl-4""> <li><strong>Decryption of Encrypted Data:</strong> Attackers can exploit the Lucky13 vulnerability to decrypt encrypted data, potentially exposing sensitive information such as session cookies, user credentials, financial data, or other confidential information.</li> <li><strong>Loss of Confidentiality:</strong> The successful decryption of data compromises the confidentiality of secure communications, leading to data breaches and exposure of sensitive information.</li> <li><strong>Session Hijacking:</strong> Attackers can hijack user sessions by decrypting session cookies, potentially gaining unauthorized access to accounts and performing actions on behalf of the user.</li> <li><strong>Man-in-the-Middle Attacks:</strong> The attack can involve intercepting encrypted communications, allowing attackers to perform man-in-the-middle attacks and manipulate data in transit.</li> <li><strong>Privacy Violations:</strong> The exposure of encrypted data can lead to privacy violations, affecting both individual users and organizations.</li> </ul>",MEDIUM,Here is a list of all the weak cipher suites used by the server:,"To mitigate the risks associated with the Lucky13 attack and protect against vulnerabilities in TLS with CBC mode encryption, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Upgrade to Modern TLS Versions:</strong> Use TLS 1.2 or later, which includes stronger security features and improved handling of padding verification, reducing the risk of timing attacks.</li> <li><strong>Use Authenticated Encryption Modes:</strong> Choose cipher suites that use authenticated encryption modes such as AES-GCM (Galois/Counter Mode) or AES-CCM (Counter with CBC-MAC) instead of CBC mode. These modes provide confidentiality and integrity protection and are not vulnerable to Lucky13.</li> <li><strong>Disable Older TLS Versions:</strong> Disable support for older TLS versions such as TLS 1.0 and 1.1, which may use vulnerable encryption modes and have other weaknesses.</li> <li><strong>Timing Obfuscation:</strong> Implement timing obfuscation techniques in the padding verification process to reduce observable timing discrepancies. This can make it more difficult for attackers to exploit timing differences.</li> </ul>",5.6,AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N,CWE-208: Observable Timing Discrepancy,lucky13
Xml-Rpc Seems To Be Enabled,"A system is potentially vulnerable when it enables XML-RPC (Remote Procedure Call) for web applications, such as those built on the WordPress platform. XML-RPC is a protocol that allows clients to make remote calls to a server, enabling actions such as posting comments or creating new posts. However, enabling XML-RPC can pose security risks, particularly if not properly secured or if used inappropriately.","<ul class=""list-disc""> <li><strong>Brute-Force Attacks:</strong> XML-RPC can support batch requests, allowing attackers to perform multiple login attempts in a single request. This can facilitate brute-force attacks against user accounts.</li> <li><strong>Amplification Attacks:</strong> Attackers can exploit XML-RPC to launch distributed denial-of-service (DDoS) attacks, using the server as an amplifier to overwhelm a target with requests.</li> <li><strong>Unintended Actions:</strong> If not properly secured, XML-RPC can allow attackers to perform actions such as creating posts, publishing comments, or manipulating data on the server.</li> <li><strong>Information Disclosure:</strong> Vulnerable XML-RPC implementations may leak information about the server or application, aiding attackers in gathering intelligence for further attacks.</li> </ul>",MEDIUM,,"To mitigate the risks associated with enabling XML-RPC, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Disable XML-RPC:</strong> If XML-RPC functionality is not required for your application, disable it on the server to eliminate the associated risks.</li> <li><strong>Implement Access Controls:</strong> Secure access to XML-RPC by limiting the IP addresses and clients that can connect to the server. Use firewalls, IP whitelisting, and other access control mechanisms to restrict access.</li> <li><strong>Use Strong Authentication:</strong> If XML-RPC must be enabled, require strong authentication methods, such as multi-factor authentication (MFA), to protect against unauthorized access.</li> <li><strong>Rate Limiting and Throttling:</strong> Implement rate limiting and throttling on XML-RPC requests to prevent abuse, such as brute-force attacks or DDoS amplification.</li> </ul>",5.3,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,xml_rpc
Debug Log found,"A debug log found on a server or application may pose security risks if it contains sensitive information or is accessible to unauthorized parties. Debug logs are used by developers and system administrators to troubleshoot issues, track the behavior of an application, and diagnose errors. However, these logs can inadvertently expose sensitive data or information about the system's internal workings.","<ul class=""list-disc""> <li><strong>Sensitive Information Exposure:</strong> Debug logs may contain sensitive data such as user credentials, session tokens, API keys, or other confidential information that can be misused by attackers.</li> <li><strong>Internal System Information:</strong> Logs often include details about the system's architecture, code, or application behavior, which can aid attackers in understanding the system and planning targeted attacks.</li> <li><strong>Error Messages:</strong> Debug logs may include detailed error messages that reveal information about vulnerabilities or weaknesses in the application, such as stack traces.</li> <li><strong>Privacy Violations:</strong> Exposure of personal or sensitive information in debug logs can lead to privacy violations, affecting both individual users and organizations.</li> <li><strong>Accessibility of Logs:</strong> If debug logs are accessible to unauthorized parties, either through a web interface or insecure file permissions, they can be exploited for attacks.</li> </ul>",HIGH,,"To disable WordPress debug mode make the following change in <strong>wp-config.php</strong>: <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs w-fit italic""> <p>define('WP_DEBUG', false);</p> </div> </div>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,list
Outdated Wordpress Version Being Used,"The use of an outdated WordPress version can pose significant security risks to a website or web application. WordPress is one of the most popular content management systems (CMS) and powers a large portion of websites worldwide. However, using an outdated version of WordPress can leave a system vulnerable to known security issues and exploits.","Key points about the risks associated with using an outdated WordPress version include: <ul class=""list-disc pt-2 pl-4""> <li><strong>Known Vulnerabilities:</strong> Outdated WordPress versions may contain known security vulnerabilities that have been addressed in more recent releases. Attackers can exploit these weaknesses to compromise the website.</li> <li><strong>Exploitation of Plugins and Themes:</strong> Outdated WordPress versions may lack compatibility with modern plugins and themes. If plugins and themes are also outdated, they can introduce additional vulnerabilities to the system.</li> <li><strong>Compatibility Issues:</strong> Older WordPress versions may lack support for newer technologies or features, potentially causing compatibility issues with other software and services.</li> <li><strong>Missing Security Features:</strong> Newer WordPress versions often include security enhancements and features that are not available in older versions, leaving the system at greater risk.</li> <li><strong>Poor Performance and Reliability:</strong> Outdated WordPress versions may result in poor website performance and reliability, impacting user experience.</li> <li><strong>Compliance Violations:</strong> Using outdated software can lead to non-compliance with security and data protection regulations, resulting in legal and financial consequences.</li> </ul>",MEDIUM,The outdated WordPress version in use is:,"To mitigate the risks associated with using an outdated WordPress version, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Update to the Latest Version:</strong> Regularly update WordPress to the latest stable release. New versions often include security patches and improvements that protect against known vulnerabilities.</li> <li><strong>Update Plugins and Themes:</strong> Ensure that all plugins and themes are up to date and compatible with the latest WordPress version. Outdated plugins and themes can introduce vulnerabilities.</li> <li><strong>Use Strong Access Controls:</strong> Implement strong access controls to protect sensitive areas of the website. Use roles and permissions appropriately to limit access to only what is necessary.</li> <li><strong>Enable Automatic Updates:</strong> Enable automatic updates for WordPress, plugins, and themes if possible. This helps ensure that the website remains up to date with the latest security patches.</li> <li><strong>Implement Security Plugins:</strong> Use reputable security plugins to help secure the WordPress installation. These plugins can provide additional protection against attacks such as brute-force login attempts and malware.</li> </ul>",4.8,AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N,CWE-937: Use of Components with Known Vulnerabilities,list
Wordpress Version With Known Vulnerabilities,"A system that uses a WordPress version with known vulnerabilities can pose significant security risks to a website or web application. WordPress is one of the most widely used content management systems (CMS), but using an outdated version with known vulnerabilities can make the system susceptible to exploitation. <p class=""pt-2"">When a WordPress version has known vulnerabilities, attackers can take advantage of these weaknesses to compromise the website and its data. These vulnerabilities may include:</p> <ul class=""list-disc pt-2 pl-4""> <li><strong>Remote Code Execution:</strong> Attackers may execute arbitrary code on the server hosting WordPress, gaining control over the system and potentially deploying malware.</li> <li><strong>SQL Injection:</strong> Vulnerabilities in the WordPress version may allow attackers to manipulate database queries, leading to data theft, modification, or destruction.</li> <li><strong>Cross-Site Scripting (XSS):</strong> Attackers can inject malicious scripts into the website, potentially impacting visitors' experience and security.</li> <li><strong>Cross-Site Request Forgery (CSRF):</strong> Attackers may exploit vulnerabilities to trick users into performing unintended actions on the website.</li> <li><strong>Unauthorized Access:</strong> Weaknesses in the WordPress version may enable attackers to gain unauthorized access to the website or admin panel.</li> <li><strong>Information Disclosure:</strong> Vulnerabilities can lead to unintended exposure of sensitive information, such as user credentials, personal data, or application configurations.</li> </ul>","The impact of using a WordPress version with known vulnerabilities can be significant and may include the following: <ul class=""list-disc pt-2 pl-4""> <li><strong>Remote Code Execution:</strong> Attackers can exploit vulnerabilities to execute arbitrary code on the server hosting the WordPress site, potentially gaining full control over the system.</li> <li><strong>Data Breach:</strong> Vulnerabilities in WordPress can allow attackers to access and exfiltrate sensitive data such as user credentials, personal information, and financial data.</li> <li><strong>Website Defacement:</strong> Attackers may modify the website's content, replacing it with their own messages or malicious content, damaging the site's reputation.</li> <li><strong>Malware Injection:</strong> Attackers may inject malware into the website, leading to further compromise of the site and potential harm to visitors' devices.</li> <li><strong>Cross-Site Scripting (XSS):</strong> Vulnerabilities may allow attackers to inject malicious scripts into the website, affecting the site's visitors and potentially stealing their data.</li> <li><strong>Cross-Site Request Forgery (CSRF):</strong> Attackers may exploit vulnerabilities to trick users into performing unintended actions on the website, such as changing account settings or making unauthorized purchases.</li> <li><strong>Denial of Service (DoS):</strong> Vulnerabilities can be exploited to launch denial-of-service attacks, disrupting the availability of the website for legitimate users.</li> <li><strong>Loss of Trust and Reputation:</strong> Security incidents resulting from the use of a vulnerable WordPress version can damage the website's reputation and erode trust among users and stakeholders.</li> <li><strong>Compliance Violations:</strong> Using a WordPress version with known vulnerabilities can result in non-compliance with data protection regulations and industry standards, potentially leading to legal and financial consequences.</li> </ul>",HIGH,Here is a list of all the vulnerabilities associated with the outdated WordPress version:,"To mitigate the risks associated with using a WordPress version with known vulnerabilities, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Update WordPress Regularly:</strong> Regularly update WordPress to the latest stable version. New versions often include security patches and improvements that protect against known vulnerabilities.</li> <li><strong>Update Plugins and Themes:</strong> Ensure all plugins and themes are up to date and compatible with the latest WordPress version. Outdated plugins and themes can introduce vulnerabilities.</li> <li><strong>Use Reputable Plugins and Themes:</strong> Only use plugins and themes from reputable sources and verified developers. Check reviews and ratings before installing any new plugins or themes.</li> <li><strong>Limit Admin Access:</strong> Restrict access to the WordPress admin panel and sensitive functionalities to only trusted individuals. Use strong, unique passwords for admin accounts and consider enabling multi-factor authentication (MFA).</li> <li><strong>Use Security Plugins:</strong> Install reputable security plugins that offer features such as firewalls, malware scanning, and intrusion detection. These plugins can help protect the website against attacks.</li> </ul>",8.8,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-937: Use of Components with Known Vulnerabilities,wordpress_vuln
Outdated Wordpress Themes Being Used,"Using outdated WordPress themes can pose significant security risks to a website or web application. WordPress themes control the appearance and layout of a website, but when themes are not kept up to date, they can introduce vulnerabilities and potentially compromise the website's security.","<ul class=""list-disc""> <li><strong>Known Vulnerabilities:</strong> Outdated themes may contain known security vulnerabilities that have been patched in newer versions. Attackers can exploit these vulnerabilities to gain unauthorized access to the website or manipulate its content.</li> <li><strong>Malicious Code Injection:</strong> Older themes may be susceptible to code injection attacks, allowing attackers to insert malicious scripts or code into the website.</li> <li><strong>Compatibility Issues:</strong> Outdated themes may lack compatibility with newer versions of WordPress, plugins, or other themes, potentially causing security issues or website malfunctions.</li> <li><strong>Information Disclosure:</strong> Vulnerabilities in outdated themes may inadvertently expose sensitive information about the website or its users, aiding attackers in planning targeted attacks.</li> <li><strong>Defacement or Tampering:</strong> Attackers may exploit vulnerabilities in outdated themes to deface the website, manipulate its content, or alter its functionality.</li> </ul>",MEDIUM,Here is a list of all the outdated WordPress Themes:,"<ul class=""list-disc""> <li><strong>Update Themes Regularly:</strong> Regularly update WordPress themes to the latest versions. Newer versions often include security patches and improvements that protect against known vulnerabilities.</li> <li><strong>Choose Reputable Themes:</strong> Use themes from reputable sources and verified developers. Check reviews, ratings, and support for themes before using them to ensure they meet security standards.</li> <li><strong>Remove Unused Themes:</strong> Remove any inactive or unused themes from the website. This reduces the attack surface and minimizes the risk of vulnerabilities from old, unmaintained themes.</li> <li><strong>Implement Strong Access Controls:</strong> Limit access to theme files and settings to only trusted administrators. Secure theme files with appropriate file permissions.</li> </ul>",4.8,AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N,CWE-937: Use of Components with Known Vulnerabilities,list
Wordpress Theme With Known Vulnerabilities,"A WordPress theme with known vulnerabilities can pose significant security risks to a website or web application. Themes control the appearance and layout of a WordPress site, but when they contain vulnerabilities, attackers can exploit them to compromise the security and integrity of the website.","<ul class=""list-disc""> <li><strong>Remote Code Execution:</strong> Attackers can exploit vulnerabilities to execute arbitrary code on the server hosting the WordPress site, potentially gaining full control over the system.</li> <li><strong>Data Breach:</strong> Vulnerabilities in WordPress can allow attackers to access and exfiltrate sensitive data such as user credentials, personal information, and financial data.</li> <li><strong>Website Defacement:</strong> Attackers may modify the website's content, replacing it with their own messages or malicious content, damaging the site's reputation.</li> <li><strong>Malware Injection:</strong> Attackers may inject malware into the website, leading to further compromise of the site and potential harm to visitors' devices.</li> <li><strong>Cross-Site Scripting (XSS):</strong> Vulnerabilities may allow attackers to inject malicious scripts into the website, affecting the site's visitors and potentially stealing their data.</li> <li><strong>Cross-Site Request Forgery (CSRF):</strong> Attackers may exploit vulnerabilities to trick users into performing unintended actions on the website, such as changing account settings or making unauthorized purchases.</li> <li><strong>Denial of Service (DoS):</strong> Vulnerabilities can be exploited to launch denial-of-service attacks, disrupting the availability of the website for legitimate users.</li> <li><strong>Loss of Trust and Reputation:</strong> Security incidents resulting from the use of a vulnerable WordPress version can damage the website's reputation and erode trust among users and stakeholders.</li> <li><strong>Compliance Violations:</strong> Using a WordPress version with known vulnerabilities can result in non-compliance with data protection regulations and industry standards, potentially leading to legal and financial consequences.</li> </ul>",HIGH,Here is a list of all the vulnerabilities related to the outdated version of WordPress themes:,"To mitigate the risks associated with using a Wordpress Theme With Known Vulnerabilities, consider implementing the following suggested fixes: <ul class=""list-disc""> <li><strong>Update Themes Regularly:</strong> Regularly update WordPress themes to the latest versions. Newer versions often include security patches and improvements that protect against known vulnerabilities.</li> <li><strong>Choose Reputable Themes:</strong> Use themes from reputable sources and verified developers. Check reviews, ratings, and support for themes before using them to ensure they meet security standards.</li> <li><strong>Remove Unused Themes:</strong> Remove any inactive or unused themes from the website. This reduces the attack surface and minimizes the risk of vulnerabilities from old, unmaintained themes.</li> <li><strong>Implement Strong Access Controls:</strong> Limit access to theme files and settings to only trusted administrators. Secure theme files with appropriate file permissions.</li> </ul>",8.8,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-937: Use of Components with Known Vulnerabilities,wordpress_vuln
Outdated Wordpress Plugins Being Used,"Using outdated WordPress plugins can pose significant security risks to a website or web application. WordPress plugins add functionality and features to a website, but when they are not kept up to date, they can introduce vulnerabilities and potentially compromise the security of the site.","<ul class=""list-disc""> <li><strong>Remote Code Execution:</strong> Attackers can exploit vulnerabilities to execute arbitrary code on the server hosting the WordPress site, potentially gaining full control over the system.</li> <li><strong>Data Breach:</strong> Vulnerabilities in WordPress can allow attackers to access and exfiltrate sensitive data such as user credentials, personal information, and financial data.</li> <li><strong>Website Defacement:</strong> Attackers may modify the website's content, replacing it with their own messages or malicious content, damaging the site's reputation.</li> <li><strong>Malware Injection:</strong> Attackers may inject malware into the website, leading to further compromise of the site and potential harm to visitors' devices.</li> <li><strong>Cross-Site Scripting (XSS):</strong> Vulnerabilities may allow attackers to inject malicious scripts into the website, affecting the site's visitors and potentially stealing their data.</li> <li><strong>Cross-Site Request Forgery (CSRF):</strong> Attackers may exploit vulnerabilities to trick users into performing unintended actions on the website, such as changing account settings or making unauthorized purchases.</li> <li><strong>Denial of Service (DoS):</strong> Vulnerabilities can be exploited to launch denial-of-service attacks, disrupting the availability of the website for legitimate users.</li> <li><strong>Loss of Trust and Reputation:</strong> Security incidents resulting from the use of a vulnerable WordPress version can damage the website's reputation and erode trust among users and stakeholders.</li> <li><strong>Compliance Violations:</strong> Using a WordPress version with known vulnerabilities can result in non-compliance with data protection regulations and industry standards, potentially leading to legal and financial consequences.</li> </ul>",MEDIUM,Here is a list of all the outdated WordPress Plugins:,"To mitigate the risks associated with using outdated WordPress plugins, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Update Plugins Regularly:</strong> Regularly update all WordPress plugins to the latest stable versions. Newer versions often include security patches and improvements that protect against known vulnerabilities.</li> <li><strong>Use Reputable Plugins:</strong> Choose plugins from reputable sources and verified developers. Check reviews, ratings, and support before installing any new plugins to ensure they meet security standards.</li> <li><strong>Remove Unused or Inactive Plugins:</strong> Remove any plugins that are no longer in use or have been deactivated. This reduces the attack surface and minimizes the risk of vulnerabilities from old, unmaintained plugins.</li> <li><strong>Implement Access Controls:</strong> Use strong access controls and permissions for plugins to limit their access to only necessary functionalities and data.</li> </ul>",4.8,AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N,CWE-937: Use of Components with Known Vulnerabilities,list
Wordpress Plugin With Known Vulnerabilities,"Using a WordPress plugin with known vulnerabilities can pose significant security risks to a website or web application. Plugins add functionality and features to a WordPress site, but when a plugin contains known vulnerabilities, attackers can exploit them to compromise the website's security.","<ul class=""list-disc""> <li><strong>Remote Code Execution:</strong> Attackers can exploit vulnerabilities to execute arbitrary code on the server hosting the WordPress site, potentially gaining full control over the system.</li> <li><strong>Data Breach:</strong> Vulnerabilities in WordPress can allow attackers to access and exfiltrate sensitive data such as user credentials, personal information, and financial data.</li> <li><strong>Website Defacement:</strong> Attackers may modify the website's content, replacing it with their own messages or malicious content, damaging the site's reputation.</li> <li><strong>Malware Injection:</strong> Attackers may inject malware into the website, leading to further compromise of the site and potential harm to visitors' devices.</li> <li><strong>Cross-Site Scripting (XSS):</strong> Vulnerabilities may allow attackers to inject malicious scripts into the website, affecting the site's visitors and potentially stealing their data.</li> <li><strong>Cross-Site Request Forgery (CSRF):</strong> Attackers may exploit vulnerabilities to trick users into performing unintended actions on the website, such as changing account settings or making unauthorized purchases.</li> <li><strong>Denial of Service (DoS):</strong> Vulnerabilities can be exploited to launch denial-of-service attacks, disrupting the availability of the website for legitimate users.</li> <li><strong>Loss of Trust and Reputation:</strong> Security incidents resulting from the use of a vulnerable WordPress version can damage the website's reputation and erode trust among users and stakeholders.</li> <li><strong>Compliance Violations:</strong> Using a WordPress version with known vulnerabilities can result in non-compliance with data protection regulations and industry standards, potentially leading to legal and financial consequences.</li> </ul>",HIGH,Here is a list of all the vulnerabilities related to the outdated version of WordPress Plugins:,"To mitigate the risks associated with Wordpress Plugin With Known Vulnerabilities, consider implementing the following suggested fixes: <ul class=""list-disc pt-2 pl-4""> <li><strong>Update Plugins Regularly:</strong> Regularly update all WordPress plugins to the latest stable versions. Newer versions often include security patches and improvements that protect against known vulnerabilities.</li> <li><strong>Use Reputable Plugins:</strong> Choose plugins from reputable sources and verified developers. Check reviews, ratings, and support before installing any new plugins to ensure they meet security standards.</li> <li><strong>Remove Unused or Inactive Plugins:</strong> Remove any plugins that are no longer in use or have been deactivated. This reduces the attack surface and minimizes the risk of vulnerabilities from old, unmaintained plugins.</li> <li><strong>Implement Access Controls:</strong> Use strong access controls and permissions for plugins to limit their access to only necessary functionalities and data.</li> </ul>",8.8,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-937: Use of Components with Known Vulnerabilities,wordpress_vuln
Wordpress Config Backup File Discovered,"The discovery of a WordPress configuration backup file on a server or web application can pose significant security risks. Configuration backup files often contain sensitive information such as database credentials, API keys, and other internal settings necessary for the website's operation. If attackers gain access to these files, they can use the information to compromise the website or the server.","<ul class=""list-disc""> <li><strong>Sensitive Information Exposure:</strong> Backup files may contain database connection details, usernames, passwords, and API keys. Exposure of this information can lead to data breaches and unauthorized access.</li> <li><strong>Unauthorized Access:</strong> Attackers can use the credentials and settings found in the backup file to gain unauthorized access to the database, website, or server.</li> <li><strong>Information Disclosure:</strong> Configuration files may reveal internal details about the website's architecture, plugins, and themes, aiding attackers in planning targeted attacks.</li> <li><strong>Code Injection:</strong> Attackers may modify the configuration backup file to include malicious code, which can lead to code execution vulnerabilities and compromise the website.</li> </ul>",MEDIUM,,"To mitigate the risks associated with the discovery of a WordPress configuration backup file, organizations should secure these files and follow best practices for data protection: <ul class=""list-disc pt-2 pl-4""> <li><strong>Secure Backup Files:</strong> Store configuration backup files in secure, non-public directories with strong access controls. Use encryption to protect sensitive data within the files.</li> <li><strong>Limit File Accessibility:</strong> Restrict access to configuration files to only authorized personnel. Use appropriate file permissions to prevent unauthorized access.</li> <li><strong>Monitor and Audit:</strong> Monitor for unauthorized access to backup files and audit logs regularly for signs of suspicious activity.</li> <li><strong>Review Backup Practices:</strong> Regularly review backup practices to ensure that sensitive data is protected, and unnecessary backups are removed.</li> <li><strong>Use Secure Backup Solutions:</strong> Utilize backup solutions that offer encryption and secure storage options to protect configuration files.</li> </ul>",5.3,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-538: Insertion of Sensitive Information into Externally-Accessible File or Directory,list
Wordpress Users Discovered,"The discovery of WordPress user data can pose security risks to a website or web application. User data often includes sensitive information such as usernames, email addresses, and roles, and may also include personal data depending on the website's setup. If attackers gain access to this information, they can use it to compromise user accounts or launch targeted attacks.","<ul class=""list-disc""> <li><strong>Unauthorized Access:</strong> Attackers may use the discovered user data to attempt unauthorized access to user accounts, particularly if users have weak passwords.</li> <li><strong>Brute-Force Attacks:</strong> The exposure of usernames can facilitate brute-force attacks on user accounts, as attackers already have part of the necessary login information.</li> <li><strong>Phishing and Social Engineering:</strong> Attackers can use user data to craft targeted phishing attacks or social engineering schemes, deceiving users into providing additional information or access.</li> <li><strong>Privilege Escalation:</strong> Attackers may discover user roles and privileges, allowing them to identify high-privilege accounts to target for further attacks.</li> <li><strong>Information Disclosure:</strong> Exposure of user data can lead to privacy violations, affecting individual users' personal data and overall trust in the website.</li> </ul>",INFO,List of all Usernames enumerated:,"To mitigate the risks associated with the discovery of WordPress user data, organizations should take measures to secure user information and follow best practices for data protection: <ul class=""list-disc pt-2 pl-4""> <li><strong>Secure User Data:</strong> Protect user data with encryption both at rest and in transit. Store only necessary user information and minimize data exposure.</li> <li><strong>Implement Strong Authentication:</strong> Use strong, unique passwords and enable multi-factor authentication (MFA) for user accounts, particularly for administrative users.</li> <li><strong>Monitor and Audit:</strong> Monitor access to user data and audit logs regularly for signs of suspicious activity or potential data breaches.</li> <li><strong>Limit Access to User Data:</strong> Implement access controls to restrict access to user data based on the principle of least privilege.</li> <li><strong>Educate Users:</strong> Educate users on best practices for account security, such as recognizing phishing attempts and using strong passwords.</li> <li><strong>Regularly Review User Accounts:</strong> Periodically review user accounts for signs of suspicious activity or roles and permissions that may need adjustment.</li> </ul>",0,AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:N,CWE-203: Observable Discrepancy,list
Secure Client-Initiated Renegotiation,"The negotiation process of the SSL encryption uses significantly more resources on the server than on the client. Therefore, if the client can initiate the renegotiation process, an attacker can render the server unavailable with a Denial of Service attack.<p class=""pt-3"">The SSL renegotiation flaw can affect different types of systems. It is caused by a vulnerability in the client-initiated renegotiation of SSL/TLSfor existing server connections.</p><p class=""pt-3"">Some of the symptoms of renegotiation issues include: <ul class=""list-disc pt-2 pl-4""><li>It fails in the case of a virtual server processing SSL connections.</li><li>There are BIG-IP system error messages logged about SSL handshake/renegotiation.</li><li>The virtual server rejecting renegotiation attempts is logged in the SSL statistics.</li></ul></p><p class=""pt-3"">In a nutshell, the SSL communication or handshake process entails exchanging messages between the server and the client. They define the settings of the encrypted communication, including enabled cipher suites, protocol version, renegotiation security, and others.</p><p class=""pt-3"">In a nutshell, the SSL communication or handshake process entails exchanging messages between the server and the client. They define the settings of the encrypted communication, including enabled cipher suites, protocol version, renegotiation security, and others. The SSL handshake contains components like ClientHello, ServerHello, Server certificate, ServerHelloDone, ClientKeyExchange, ChangeCipherSpec, Finished, Renegotiated SSL sessions, and Renegotiation settings.</p><p class=""pt-3"">The last two components relate to the SSL renegotiation. The initial handshake process can be renegotiated with different cryptographic parameters if necessary. The other options for a renegotiation setting include how the renegotiation requests are processed, period (renegotiation after a certain period), size (after a certain amount of data), and max record delay (number of delayed records), among others.</p>",,MEDIUM,"Secure client-initiated renegotiation in the context of TLS (Transport Layer Security) has been a topic of security concerns, primarily due to vulnerabilities like the TLS renegotiation attack discovered in 2009 <ul class=""list-disc pt-2 pl-4""> <li><strong>Resource Exhaustion: </strong> Renegotiation requires processing power. An attacker could repeatedly initiate renegotiation requests, consuming server resources and potentially leading to a Denial of Service (DoS). Servers might struggle to handle legitimate traffic while processing renegotiations.</li><li><strong>Injection Attacks [CVE-2009-3555]: </strong> A significant vulnerability discovered in 2009 allowed an attacker to inject arbitrary content into a secure session by exploiting the renegotiation process. This was due to the lack of binding between the initial and renegotiated sessions, allowing an attacker to insert their data into the beginning of a renegotiated session.</li><li><strong>Session Hijacking: </strong> If renegotiation is not securely handled, an attacker could intercept and manipulate the renegotiation process, potentially hijacking a secure session. Proper implementation and server configurations are crucial to prevent such attacks.</li><li><strong>Weak Cipher Suites: </strong> During renegotiation, if the server allows downgrading to weaker cipher suites or parameters, an attacker could force the use of less secure encryption, making it easier to compromise the communication.</li></ul>","<ul class=""list-disc pt-2 pl-4""> <li><strong>Server Configuration: </strong> The simplest way to mitigate risks associated with client-initiated renegotiation is to disable it entirely on the server. This can prevent abuse and potential vulnerabilities.</li><li><strong>RFC 5746 Compliance: </strong> Ensure that the server and client both support RFC 5746, which addresses the renegotiation vulnerability by securely binding the initial and renegotiated sessions. This prevents the injection attack and ensures the integrity of the renegotiation process.</li><li><strong>Throttle Renegotiation Requests: </strong> Implement rate limiting to control the frequency of renegotiation requests from a single client. This can help mitigate DoS attacks by limiting the impact of excessive renegotiations.</li></ul>",5.3,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L,CWE-757: Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade'),list
[RECOMMENDATION] Enable TLS 1.3,"TLS stands for Transport Layer Security and is the successor to SSL (Secure Sockets Layer). TLS provides secure communication between web browsers and servers. The connection itself is secure because symmetric cryptography is used to encrypt the data transmitted. The keys are uniquely generated for each connection and are based on a shared secret negotiated at the beginning of the session, also known as a TLS handshake.<p class=""pt-2 font-medium"">It is recommended to use TLS 1.3 version.</p>","<ul class=""list-disc pt-2 pl-4""> <li><strong>Lower Security Levels: </strong> TLS 1.2 and earlier versions are less secure compared to TLS 1.3. TLS 1.3 eliminates outdated cryptographic algorithms and features, making it more resistant to attacks.</li><li><strong>Vulnerability to Known Attacks: </strong> TLS 1.2 is susceptible to various attacks like BEAST, CRIME, and POODLE. While mitigations exist, they complicate the configuration.</li><li><strong>Forward Secrecy: </strong> While TLS 1.2 can support forward secrecy, it depends on specific cipher suites. TLS 1.3 mandates forward secrecy by default, ensuring past communications cannot be decrypted even if the server's private key is compromised.</li><li><strong>Regulatory Compliance: </strong> Some industries and regulations may start mandating the use of TLS 1.3 for better security, meaning systems not supporting it might fall out of compliance.</li><li><strong>Best Practices: </strong> Security best practices advocate for using the latest, most secure protocols. Not using TLS 1.3 might be viewed as neglecting best practices, potentially impacting trust and credibility.</li></ul>",INFO,,"We recommend that TLS 1.3 should also be enabled so that the browsers supporting it, can open the website with TLS 1.3, increasing overall security and also enhancing the overall performance experience.",0,AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:N,CWE-326: Inadequate Encryption Strength,list
Host Header Injection,"HTTP Host header attacks are any attacks performed by manipulating the value of the Host header in an HTTP request. The attacker sends HTTP requests to a web application or web API and forges the value of the Host header or adds other headers that take precedence over the value of the Host header. Host Header Injection is a type of web application security vulnerability where an attacker manipulates the Host header in HTTP requests. This can lead to various types of attacks, including web cache poisoning, bypassing access controls, and facilitating phishing attacks.","<ul class=""list-disc pt-2 pl-4""> <li><strong>Web Cache Poisoning: </strong> An attacker can manipulate the Host header to poison web caches with malicious content.</li><li><strong>Phishing and Social Engineering: </strong> By injecting a malicious Host header, attackers can trick users into visiting malicious sites that appear to be legitimate.</li> <li><strong>Bypassing Security Controls: </strong> Unauthorized access to sensitive areas of an application can lead to data breaches, exposure of confidential information, and potential further exploitation.</li><li><strong>URL Redirection: </strong> Unauthorized access to sensitive areas of an application can lead to data breaches, exposure of confidential information, and potential further exploitation.</li> </ul>",MEDIUM,"Make a curl request to your affected URLs with  <i>Host</i> header value <i>evil.com</i> <i class=""text-red-500 border-b border-b-red-500"">curl -i --head ""https://affected-url"" -H ""Host: chowkidar-testing-url.com""</i>","The best way to prevent all Host header attacks is to never use Host header values anywhere in your web applications. While it is common to use the Host header to identify the application host automatically, it is more secure to specify the hostname manually. <p class=""pt-3""> When using a web application framework, you can use the hostname value stored by the framework. Frameworks ask you for the hostname during setup and then store that value securely in a configuration file (e.g. Joomla, Drupal), database (WordPress), environment variable (Laravel), or service registry (Kubernetes DNS).</p> <p class=""pt-3""> If your application needs the value of the Host header to work properly and there is no workaround, build a whitelist of accepted host names. For example, if your web server serves 10 hosts, you should only accept these 10 hostnames as Host header values.</p>",6.1,AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N,CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),list
Frameable response & Clickjacking,"Clickjacking is an interface-based attack in which a user is tricked into clicking on actionable content on a hidden website by clicking on some other content in a decoy website. Consider the following example: A web user accesses a decoy website (perhaps this is a link provided by an email) and clicks on a button to win a prize. Unknowingly, they have been deceived by an attacker into pressing an alternative hidden button and this results in the payment of an account on another site. This is an example of a clickjacking attack. The technique depends upon the incorporation of an invisible, actionable web page (or multiple pages) containing a button or hidden link, say, within an iframe. The iframe is overlaid on top of the user's anticipated decoy web page content. This attack differs from a CSRF attack in that the user is required to perform an action such as a button click whereas a CSRF attack depends upon forging an entire request without the user's knowledge or input.","<ul class=""list-disc""> <li><strong>Unauthorized Actions:</strong> Users can be tricked into performing unintended actions such as changing settings, transferring funds, or deleting data.</li><li><strong>Account Compromise:</strong> Clickjacking can be used to steal sensitive information, such as login credentials or personal data, leading to account compromise.</li><li><strong>Sensitive Data Exposure:</strong> Attackers can exploit clickjacking to gain access to sensitive information or functionality within an application.</li></ul>",MEDIUM,"Save the following code after replacing the URL with the scope url as <i class=""text-red-600""><u>filename.html</u></i><div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs w-fit italic""> <pre class=""py-1"">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;meta charset=&quot;utf-8&quot;&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;
	&lt;title&gt;Clickjacking&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;iframe src=&quot;https://affected_URL&quot; width=&quot;1000px;&quot; height=&quot;700px;&quot;&gt;&lt;/iframe&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre> </div>","<p><strong>X-Frame-Options</strong><p> <div class=""px-5 mb-3""> The X-Frame-Options HTTP response header can be used to indicate whether a browser should be allowed to render a page in a &lt;frame&gt;, &lt;iframe&gt;, &lt;embed&gt; or &lt;object&gt;. Sites can use this to avoid click-jacking attacks, by ensuring that their content is not embedded into other sites. <div class=""my-2 mx-5 p-2 bg-gray-200 rounded-lg text-xs w-fit italic""> <p class=""py-1"">X-Frame-Options: DENY</p> <p class=""py-1"">X-Frame-Options: SAMEORIGIN</p> </div> </div>",4.3,AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N,CWE-1021: Improper Restriction of Rendered UI Layers or Frames,list
SSL Certificate Cannot Be Trusted,"The server's X.509 certificate cannot be trusted. This situation can occur in three different ways, in which the chain of trust can be broken, as stated below: <ul class=""list-disc pl-4""><li>First, the top of the certificate chain sent by the server might not be descended from a known public certificate authority. This can occur either when the top of the chain is an unrecognized, self-signed certificate, or when intermediate certificates are missing that would connect the top of the certificate chain to a known public certificate authority.</li><li>Second, the certificate chain may contain a certificate that is not valid at the time of the scan. This can occur either when the scan occurs before one of the certificate's 'notBefore' dates, or after one of the certificate's 'notAfter' dates.</li><li>Third, the certificate chain may contain a signature that either didn't match the certificate's information or could not be verified. Bad signatures can be fixed by getting the certificate with the bad signature to be re-signed by its issuer.</li></ul> <p class=""pt-2"">If the remote host is a public host in production, any break in the chain makes it more difficult for users to verify the authenticity and identity of the web server. This could make it easier to carry out man-in-the-middle attacks against the remote host.</p>",,MEDIUM,"<ul class=""list-disc pl-4""><li><strong>Man-in-the-Middle Attacks:</strong> If users cannot verify the authenticity of the server they are connecting to, attackers can intercept and alter the communication between the user and the server.</li><li><strong>Data Interception:</strong> Sensitive information such as passwords, credit card numbers, and personal data can be intercepted by attackers.</li><li><strong>Phishing Attacks:</strong> Users may be redirected to malicious sites that mimic the legitimate site, leading to credential theft and other forms of fraud.</li><li><strong>Regulatory Non-Compliance:</strong> Many regulations and standards (e.g., GDPR, PCI-DSS) require the use of trusted SSL certificates to protect user data. Non-compliance can result in fines and other penalties.</li></ul>",Purchase or generate a proper SSL certificate for this service.,6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N,CWE-295: Improper Certificate Validation,list
Potentially Vulnerable To WINSHOCK,,,,,,0,,,
Cross-Domain Referer Leakage,,,,,,0,,,
ACM Certificate Expired Or About To Expire,"This vulnerability occurs when an AWS Certificate Manager (ACM) certificate used to secure web traffic is expired or nearing expiration. ACM certificates are crucial for establishing secure HTTPS connections, encrypting data in transit, and ensuring that the communication between clients and servers is secure. <p class=""pt-2"">When a certificate expires, it is no longer trusted by web browsers and other clients, leading to security warnings. Users may be discouraged from proceeding to the site, and the encryption of data may be compromised, exposing it to potential interception and tampering.</p>","<ul class=""list-disc pl-4""> <li><strong>Data Exposure:</strong> An expired certificate means that the encrypted connection is no longer secure, making it possible for attackers to intercept and read sensitive data transmitted between the client and server.</li> <li><strong>Service Disruption:</strong> Users trying to access services secured by the expired certificate will encounter security warnings in their browsers. Many users will choose not to proceed, leading to loss of traffic, reduced customer trust, and potential downtime.</li> <li><strong>Man-in-the-Middle (MITM) Attacks:</strong> Attackers could exploit the expired certificate to perform MITM attacks, intercepting and potentially altering the data exchanged between the client and the server.</ul>",HIGH,,"Ensure that all the expired Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificates managed by AWS Certificate Manager are removed in order to adhere to Amazon Security Best Practices. Certificate Manager is the AWS service that lets you easily provision, manage, and deploy SSL/TLS certificates for use with other Amazon services such as Elastic Load Balancing and CloudFront.",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:H,CWE-295: Improper Certificate Validation,cloud
Enable IAM Access Analyzer,"The absence of IAM Access Analyzer within an AWS environment indicates a potential vulnerability in monitoring and understanding the permissions associated with IAM roles and resources. IAM Access Analyzer helps identify resources, such as S3 buckets, IAM roles, and other policies that are shared with external entities. Without this tool, an organization may lack visibility into potential security risks associated with unintended or overly permissive access granted to external parties. <p class=""pt-2"">IAM Access Analyzer continuously monitors resource policies to ensure that permissions granted are intentional and secure. When it's not enabled, there is a risk that resources might be exposed to unauthorized access, leading to data breaches and other security incidents.</p>","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Without IAM Access Analyzer, organizations may inadvertently grant permissions to external accounts or entities, leading to unauthorized access to sensitive data and resources.</li><li><strong>Data Exposure:</strong> Misconfigured IAM policies that are not identified could expose critical resources, such as S3 buckets or KMS keys, to the public or untrusted external accounts.</li><li><strong>Compliance Risks:</strong> Failure to identify and mitigate improper access controls can lead to non-compliance with security standards and regulations like GDPR, HIPAA, or PCI-DSS, exposing the organization to legal and financial penalties.</li><li><strong>Increased Attack Surface:</strong> Lack of visibility into access permissions increases the attack surface, making it easier for attackers to exploit weak or overly permissive policies.</li></ul>",HIGH,,"Enable IAM Access Analyzer for all accounts, create analyzer and take action over it is recommendations (IAM Access Analyzer is available at no additional cost).",8.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-287: Improper Authentication,cloud
Enable API Gateway Authorizers,"This vulnerability arises when an API deployed through AWS API Gateway does not have authorizers enabled, leaving it exposed to unauthorized access. API Gateway authorizers, such as AWS Lambda authorizers or Amazon Cognito user pools, play a crucial role in securing APIs by verifying incoming requests before they reach the backend services. <p class=""pt-2"">When authorizers are not enabled, any user with access to the API endpoint can potentially send requests, including malicious ones. This exposure can lead to unauthorized data access, API misuse, and potential data breaches, especially if the API is handling sensitive information.</p>","<ul class=""list-disc pl-4""> <li><strong>Unauthorized Access:</strong> Without an authorizer, any entity with the endpoint URL can access the API, leading to potential data exposure.</li> <li><strong>Security Breaches:</strong> Sensitive data processed by the API may be at risk if unauthorized users can interact with it.</li> <li><strong>Resource Abuse:</strong> APIs without authorizers are vulnerable to abuse, such as excessive requests that can lead to Denial of Service (DoS) attacks.</li> <li><strong>Compliance Risks:</strong> Lack of proper access control could result in non-compliance with industry regulations and standards, risking penalties and reputational damage.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable IAM Access Analyzer:</strong> Turn on IAM Access Analyzer in your AWS environment to continuously monitor resource policies for external access. This will provide alerts when resources are shared outside your AWS account or organization.</li><li><strong>Regular Review of Access Findings:</strong> Regularly review and act on the findings generated by IAM Access Analyzer to ensure that all external access is intentional and secure. Address any issues of unintended access immediately.</li><li><strong>Integrate with Security Monitoring:</strong> Integrate IAM Access Analyzer with your broader security monitoring tools and practices to ensure that any detected issues are promptly addressed as part of your incident response and security operations.</li></ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:H,CWE-306: Missing Authentication for Critical Function,cloud
Enable API Gateway Stage Client Certificate,"This vulnerability occurs when AWS API Gateway does not have client certificates enabled for a particular stage. Client certificates in API Gateway are used to authenticate clients making requests to the API, ensuring that only authorized clients can interact with the API. When client certificates are not enabled, any client can make requests to the API, potentially leading to unauthorized access and increased risk of abuse. <p class=""pt-2"">Enabling client certificates provides an additional layer of security by requiring clients to present a valid certificate before their requests are accepted, helping to prevent unauthorized access and ensure that requests come from trusted sources.</p>","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Without client certificate validation, any entity can make requests to the API, leading to potential unauthorized access to sensitive data or services.</li><li><strong>Data Exposure:</strong> Sensitive information transmitted through the API could be exposed to unauthorized parties, leading to data breaches.</li><li><strong>Increased Attack Surface:</strong> The lack of client certificate authentication increases the risk of abuse, such as Denial of Service (DoS) attacks or malicious requests, since the API does not verify the identity of the clients.</li><li><strong>Compliance Risks:</strong> Not using client certificates for authentication may violate security policies or compliance requirements, leading to potential non-compliance with industry standards and regulations.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Client Certificates:</strong> Configure API Gateway to require client certificates for the desired stage. This involves setting up and managing client certificates to ensure that only authorized clients can access the API.</li><li><strong>Regularly Review Certificates:</strong> Periodically review and update client certificates to ensure they are still valid and securely managed.</li><li><strong>Implement Additional Security Measures:</strong> Use client certificates in conjunction with other security measures, such as OAuth or IAM roles, to enhance overall security.</li><li><strong>Monitor API Traffic:</strong> Implement monitoring and logging to track access patterns and detect any suspicious activity or unauthorized access attempts.</li></ul>",8.3,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-287: Improper Authentication,cloud
Enable API Gateway Stage Logging,"This vulnerability occurs when AWS API Gateway does not have logging enabled for a particular stage. API Gateway stage logging is crucial for monitoring and auditing API requests and responses. When logging is not enabled, there's no record of the interactions between clients and the API, which can hinder the ability to detect, investigate, and respond to security incidents or operational issues. <p class=""pt-2"">Enabling logging provides visibility into API traffic, helping to identify abnormal patterns, unauthorized access attempts, and potential security threats. It also aids in troubleshooting and performance monitoring.</p>","<ul class=""list-disc pl-4""><li><strong>Incident Detection and Response:</strong> Without logging, it becomes challenging to detect and respond to security incidents or operational issues. There is no historical data to analyze in case of an attack or failure.</li><li><strong>Security Monitoring:</strong> Lack of logs limits the ability to monitor and analyze API traffic for suspicious activities, potentially allowing security breaches to go unnoticed.</li><li><strong>Compliance Risks:</strong> Many compliance standards and regulations require detailed logging and monitoring of access to sensitive data and systems. Not having logging enabled can lead to non-compliance and associated penalties.</li><li><strong>Troubleshooting Difficulties:</strong> In the absence of logs, diagnosing issues or understanding the root cause of failures becomes difficult, leading to prolonged downtime and increased operational costs.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable API Gateway Logging:</strong> Configure logging for the relevant API Gateway stages. Ensure that logs are directed to Amazon CloudWatch Logs or a similar logging service for storage and analysis.</li><li><strong>Set Up Log Retention Policies:</strong> Define and implement appropriate retention policies to manage log data effectively and ensure compliance with data retention requirements.</li><li><strong>Monitor Logs Regularly:</strong> Implement monitoring and alerting based on log data to detect unusual patterns or potential security threats promptly.</li><li><strong>Integrate with Security Information and Event Management (SIEM):</strong> Integrate API Gateway logs with a SIEM system for enhanced analysis and correlation with other security events across your infrastructure.</li><li><strong>Review and Update Logging Configuration:</strong> Regularly review and update logging configurations to ensure they meet the security and operational needs of your organization.</li></ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-778: Insufficient Logging,cloud
API Gateway Stage WAF ACL Not Attached,"This vulnerability occurs when AWS API Gateway does not have an AWS Web Application Firewall (WAF) Access Control List (ACL) attached to a particular stage. WAF ACLs are used to define rules for filtering and controlling web traffic based on specified conditions, such as IP addresses, HTTP headers, and request patterns. When WAF ACLs are not attached, the API is exposed to a range of web threats and attacks that could otherwise be mitigated through these rules. <p class=""pt-2"">Without a WAF ACL, the API gateway stage lacks protection against common web vulnerabilities and attacks, including SQL injection, cross-site scripting (XSS), and other malicious requests. This can lead to potential security breaches, data loss, and service disruptions.</p>","<ul class=""list-disc pl-4""><li><strong>Increased Exposure to Attacks:</strong> Without a WAF ACL, the API gateway is vulnerable to various web attacks and exploits that WAF would typically filter out, increasing the risk of security breaches.</li><li><strong>Data Breaches:</strong> Attackers could exploit vulnerabilities in the API to access or exfiltrate sensitive data, leading to potential data breaches.</li><li><strong>Service Disruption:</strong> Malicious traffic could lead to Denial of Service (DoS) attacks or other disruptions, affecting the availability and performance of the API.</li><li><strong>Operational Costs:</strong>  Increased exposure to attacks may result in higher costs associated with incident response, remediation, and potential downtime.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Attach a WAF ACL to the API Gateway Stage:</strong> Configure and attach a WAF ACL to the relevant API Gateway stage. Create and customize rules to filter out unwanted traffic and protect against common web threats.</li><li><strong>Define Appropriate WAF Rules:</strong> Implement rules that address specific security concerns for your API, such as blocking known malicious IP addresses, filtering out harmful request patterns, and protecting against SQL injection and XSS.</li><li><strong>Regularly Review and Update WAF Rules:</strong> Periodically review and update WAF rules to adapt to new threats and changes in your API's usage patterns.</li><li><strong>Monitor WAF Metrics and Logs:</strong> Enable logging and monitoring for WAF to track and analyze blocked requests and potential threats. Use this data to refine and enhance your WAF rules.</li><li><strong>Integrate with Other Security Measures:</strong> Use WAF in conjunction with other security measures, such as IAM policies and API keys, to provide comprehensive protection for your API.</li></ul>",7.3,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-16: Configuration,cloud
Enable Encryption For API Gateway Cache Cluster,"This vulnerability arises when AWS API Gateway cache clusters are not configured to use encryption. API Gateway caches are used to store responses from backend services to improve performance and reduce latency by avoiding repeated requests to the backend. However, if encryption is not enabled for these cache clusters, sensitive data stored in the cache is at risk of unauthorized access or exposure. <p class=""pt-2"">Enabling encryption ensures that the data stored in the cache is protected both at rest and in transit, preventing unauthorized access and ensuring that sensitive information is kept secure.</p>","<ul class=""list-disc pl-4""><li><strong>Data Exposure:</strong> Without encryption, sensitive data stored in the cache can be accessed by unauthorized individuals or entities if they gain access to the cache storage.</li><li><strong>Compliance Risks:</strong> Many regulatory frameworks and standards require encryption of data at rest, including data stored in caches. Failing to enable encryption may lead to non-compliance with these regulations.</li><li><strong>Increased Risk of Data Breaches:</strong> Unencrypted cache data could be targeted in attacks, leading to potential data breaches and exposure of confidential or personal information.</li><li><strong>Reputational Damage:</strong> Data breaches resulting from unencrypted cache data can harm the organization's reputation and erode customer trust.</li><li><strong>Operational Risks:</strong> Unauthorized access to sensitive data in the cache can impact the integrity and security of applications and services relying on API Gateway.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Cache Encryption:</strong> Configure encryption for API Gateway cache clusters by using AWS Key Management Service (KMS) to manage encryption keys. This ensures that data stored in the cache is encrypted at rest.</li><li><strong>Manage Encryption Keys:</strong> Use AWS KMS to create, rotate, and manage encryption keys for your cache clusters. Implement appropriate access controls to ensure that only authorized users and services can manage or access these keys.</li><li><strong>Review Encryption Settings Regularly:</strong> Periodically review and update encryption settings to ensure that they meet security standards and regulatory requirements.</li><li><strong>Monitor Cache Access:</strong> Enable logging and monitoring to track access to the cache and detect any unauthorized or suspicious activities.</li><li><strong>Integrate with Security Policies:</strong> Ensure that cache encryption is part of your broader security policies and practices, including data protection and compliance measures.</li></ul>",7.3,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-256: Plaintext Storage of a Password,cloud
Enable API Gateway v2 Access Logging,"This vulnerability occurs when AWS API Gateway v2 (used for HTTP APIs and WebSocket APIs) does not have access logging enabled. Access logging is essential for monitoring and auditing API usage, capturing detailed records of requests and responses. Without access logs, you lack visibility into who is accessing your APIs, what data is being transmitted, and how the API is being used. <p class=""pt-2"">Enabling access logging allows you to track API usage, detect anomalies or suspicious activity, and perform forensic analysis in case of security incidents. It also helps with compliance and operational troubleshooting by providing detailed insights into API interactions.</p>","<ul class=""list-disc pl-4""><li><strong>Limited Visibility:</strong> Without access logs, you have no record of API interactions, making it difficult to monitor and understand how your API is being used.</li><li><strong>Incident Detection and Response:</strong> Lack of logging impairs the ability to detect and respond to security incidents or operational issues, as there are no logs to analyze for suspicious activities or performance problems.</li><li><strong>Compliance Risks:</strong> Many regulatory standards and industry best practices require detailed logging of API interactions. Failure to enable access logging may result in non-compliance with these requirements.</li><li><strong>Troubleshooting Challenges:</strong> Diagnosing and resolving issues with the API becomes challenging without access to logs that provide context and details about requests and responses.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Access Logging for API Gateway v2:</strong> Configure access logging for your API Gateway v2 stages. Set up logging to direct logs to Amazon CloudWatch Logs or a similar logging service for storage and analysis.</li><li><strong>Define Log Formats and Content:</strong> Customize the log format to include relevant information such as request and response details, timestamps, and client IP addresses. This helps in capturing all necessary data for monitoring and analysis.</li><li><strong>Implement Monitoring and Alerts:</strong> Use monitoring tools and set up alerts based on log data to detect unusual patterns or potential security threats in real-time.</li><li><strong>Review and Retain Logs:</strong> Establish log retention policies to manage log data effectively and ensure compliance with data retention requirements. Regularly review logs for ongoing security and operational monitoring.</li><li><strong>Integrate with Security Information and Event Management (SIEM):</strong> Consider integrating API access logs with a SIEM system for advanced analysis and correlation with other security events.</li></ul>",7.3,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-778: Insufficient Logging,cloud
Enable API Gateway v2 Authorizers,"This vulnerability arises when AWS API Gateway v2 (used for HTTP APIs and WebSocket APIs) does not have authorizers configured for its API endpoints. Authorizers are essential for controlling access to API resources by verifying and validating incoming requests against predefined authentication mechanisms, such as JWT tokens or AWS IAM roles. <p class=""pt-2""> Without authorizers, the API lacks proper access control and may be accessible to unauthorized users. This exposes the API to potential misuse, unauthorized access, and security breaches.</p>","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Without authorizers, there is no mechanism to authenticate and authorize requests, which can lead to unauthorized access to sensitive API endpoints and data.</li><li><strong>Increased Risk of Data Breaches:</strong> Unauthorized access to the API can result in data breaches, exposing confidential or personal information.</li><li><strong>Compliance Risks:</strong> Many regulatory frameworks and standards require authentication and authorization mechanisms to protect access to sensitive data and systems. Failure to enable authorizers may lead to non-compliance with these regulations.</li><li><strong>Operational Issues:</strong> Lack of access control can result in operational challenges, such as unauthorized changes to API configurations or misuse of API resources.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Authorizers for API Gateway v2:</strong> Configure and attach authorizers to the relevant API endpoints in API Gateway v2. Choose the appropriate type of authorizer based on your authentication needs, such as JWT or AWS IAM roles.</li><li><strong>Define Authentication Mechanisms:</strong> Set up the necessary authentication mechanisms for the authorizers. For JWT authorizers, configure the token validation parameters and specify the trusted issuer. For IAM roles, ensure that appropriate permissions are granted.</li><li><strong>Test and Validate Authorizers:</strong> Thoroughly test the authorizers to ensure they correctly enforce access control and protect API endpoints from unauthorized access.</li><li><strong>Review and Update Authorizer Configurations:</strong> Regularly review and update authorizer configurations to adapt to changing security requirements and operational needs.</li><li><strong>Monitor and Audit Access Logs:</strong> Enable and monitor access logs to track authorization attempts and detect any anomalies or unauthorized access attempts.</li></ul>",7.3,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-284: Improper Access Control,cloud
Disable Fleets Default Internet Access,"This vulnerability occurs when AWS fleets (such as EC2 instances, ECS tasks, or other managed instances) are configured with default internet access. Default internet access means that the instances or tasks can communicate with the internet without additional restrictions. This can lead to unintended exposure of your fleet to external threats and increase the risk of security breaches. <p class=""pt-2""> Disabling default internet access restricts outbound internet connectivity, ensuring that only specifically allowed traffic can reach the internet. This helps in reducing the attack surface and limiting the potential for data exfiltration or unauthorized access.</p>","<ul class=""list-disc pl-4""><li><strong>Increased Exposure to External Threats:</strong> Default internet access can expose your instances to external threats, such as attacks from malicious actors or compromised websites.</li><li><strong>Data Exfiltration Risks:</strong> Unrestricted internet access increases the risk of data exfiltration, where sensitive information could be sent out of your network to unauthorized destinations.</li><li><strong>Compliance Risks:</strong> Many regulatory frameworks and security standards require strict control over outbound internet access to protect sensitive data. Failure to disable default internet access may result in non-compliance with these requirements.</li><li><strong>Increased Attack Surface:</strong> Allowing default internet access expands the potential attack surface of your fleet, making it easier for attackers to exploit vulnerabilities and gain unauthorized access.</li><li><strong>Operational Risks:</strong> Unrestricted internet access can lead to unintended consequences, such as accidental exposure of services or inadvertent communication with malicious endpoints.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Disable Default Internet Access:</strong> Configure your fleets to disable default internet access. This can be done by updating the security group rules, network ACLs, or route tables associated with the instances or tasks.</li><li><strong>Implement Strict Network Controls:</strong> Define and enforce outbound rules to only allow necessary and approved internet traffic. Use security groups, network ACLs, and private subnets to control outbound connections.</li><li><strong>Use VPC Endpoints:</strong> For accessing AWS services, use VPC endpoints to avoid routing traffic over the internet. This ensures secure and private communication between your instances and AWS services.</li><li><strong>Monitor and Audit Network Traffic:</strong> Implement logging and monitoring to track outbound network traffic. Analyze logs to detect any unusual or unauthorized communication attempts.</li><li><strong>Review and Update Network Configurations Regularly:</strong> Periodically review and update your network configurations to ensure they align with security best practices and operational needs.</li></ul>",7.3,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-16: Configuration,cloud
Fleets User Session Duration Too Long,"This vulnerability occurs when the user session duration for AWS fleets (such as EC2 instances, ECS tasks, or other managed instances) is set to an excessively long period. A long session duration increases the window of opportunity for potential attackers to exploit active sessions if they gain unauthorized access. It can also lead to prolonged exposure of resources if a user's session is compromised or if the user is no longer active but still maintains access. <p class=""pt-2""> Properly managing session duration helps in mitigating security risks by ensuring that sessions are periodically refreshed and reauthenticated, reducing the likelihood of unauthorized access.</p>","<ul class=""list-disc pl-4""><li><strong>Increased Risk of Session Hijacking:</strong> Longer session durations increase the risk that an active session could be hijacked by an unauthorized party, potentially leading to unauthorized access and data breaches.</li><li><strong>Extended Exposure:</strong> If a session remains active for too long, it extends the exposure period of resources and data, even if the user is no longer actively using the session.</li><li><strong>Compliance Risks:</strong> Many security standards and regulations require session management policies to limit session duration to reduce security risks. Failing to manage session duration properly may result in non-compliance.</li><li><strong>Operational Risks:</strong> Long-lived sessions can lead to operational challenges, such as difficulty in managing and tracking user access and activity, potentially impacting system performance and security.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Implement Session Duration Policies:</strong> Configure and enforce appropriate session duration policies for your fleets. Set a maximum session duration to ensure sessions are periodically refreshed and reauthenticated.</li><li><strong>Enable Session Timeouts:</strong> Implement session timeouts to automatically end sessions after a specified period of inactivity. This helps reduce the risk of unauthorized access if a session is left open unintentionally.</li><li><strong>Monitor and Audit Sessions:</strong> Regularly monitor and audit active sessions to detect any anomalies or unauthorized activity. Use logging and alerting to track session usage and access patterns.</li><li><strong>Review and Update Session Policies:</strong> Periodically review and update session management policies to ensure they align with current security best practices and compliance requirements.</li></ul>",7.3,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-306: Missing Authentication for Critical Function,cloud
Enable Encryption For AWS Athena Query Results,"This vulnerability occurs when AWS Athena is configured to store query results without encryption. AWS Athena allows users to run SQL queries against data stored in Amazon S3 and retrieve the results. By default, if encryption is not explicitly enabled, the query results are stored in Amazon S3 without encryption, which means the data could be exposed to unauthorized access if not properly protected. <p class=""pt-2""> Encrypting query results ensures that sensitive data remains confidential and protected from unauthorized access, both in transit and at rest. It helps safeguard data integrity and supports compliance with data protection regulations and standards.</p>","<ul class=""list-disc pl-4""><li><strong>Data Exposure:</strong> Unencrypted query results are stored in Amazon S3, making them vulnerable to unauthorized access if someone gains access to the S3 bucket or objects.</li><li><strong>Compliance Risks:</strong> Many regulatory frameworks and data protection standards require encryption of sensitive data at rest and in transit. Failing to enable encryption for query results may result in non-compliance with these regulations.</li><li><strong>Increased Risk of Data Breaches:</strong> Without encryption, the risk of data breaches is elevated, as unauthorized users could potentially access and misuse sensitive query results.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Encryption for Query Results:</strong> Configure AWS Athena to encrypt query results by enabling encryption options. You can specify the use of AWS Key Management Service (KMS) for server-side encryption of query results stored in Amazon S3.</li><li><strong>Use Server-Side Encryption (SSE):</strong> Configure server-side encryption for the Amazon S3 bucket where query results are stored. Choose between SSE-S3 (AES-256), SSE-KMS (AWS KMS), or SSE-C (customer-provided keys) based on your security requirements.</li><li><strong>Review Encryption Settings Regularly:</strong> Periodically review and update encryption settings to ensure they meet current security best practices and compliance requirements.</li><li><strong>Monitor and Audit Access:</strong> Implement logging and monitoring for access to the S3 bucket and query results to detect and respond to unauthorized access attempts.</li></ul>",7.3,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-312: Cleartext Storage of Sensitive Information,cloud
Enable Enforce Workgroup Configuration For Athena,"This vulnerability occurs when AWS Athena is not configured to enforce workgroup settings. AWS Athena workgroups allow you to manage and control query execution, including configuring query result locations, encryption settings, and other policies. Enforcing workgroup configurations ensures that all queries within a workgroup adhere to specified security and operational policies. <p class=""pt-2""> Without enforcing workgroup configuration, queries may not follow established security practices or operational guidelines, leading to potential risks such as unauthorized access, data exposure, or mismanagement of resources.</p>","<ul class=""list-disc pl-4""><li><strong>Inconsistent Security Policies:</strong> If workgroup configurations are not enforced, queries may not comply with security policies, such as encryption or data location requirements, increasing the risk of data breaches.</li><li><strong>Operational Risks:</strong> Lack of enforcement can lead to mismanagement of query results, incorrect data storage locations, or inefficient use of resources, impacting operational efficiency.</li><li><strong>Compliance Risks:</strong> Many regulations and standards require strict adherence to security policies for managing data. Failure to enforce workgroup configurations can result in non-compliance with these regulations.</li><li><strong>Data Exposure:</strong> Queries not adhering to enforced configurations may store results in insecure locations or fail to apply encryption, leading to potential data exposure.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Workgroup Configuration Enforcement:</strong> Configure AWS Athena to enforce workgroup settings, ensuring that all queries adhere to the defined policies for security, data management, and resource usage.</li><li><strong>Define and Apply Workgroup Policies:</strong> Set up workgroup configurations to include necessary policies, such as query result locations, encryption settings, and resource limits. Ensure these configurations align with security best practices and compliance requirements.</li><li><strong>Monitor and Audit Workgroup Activities:</strong> Implement logging and monitoring for workgroup activities to track adherence to configurations and detect any anomalies or policy violations.</li><li><strong>Review and Update Workgroup Configurations Regularly:</strong> Periodically review and update workgroup configurations to ensure they meet current security and operational requirements.</li></ul>",7.3,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-665: Improper Initialization,cloud
Sensitive Information In EC2 Auto Scaling Launch Configuration,"This vulnerability arises when sensitive information, such as credentials, secrets, or private keys, is embedded within EC2 Auto Scaling launch configurations. EC2 Auto Scaling launch configurations define the parameters for instances launched as part of an Auto Scaling group, including instance type, Amazon Machine Image (AMI), key pairs, and user data scripts. If sensitive data is hardcoded or improperly stored in these configurations, it can be exposed to unauthorized users, leading to significant security risks. <p class=""pt-2"">Storing sensitive information within launch configurations, especially in user data scripts, poses a high risk of accidental exposure, unauthorized access, and potential misuse of critical credentials.</p>","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Exposing sensitive information in launch configurations can lead to unauthorized access to AWS resources, including EC2 instances, databases, and other services that the credentials provide access to.</li><li><strong>Data Breach:</strong> If credentials or sensitive information are compromised, it could lead to data breaches, unauthorized data extraction, or manipulation of resources.</li><li><strong>Compliance Risks:</strong> Storing sensitive information in plain text within launch configurations may violate security policies and compliance requirements, leading to potential fines, legal issues, and reputational damage.</li><li><strong>Privilege Escalation:</strong> Unauthorized users who gain access to sensitive information could escalate privileges and gain further control over your AWS environment.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Use AWS Secrets Manager or Systems Manager Parameter Store:</strong> Store sensitive information, such as credentials, securely in AWS Secrets Manager or Systems Manager Parameter Store. Retrieve these secrets dynamically at runtime instead of embedding them directly in launch configurations.</li><li><strong>Avoid Hardcoding Sensitive Information:</strong> Never hardcode sensitive information, such as passwords, access keys, or private keys, within launch configurations or user data scripts. Use IAM roles to securely grant necessary permissions to instances.</li><li><strong>Encrypt User Data Scripts:</strong> If user data scripts are used to configure instances, ensure that sensitive information within the scripts is encrypted or removed entirely. Instead, use secure methods to inject this data at runtime.</li><li><strong>Implement Access Controls:</strong> Restrict access to launch configurations and Auto Scaling groups to only authorized personnel. Use IAM policies and roles to enforce least privilege access.</li><li><strong>Regularly Audit and Monitor Launch Configurations:</strong> Regularly audit and monitor your launch configurations for any sensitive information. Use tools like AWS Config and AWS Trusted Advisor to detect and remediate security issues.</li></ul>",8,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L,CWE-312: Cleartext Storage of Sensitive Information,cloud
Enable AWS AutoScaling Notifications,"This vulnerability occurs when AWS Auto Scaling notifications are not enabled, resulting in a lack of visibility into critical events within your Auto Scaling groups. AWS Auto Scaling allows you to automatically adjust the number of EC2 instances in response to demand, ensuring that applications have the right amount of resources. Notifications can be configured to inform you of important events, such as instance launches, terminations, or scaling actions. <p class=""pt-2"">Without notifications, administrators may be unaware of scaling activities, potential issues, or abnormal behavior within the Auto Scaling groups. This lack of awareness can lead to delayed responses to problems, inefficiencies, and potential service disruptions.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Enable Auto Scaling Notifications:</strong> Configure Auto Scaling groups to send notifications for key events, such as instance launches, terminations, and scaling activities. Use Amazon SNS (Simple Notification Service) to receive alerts via email, SMS, or other channels.</li><li><strong>Configure Alarms and Monitoring:</strong> Set up CloudWatch alarms and integrate them with Auto Scaling notifications to provide proactive monitoring and alerting on critical metrics, such as CPU usage, memory usage, and other performance indicators.</li><li><strong>Regularly Review Notification Settings:</strong> Periodically review and update your notification settings to ensure they cover all critical events and are directed to the appropriate channels and personnel.</li><li><strong>Integrate with Incident Management Tools:</strong> If you use incident management or ticketing systems, integrate Auto Scaling notifications with these tools to automate the creation of incidents and streamline response processes.</li></ul>",4.3,AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:L,CWE-400: Uncontrolled Resource Consumption,cloud
Unencrypted Backup Vaults,"This vulnerability arises when backup vaults in AWS are not encrypted. AWS Backup allows you to centralize and automate the backup of your AWS resources, with backup vaults serving as secure storage for your backups. By default, AWS Backup vaults should be encrypted using AWS Key Management Service (KMS) to protect the data at rest. If encryption is not enabled, the data stored in the backup vaults is vulnerable to unauthorized access, which can lead to data breaches and non-compliance with security standards and regulations. <p class=""pt-2"">Storing unencrypted backups can expose sensitive information, making it easier for malicious actors to access and misuse the data if they gain access to the vaults.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Encryption for Backup Vaults:</strong> Ensure that all backup vaults are encrypted using AWS KMS. You can enable encryption when creating a backup vault, or update existing vaults to use encryption.</li><li><strong>Use Customer Managed Keys (CMKs):</strong> For greater control over the encryption process, consider using customer-managed keys (CMKs) instead of AWS-managed keys. This allows you to define key policies and manage access to the encryption keys.</li><li><strong>Audit and Monitor Backup Vaults:</strong> Regularly audit your backup vaults to ensure that encryption is enabled. Use AWS Config rules or other monitoring tools to automatically detect unencrypted vaults and take corrective action.</li><li><strong>Implement Least Privilege Access:</strong> Limit access to backup vaults and encryption keys to only those who need it. Use IAM policies and roles to enforce least privilege access.</li><li><strong>Encrypt Data Before Backup:</strong> In addition to encrypting the backup vault, consider encrypting the data before it is backed up. This provides an additional layer of security, ensuring that data is protected even before it reaches the vault.</li></ul>",7.5,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
No AWS Backup Vaults Available,"This vulnerability arises when there are no backup vaults available in your AWS environment. AWS Backup provides centralized backup management, allowing you to create and manage backups for your AWS resources in secure storage locations called backup vaults. If no backup vaults are available, it indicates that your AWS resources may not be backed up properly, leading to a significant risk of data loss in case of failures, accidental deletions, or malicious attacks. <p class=""pt-2"">The absence of backup vaults can result from misconfigurations, lack of proper backup policies, or oversight in setting up and maintaining backup mechanisms. Without a backup vault, recovery options are severely limited, and organizations face the risk of losing critical data and business continuity.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Create Backup Vaults:</strong> Establish backup vaults in AWS Backup to store backups of your critical resources. Ensure that each AWS resource has a corresponding backup plan that directs backups to these vaults.</li><li><strong>Implement Automated Backup Policies:</strong> Set up automated backup policies to ensure regular backups of your resources. AWS Backup allows you to define policies that automatically create backups at specified intervals and store them in the appropriate vaults.</li><li><strong>Monitor Backup Vaults and Backups:</strong> Use AWS Config, CloudWatch, or third-party monitoring tools to track the availability of backup vaults and the status of backups. Set up alerts for any issues, such as failed backups or the absence of backup vaults.</li><li><strong>Regularly Test Backup and Restore Procedures:</strong> Periodically test your backup and restore procedures to ensure that they work correctly and that backups can be recovered as expected. This helps identify potential issues before they become critical.</li><li><strong>Document and Review Backup Strategy:</strong> Document your backup strategy, including the creation and management of backup vaults. Regularly review and update this strategy to ensure it meets the current needs of your organization and complies with any relevant regulations.</li></ul>",8.2,AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-460: Improper Resource Shutdown or Release,cloud
Enable Model Invocation Logging,"This vulnerability occurs when model invocation logging is not enabled in AWS SageMaker. Model invocation logging provides visibility into the usage of deployed machine learning models, including details about the requests made to the model, the responses generated, and any errors encountered. Without this logging, there is no record of model interactions, which can hinder debugging, monitoring, and auditing processes. <p class=""pt-2"">Model invocation logging is crucial for understanding how models are used in production, identifying performance bottlenecks, and detecting potential misuse or anomalies. Without logs, issues such as incorrect model behavior or performance degradation may go unnoticed, and compliance with auditing or regulatory requirements could be compromised.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Enable Model Invocation Logging:</strong> Configure AWS SageMaker to enable logging for model invocations. This can be done by setting up logging to Amazon CloudWatch Logs or an S3 bucket, depending on your requirements.</li><li><strong>Configure Log Retention and Access:</strong> Set up log retention policies to ensure that invocation logs are kept for an appropriate duration based on your organization's needs and compliance requirements. Restrict access to logs to authorized personnel only.</li><li><strong>Monitor and Analyze Logs:</strong> Regularly review and analyze invocation logs to monitor the model's performance, detect anomalies, and gain insights into usage patterns. Use CloudWatch Insights or other log analysis tools to automate this process where possible.</li><li><strong>Integrate with Security Tools:</strong> Integrate logging with security information and event management (SIEM) tools to enhance the detection of potential security incidents or misuse.</li><li><strong>Set Up Alerts for Anomalies:</strong> Configure CloudWatch Alarms or other monitoring tools to alert you of unusual patterns or errors in the invocation logs, enabling prompt investigation and response.</li></ul>",6.8,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L,CWE-778: Insufficient Logging,cloud
Use Customer-Managed Keys to Encrypt Amazon Bedrock Guardrails,"This vulnerability occurs when Amazon Bedrock guardrails are not encrypted with customer-managed keys. Amazon Bedrock is a service for building and managing machine learning models and their associated resources. Guardrails in this context refer to the policies and configurations that help ensure the proper use and management of the machine learning models. <p class=""pt-2"">By default, Amazon Bedrock provides encryption using AWS-managed keys, but it is generally recommended to use customer-managed keys (CMKs) for enhanced control over encryption. Customer-managed keys offer greater flexibility and control over key policies, access, and lifecycle management, allowing you to align with organizational security and compliance requirements.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Customer-Managed Keys (CMKs):</strong> Configure Amazon Bedrock to use customer-managed keys for encrypting guardrails. This can be done by specifying the CMK in the encryption settings of your Bedrock resources.</li><li><strong>Set Up Key Policies and Access Controls:</strong> Define and enforce key policies and access controls for your CMKs to ensure that only authorized users and services have access to the keys.</li><li><strong>Implement Key Rotation Policies:</strong> Set up automatic key rotation for your CMKs to enhance security. Regularly rotating keys reduces the risk of key compromise and ensures that encryption remains effective over time.</li><li><strong>Monitor Key Usage and Access:</strong> Use AWS CloudTrail and AWS Key Management Service (KMS) logs to monitor the usage and access of your CMKs. Regularly review these logs to detect any unauthorized access or anomalies.</li><li><strong>Review Compliance Requirements:</strong> Ensure that the use of CMKs aligns with your organization's compliance requirements and security policies. Adjust key management practices as needed to meet regulatory standards.</li></ul>",7.2,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-310: Cryptographic Issues,cloud
Use Customer-Managed Keys to Encrypt Custom Models,"This vulnerability arises when custom models in Amazon SageMaker are not encrypted using customer-managed keys (CMKs). Custom models refer to machine learning models that you have trained or developed yourself and deployed in AWS SageMaker. By default, Amazon SageMaker uses AWS-managed keys for encryption, but using CMKs provides greater control and security over the encryption process. <p class=""pt-2"">Customer-managed keys offer more granular control over key policies, access, and lifecycle management compared to AWS-managed keys. Without CMKs, the encryption of your custom models relies on AWS-managed keys, which may not align with your organization’s security policies or compliance requirements.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Customer-Managed Keys (CMKs):</strong> Configure Amazon SageMaker to use customer-managed keys for encrypting your custom models. This involves setting up and specifying CMKs in the encryption settings for your SageMaker resources.</li><li><strong>Implement Key Policies and Access Controls:</strong> Define and enforce key policies and access controls for your CMKs to ensure that only authorized users and services can access the keys. This helps protect against unauthorized access and misuse.</li><li><strong>Set Up Key Rotation Policies:</strong> Implement automatic key rotation for your CMKs to enhance security and reduce the risk of key compromise. Regular key rotation helps ensure that encryption remains effective over time.</li><li><strong>Monitor Key Usage and Access:</strong> Use AWS CloudTrail and AWS Key Management Service (KMS) logs to track the usage and access of your CMKs. Regularly review these logs to detect any unauthorized access or anomalies.</li><li><strong>Review Compliance Requirements:</strong> Ensure that the use of CMKs aligns with your organization's compliance requirements and security policies. Adjust key management practices as needed to meet regulatory standards.</li><li><strong>Audit and Test Encryption Configurations:</strong> Periodically audit and test your encryption configurations to ensure that CMKs are properly applied and that your custom models are securely encrypted.</li></ul>",7.2,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-310: Cryptographic Issues,cloud
Use Guardrails to Protect Agent Sessions,"This vulnerability occurs when agent sessions are not protected using guardrails in Amazon Connect or similar customer contact centers. Guardrails are protective measures and configurations designed to ensure the secure and compliant use of agent sessions. They help manage and restrict actions that agents can perform during their sessions, providing security and compliance controls. <p class=""pt-2"">Without appropriate guardrails, there is a higher risk of unauthorized access, misuse of session data, and potential exposure of sensitive information. Guardrails help mitigate risks such as accidental data leaks, unauthorized actions, or non-compliance with data protection regulations.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Implement Guardrails for Agent Sessions:</strong> Configure and enforce guardrails in your Amazon Connect environment or similar contact center solution. This includes setting up policies that control agent actions, data access, and session management.</li><li><strong>Define and Enforce Access Controls:</strong> Establish and enforce access controls for agent sessions to ensure that only authorized personnel can access and perform specific actions. Implement role-based access controls (RBAC) and least privilege principles.</li><li><strong>Enable Monitoring and Auditing:</strong> Activate logging and monitoring features to track agent actions and session activities. Use these logs for auditing, detecting anomalies, and ensuring compliance with security and regulatory requirements.</li><li><strong>Set Up Alerts for Suspicious Activities:</strong> Configure alerts to notify administrators of any suspicious or unauthorized activities during agent sessions. This helps in early detection and response to potential security incidents.</li><li><strong>Review and Update Guardrail Policies:</strong> Regularly review and update guardrail policies to adapt to changing security requirements and operational needs. Ensure that the policies remain effective in protecting agent sessions.</li></ul>",7.2,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-284: Improper Access Control,cloud
Enable AWS CloudFormation Stack Notifications,"This vulnerability arises when AWS CloudFormation stacks do not have notifications enabled. AWS CloudFormation allows you to define and provision infrastructure as code, and stack notifications are a feature that provides alerts on stack events and changes. Enabling notifications helps keep stakeholders informed about the status of stack operations, including creation, updates, and deletions. <p class=""pt-2"">Without notifications, there is a risk of missing critical information about stack changes, which can lead to delayed responses to issues, unawareness of deployment status, and potential disruptions in the infrastructure provisioning process.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Enable Stack Notifications:</strong> Configure AWS CloudFormation stacks to send notifications for various stack events such as creation, updates, and deletions. This can be done by setting up Amazon SNS topics and associating them with your CloudFormation stacks.</li><li><strong>Set Up SNS Topics:</strong> Create Amazon SNS topics to receive notifications from CloudFormation. Ensure that these topics are configured with appropriate permissions and are subscribed to by relevant stakeholders and monitoring systems.</li><li><strong>Configure Notification Filters:</strong> Define and configure filters for the types of events you want to be notified about. This helps in receiving relevant alerts and avoiding notification overload.</li><li><strong>Monitor and Review Notifications:</strong> Regularly monitor and review the notifications to stay informed about stack events and status changes. Ensure that notifications are reaching the intended recipients and are actionable.</li><li><strong>Automate Incident Response:</strong> Integrate notifications with incident response systems and workflows to automate the handling of stack-related issues. This helps in reducing response times and improving overall incident management.</li></ul>",6.3,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:L,"CWE-264: Permissions, Privileges, and Access Controls",cloud
Enable AWS CloudFormation Stack Termination Protection,"This vulnerability arises when AWS CloudFormation stacks do not have termination protection enabled. Termination protection is a feature that prevents accidental or unauthorized deletion of CloudFormation stacks. By enabling termination protection, you ensure that critical stacks cannot be deleted without explicit user intervention, thus protecting your infrastructure from accidental or malicious deletions. <p class=""pt-2"">Without termination protection, stacks can be deleted even if they are critical to your infrastructure, which can lead to potential data loss, service disruptions, and compliance issues.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Termination Protection:</strong> Configure termination protection for all critical CloudFormation stacks to prevent accidental or unauthorized deletions. This can be done by setting the DeletionPolicy attribute to Retain or by enabling termination protection in the stack settings.</li><li><strong>Review Stack Configurations:</strong> Regularly review stack configurations to ensure that termination protection is enabled for stacks that are critical to your infrastructure and operations.</li><li><strong>Implement Access Controls:</strong> Restrict permissions related to stack deletions to only authorized users or roles. Implement least privilege access controls to minimize the risk of unauthorized stack deletions.</li><li><strong>Monitor Stack Deletions:</strong> Use AWS CloudTrail to monitor and log stack deletion activities. Set up alerts to notify administrators of any deletion attempts or activities involving termination protection.</li><li><strong>Automate Protection Configurations:</strong> Use automation tools and scripts to enforce termination protection across your CloudFormation stacks, ensuring consistent application of this protection measure.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L,CWE-682: Incorrect Calculation of Critical Metrics,cloud
Enable CloudFront Distributions Field Level Encryption,"This vulnerability arises when AWS CloudFront distributions do not have field-level encryption enabled. Field-level encryption is a feature that allows you to protect sensitive data within specific fields of HTTP requests and responses as they pass through CloudFront. It ensures that sensitive information, such as personal data or financial details, is encrypted and remains secure as it travels from the client to your origin servers. <p class=""pt-2"">Without field-level encryption, sensitive data transmitted through CloudFront distributions may be exposed in plaintext, increasing the risk of data breaches and unauthorized access. Field-level encryption provides an additional layer of security by encrypting sensitive fields separately from the rest of the data.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Field-Level Encryption:</strong> Configure CloudFront distributions to use field-level encryption for sensitive data. This involves setting up field-level encryption profiles and associating them with your CloudFront distributions.</li><li><strong>Define Encryption Profiles:</strong> Create and configure field-level encryption profiles to specify which fields should be encrypted. Define the encryption keys and settings according to your security requirements.</li><li><strong>Update CloudFront Distribution Settings:</strong> Associate the field-level encryption profiles with your CloudFront distributions. Ensure that the profiles are applied to the relevant HTTP request and response fields.</li><li><strong>Monitor and Review Encryption Settings:</strong> Regularly monitor and review your field-level encryption settings to ensure they remain effective and aligned with your security policies. Update profiles and settings as needed to address changing security requirements.</li><li><strong>Implement Strong Encryption Keys:</strong> Use strong encryption keys and manage them securely. Ensure that encryption keys are rotated periodically and protected against unauthorized access.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:L,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable HTTPS For CloudFront Distributions,"This vulnerability arises when AWS CloudFront distributions are not configured to use HTTPS for secure data transmission. HTTPS (Hypertext Transfer Protocol Secure) ensures that data exchanged between clients and CloudFront distributions is encrypted, protecting it from interception and tampering during transit. Without HTTPS, data is transmitted in plaintext, increasing the risk of data breaches and unauthorized access. <p class=""pt-2"">Enabling HTTPS for CloudFront distributions is a fundamental security measure to safeguard sensitive information and ensure secure communication between clients and your CloudFront distributions.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable HTTPS:</strong> Configure your CloudFront distributions to use HTTPS for secure data transmission. This involves setting up SSL/TLS certificates and configuring your CloudFront distributions to enforce HTTPS connections.</li><li><strong>Obtain and Install SSL/TLS Certificates:</strong> Acquire SSL/TLS certificates from a trusted Certificate Authority (CA) and install them on your CloudFront distributions. Ensure that the certificates are valid and properly configured.</li><li><strong>Redirect HTTP to HTTPS:</strong> Set up redirection rules to automatically redirect HTTP traffic to HTTPS. This ensures that all communication with your CloudFront distributions is encrypted.</li><li><strong>Use Strong TLS Protocols:</strong> Configure CloudFront to use strong TLS protocols and ciphers for secure communication. Avoid outdated and insecure protocols such as TLS 1.0 and 1.1.</li><li><strong>Monitor and Renew Certificates:</strong> Regularly monitor the status of your SSL/TLS certificates and renew them before they expire. Implement automated renewal processes if possible to ensure continuous secure communication.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,CWE-319: Cleartext Transmission of Sensitive Information,cloud
Enable CloudFront Distributions Logging,"This vulnerability arises when AWS CloudFront distributions do not have logging enabled. CloudFront logging captures detailed information about the requests made to your CloudFront distributions, including access logs, which provide valuable insights into the traffic patterns, request sources, and usage of your distributions. Without logging enabled, you may lack visibility into the activity on your CloudFront distributions, making it challenging to detect and respond to potential security incidents or operational issues. <p class=""pt-2"">Enabling logging for CloudFront distributions is crucial for monitoring and analyzing access patterns, troubleshooting issues, and ensuring compliance with security and operational requirements.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Enable CloudFront Logging:</strong> Configure your CloudFront distributions to enable logging. This involves setting up logging options in the CloudFront distribution settings and specifying an S3 bucket to store the access logs.</li><li><strong>Specify Log Delivery Destination:</strong> Choose an S3 bucket to which CloudFront will deliver the access logs. Ensure that the bucket has appropriate permissions to receive and store the logs securely.</li><li><strong>Configure Log Format and Retention:</strong> Configure the log format and retention policies according to your operational and security requirements. Ensure that logs are retained for an adequate period to meet compliance and auditing needs.</li><li><strong>Monitor Log Delivery:</strong> Regularly monitor the delivery of access logs to the S3 bucket to ensure that logging is functioning correctly. Set up notifications or alerts to be informed of any issues with log delivery.</li><li><strong>Analyze Access Logs:</strong> Periodically analyze the access logs to gain insights into traffic patterns, detect anomalies, and identify potential security threats. Use log analysis tools or services to facilitate this process.</li><li><strong>Implement Security Controls:</strong> Ensure that the S3 bucket where logs are stored is properly secured. Implement access controls to restrict access to the logs and protect them from unauthorized access or tampering.</li><li><strong>Automate Logging Configuration:</strong> Use automation tools or scripts to enforce logging configurations across all CloudFront distributions, ensuring consistent application of logging settings.</li></ul>",4,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N,CWE-778: Insufficient Logging,cloud
CloudFront Distributions Using Deprecated SSL Protocols,"This vulnerability occurs when AWS CloudFront distributions are configured to use deprecated SSL/TLS protocols. SSL/TLS protocols are used to encrypt data transmitted between clients and CloudFront distributions, ensuring secure communication. Deprecated protocols, such as SSL 2.0, SSL 3.0, and TLS 1.0, are no longer considered secure due to known vulnerabilities and weaknesses that can be exploited by attackers. <p class=""pt-2"">Using deprecated protocols increases the risk of data breaches, as they may not provide adequate protection against modern attack techniques. It is crucial to configure CloudFront distributions to use current, secure protocols to ensure data security and compliance with best practices.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Update SSL/TLS Protocols:</strong> Configure your CloudFront distributions to use up-to-date SSL/TLS protocols. Disable deprecated protocols such as SSL 2.0, SSL 3.0, and TLS 1.0, and ensure that only secure protocols like TLS 1.2 and TLS 1.3 are enabled.</li><li><strong>Review and Update Cipher Suites:</strong> Ensure that your CloudFront distributions use strong and secure cipher suites. Disable weak or outdated cipher suites that are associated with deprecated protocols.</li><li><strong>Enable Forward Secrecy:</strong> Configure your CloudFront distributions to use cipher suites that support forward secrecy. This ensures that session keys are not compromised even if the server’s private key is exposed.</li><li><strong>Monitor and Audit Protocol Usage:</strong> Regularly monitor and audit the SSL/TLS protocols and cipher suites used by your CloudFront distributions. Ensure that they comply with current security standards and best practices.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,CWE-319: Cleartext Transmission of Sensitive Information,cloud
Integrate Amazon WAF For CloudFront Distributions,"This vulnerability arises when AWS CloudFront distributions are not integrated with Amazon Web Application Firewall (WAF). Amazon WAF provides a way to protect web applications from common web exploits and attacks by allowing you to create custom security rules. Without integrating WAF, CloudFront distributions are exposed to a range of potential threats, such as SQL injection, cross-site scripting (XSS), and other application layer attacks. <p class=""pt-2"">Integrating Amazon WAF with CloudFront distributions is crucial for enhancing security by filtering and monitoring web traffic, and mitigating threats before they reach your application servers.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Integrate Amazon WAF with CloudFront:</strong> Configure Amazon WAF and integrate it with your CloudFront distributions. This involves creating a WAF web ACL (Access Control List) and associating it with your CloudFront distributions.</li><li><strong>Define Security Rules:</strong> Create and configure WAF rules to protect against common web exploits and attacks. Customize the rules to fit your specific application requirements and threat landscape.</li><li><strong>Monitor and Analyze Traffic:</strong> Use Amazon WAF’s logging and monitoring features to analyze traffic patterns, detect anomalies, and identify potential security threats. Regularly review and adjust your WAF rules based on the insights gained.</li><li><strong>Update WAF Rules Regularly:</strong> Regularly update and refine your WAF rules to address new and emerging threats. Ensure that your WAF configuration remains aligned with best practices and evolving security requirements.</li></ul>",7.4,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-284: Improper Access Control,cloud
Unencrypted CloudFront Traffic To Origin,"This vulnerability occurs when AWS CloudFront distributions are configured to send traffic to the origin servers (e.g., your application servers or S3 buckets) without encryption. Traffic between CloudFront and origin servers should be encrypted to ensure that data transmitted across the internet remains secure. Unencrypted traffic can expose sensitive data to interception, eavesdropping, and tampering. <p class=""pt-2"">Ensuring that CloudFront distributions use encryption for traffic to origin servers is crucial for maintaining the confidentiality and integrity of the data in transit and complying with best security practices.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Encryption for CloudFront Origins:</strong> Configure your CloudFront distributions to use HTTPS for communicating with origin servers. Ensure that the origin servers are set up to accept and properly handle HTTPS requests.</li><li><strong>Update CloudFront Distribution Settings:</strong> In the CloudFront distribution settings, specify that requests to the origin must be sent using HTTPS. This involves setting the ""Origin Protocol Policy"" to ""HTTPS Only"" in the CloudFront distribution configuration.</li><li><strong>Obtain and Install SSL/TLS Certificates:</strong> Ensure that SSL/TLS certificates are obtained and installed on the origin servers to support HTTPS traffic. Use certificates from a trusted certificate authority (CA) and configure them properly on the origin servers.</li><li><strong>Test Encryption Configuration:</strong> After configuring encryption for CloudFront traffic to origin servers, thoroughly test the setup to ensure that HTTPS connections are working correctly and that data is transmitted securely.</li><li><strong>Monitor and Audit Traffic:</strong> Regularly monitor and audit traffic between CloudFront and origin servers to ensure that encryption is enforced and functioning as expected. Set up alerts or notifications for any issues related to encryption.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-319: Cleartext Transmission of Sensitive Information,cloud
Configure CloudFront Distributions To Use Default Root Object,"This vulnerability occurs when AWS CloudFront distributions are not configured to use a default root object. The default root object is a file that CloudFront serves when a request is made to the root of a CloudFront distribution, such as <i class=""font-medium"">https://example.com/</i>. Without a default root object, requests to the root URL may result in errors or unintended behavior, potentially leading to a poor user experience or exposing internal server details. <p class=""pt-2"">Configuring a default root object helps ensure that users are directed to a specific resource when accessing the root of the distribution, providing a more seamless and secure experience.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Configure Default Root Object:</strong> Set up a default root object in your CloudFront distribution configuration. This involves specifying the name of the file (e.g., index.html) that should be served when a request is made to the root URL of the distribution.</li><li><strong>Update CloudFront Distribution Settings:</strong> In the CloudFront console, navigate to the distribution settings and update the ""Default Root Object"" field to point to the appropriate file. Ensure that the specified file exists and is correctly served by the origin server.</li><li><strong>Verify Configuration:</strong> After configuring the default root object, test the CloudFront distribution by accessing the root URL to ensure that the correct default object is served. Check for any errors or issues with the default root object configuration.</li><li><strong>Monitor and Audit:</strong> Regularly monitor and audit CloudFront distributions to ensure that default root objects are properly configured and serving the intended content. Address any issues promptly to maintain a consistent user experience.</li></ul>",4.3,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N,CWE-16: Configuration,cloud
Enable Origin Access Control for Distributions with S3 Origin,"This vulnerability occurs when AWS CloudFront distributions that use Amazon S3 as an origin are not configured to use Origin Access Control (OAC). Origin Access Control restricts access to S3 buckets, ensuring that only CloudFront can access the bucket content. Without OAC, S3 buckets are exposed to potential unauthorized access, as they can be accessed directly through their public URL or by other entities if not properly secured. <p class=""pt-2"">Enabling Origin Access Control helps secure the S3 bucket by ensuring that only authorized CloudFront distributions can access it, thus protecting your data from unauthorized access and ensuring proper access control.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Origin Access Control:</strong> Configure Origin Access Control for your CloudFront distributions with S3 origins. This involves creating an Origin Access Control (OAC) policy and associating it with your CloudFront distribution to restrict S3 bucket access.</li><li><strong>Update S3 Bucket Permissions:</strong> Adjust the permissions of your S3 bucket to ensure that it only allows access from CloudFront through the configured OAC. This typically involves updating the bucket policy to allow access from the OAC.</li><li><strong>Review and Restrict S3 Bucket Access:</strong> Ensure that S3 bucket permissions are restricted to only the necessary entities and services. Avoid using overly permissive settings that could expose the bucket to unauthorized access.</li><li><strong>Monitor Access Logs:</strong> Enable logging for both CloudFront and S3 to monitor access and activity. Regularly review logs to detect any unauthorized access attempts or suspicious activity.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-284: Improper Access Control,cloud
CloudTrail Trails Disabled,"This vulnerability occurs when AWS CloudTrail trails are disabled, meaning that CloudTrail is not actively logging API activity within the AWS account. AWS CloudTrail is a service that enables governance, compliance, and operational and risk auditing by logging API calls made on your account. Disabling CloudTrail trails can result in a lack of visibility into API activity, making it difficult to detect and investigate security incidents, track changes, and ensure compliance. <p class=""pt-2"">Having CloudTrail trails disabled reduces your ability to monitor and audit account activity, which is crucial for identifying unauthorized actions, understanding user behavior, and maintaining security and compliance.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable CloudTrail Trails:</strong> Ensure that CloudTrail trails are enabled for all regions in your AWS account. This involves creating or updating CloudTrail configurations to capture and log API activity.</li><li><strong>Configure Logging:</strong> Set up CloudTrail to log API calls for all AWS services, including management events and data events. Configure CloudTrail to store logs in a secure and centralized location, such as an S3 bucket.</li><li><strong>Enable Log File Validation:</strong> Enable log file validation to ensure that CloudTrail logs are not tampered with. This helps maintain the integrity of log data and provides assurance that logs have not been altered.</li><li><strong>Set Up Alerts:</strong> Configure alerts for CloudTrail events to notify you of critical actions or changes in your AWS environment. This helps ensure timely awareness and response to important activities.</li><li><strong>Regularly Review Logs:</strong> Periodically review CloudTrail logs to identify any anomalies, unauthorized actions, or potential security issues. This helps maintain ongoing oversight and security.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-18: Missing Default Value,cloud
MFA Disabled For CloudTrail Bucket Delete,"This vulnerability occurs when Multi-Factor Authentication (MFA) is not enabled for delete operations on the S3 bucket where CloudTrail logs are stored. MFA for bucket delete operations adds an extra layer of security by requiring a second factor of authentication to delete objects in an S3 bucket. Without MFA, unauthorized users or attackers with sufficient permissions could potentially delete critical CloudTrail logs, compromising your ability to monitor and audit API activity. <p class=""pt-2"">Enabling MFA for delete operations helps protect the integrity of CloudTrail logs by ensuring that deletions require additional authentication beyond just having the appropriate permissions.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable MFA for Bucket Delete Operations:</strong> Configure your S3 bucket to require MFA for delete operations. This involves setting up a bucket policy that enforces MFA for deleting objects in the bucket.</li><li><strong>Review and Update S3 Bucket Policies:</strong> Ensure that your S3 bucket policies and permissions are configured to require MFA for delete operations. This helps ensure that only authorized users with MFA can perform deletions.</li><li><strong>Enable Versioning:</strong> Consider enabling versioning on the S3 bucket to protect against accidental or malicious deletions. Versioning allows you to recover previous versions of objects that have been deleted or overwritten.</li><li><strong>Monitor and Audit Access:</strong> Regularly monitor and audit access to the S3 bucket. Review access logs and permissions to ensure that only authorized users have the necessary permissions and that MFA is enforced.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-522: Insufficiently Protected Credentials,cloud
CloudTrail Trails Logs Disabled In CloudWatch,"This vulnerability arises when AWS CloudTrail logs are not being delivered to or are disabled in CloudWatch Logs. AWS CloudTrail is a service that logs API calls made on your AWS account, and these logs can be sent to Amazon CloudWatch Logs for real-time monitoring and alerting. Disabling CloudTrail logs in CloudWatch means you lose the ability to stream and analyze CloudTrail logs in real-time, which is crucial for monitoring, auditing, and responding to security events. <p class=""pt-2"">Enabling CloudTrail logs in CloudWatch helps maintain continuous visibility into API activity, facilitating timely detection of unauthorized or suspicious actions and ensuring compliance with auditing requirements.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable CloudTrail Logs in CloudWatch:</strong> Configure your CloudTrail settings to deliver logs to CloudWatch Logs. This involves creating or updating a CloudWatch Logs group and ensuring that CloudTrail is set to stream logs to this group.</li><li><strong>Configure Log Streams and Filters:</strong> Set up CloudWatch Logs streams and filters to manage and analyze CloudTrail logs. This allows you to view, search, and create metrics based on the log data.</li><li><strong>Set Up Alerts and Monitoring:</strong> Create CloudWatch Alarms and metric filters based on CloudTrail logs to detect and alert on specific events or anomalies. This helps ensure timely awareness and response to critical activities.</li><li><strong>Review Log Retention Policies:</strong> Ensure that log retention policies are configured to retain CloudTrail logs for an appropriate duration based on your operational and compliance needs.</li><li><strong>Regularly Review and Test Configurations:</strong> Periodically review and test your CloudTrail and CloudWatch configurations to ensure they are functioning correctly and that logs are being delivered as expected.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-18: Missing Default Value,cloud
CloudTrail Logs Not Encrypted With KMS Customer Master Keys (CMKs),"This vulnerability occurs when AWS CloudTrail logs are not encrypted using AWS Key Management Service (KMS) Customer Master Keys (CMKs). AWS CloudTrail records API calls made on your AWS account, and these logs contain sensitive information that should be protected. By default, CloudTrail logs are encrypted using AWS-managed keys. However, using KMS CMKs provides an additional layer of security and control over the encryption and decryption of these logs. <p class=""pt-2"">Not using KMS CMKs means that the logs are only protected by default encryption methods, which might not meet the security and compliance requirements of your organization. KMS CMKs offer greater control over encryption policies, key rotation, and access management, ensuring that your logs are protected according to your specific security needs.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable KMS Encryption for CloudTrail Logs:</strong> Configure CloudTrail to use KMS CMKs for encrypting log files. This involves specifying a KMS key when setting up or updating CloudTrail logging configurations.</li><li><strong>Create and Manage KMS CMKs:</strong> Set up and manage KMS CMKs for encryption. Ensure that these keys are properly configured, rotated regularly, and access-controlled according to your organization's security policies.</li><li><strong>Review Encryption Settings:</strong> Periodically review and update your CloudTrail and KMS configurations to ensure that logs are encrypted with the appropriate CMKs and that encryption settings align with security and compliance requirements.</li><li><strong>Set Up Key Policies and Access Controls:</strong> Define and implement key policies and access controls for your KMS CMKs to ensure that only authorized users and services have access to encryption keys.</li><li><strong>Monitor Key Usage and Access:</strong> Utilize CloudTrail to monitor KMS key usage and access patterns. Set up alerts for any unusual activity or access attempts to KMS CMKs.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
CloudTrail Log File Validation Disabled,"This vulnerability occurs when AWS CloudTrail log file validation is disabled. CloudTrail log file validation ensures the integrity of CloudTrail logs by creating a digital signature for each log file. This signature allows you to verify that the logs have not been altered or tampered with after they were written. Disabling log file validation means there is no mechanism to verify the integrity of the log files, which increases the risk of undetected tampering or manipulation. <p class=""pt-2"">Enabling log file validation is crucial for maintaining the trustworthiness of your logs, ensuring that they accurately reflect API activity without interference or modification.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable CloudTrail Log File Validation:</strong> Configure CloudTrail to enable log file validation. This involves setting up the log file validation feature in CloudTrail settings, which will automatically generate and validate digital signatures for log files.</li><li><strong>Review and Update CloudTrail Settings:</strong> Ensure that CloudTrail is properly configured to include log file validation. Periodically review and update your CloudTrail settings to ensure they meet your security and compliance requirements.</li><li><strong>Monitor Validation Results:</strong> Regularly check the results of log file validation to identify any discrepancies or issues with log integrity. Set up alerts for validation failures or anomalies.</li><li><strong>Implement Additional Security Measures:</strong> Complement log file validation with other security measures, such as encryption and access controls, to further protect your CloudTrail logs from unauthorized access and tampering.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-20: Improper Input Validation,cloud
CloudTrail S3 Bucket Access Logs Disabled,"This vulnerability occurs when AWS CloudTrail is not configured to log access requests for the S3 buckets used by CloudTrail. Access logging for S3 buckets tracks and records requests made to the bucket, providing valuable information about the usage and access patterns of your CloudTrail logs. Disabling access logs for these S3 buckets means you lose visibility into who is accessing or modifying the CloudTrail logs stored in these buckets. <p class=""pt-2"">Enabling access logs for S3 buckets helps monitor and audit interactions with your CloudTrail logs, providing insights into access patterns and potential unauthorized access attempts.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable S3 Bucket Access Logging:</strong> Configure S3 buckets used by CloudTrail to enable access logging. This involves setting up an S3 bucket to store access logs and configuring the relevant bucket policy to allow CloudTrail to log access requests.</li><li><strong>Review and Update S3 Bucket Policies:</strong> Ensure that S3 bucket policies and permissions are correctly configured to allow access logging and to protect the logs from unauthorized access or modifications.</li><li><strong>Monitor Access Logs:</strong> Regularly review and analyze the access logs generated for your S3 buckets to detect any unusual or unauthorized access patterns. Set up alerts for critical events or anomalies.</li><li><strong>Implement Additional Security Measures:</strong> Complement access logging with other security measures, such as encryption and access controls, to further protect CloudTrail logs stored in S3 buckets.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N, CWE-20: Improper Input Validation,cloud
Publicly Accessible CloudTrail S3 Bucket Logs,"This vulnerability occurs when AWS CloudTrail logs are stored in an S3 bucket that is publicly accessible. CloudTrail logs contain detailed records of API calls made on your AWS account, including sensitive information such as resource names, IP addresses, and user identities. When these logs are stored in a publicly accessible S3 bucket, unauthorized users can potentially view, download, or manipulate these logs, leading to a serious security risk. <p class=""pt-2"">Publicly accessible S3 buckets can expose sensitive audit data to anyone with the appropriate URL or bucket access, increasing the risk of data breaches, unauthorized access, and compliance violations. It is crucial to ensure that CloudTrail logs are stored in S3 buckets with proper access controls to prevent unauthorized exposure.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict S3 Bucket Access:</strong> Update the bucket policy and permissions to ensure that the S3 bucket storing CloudTrail logs is not publicly accessible. Configure the bucket to allow access only to authorized users and services.</li><li><strong>Implement Access Controls:</strong> Use AWS Identity and Access Management (IAM) policies and bucket policies to enforce strict access controls for the S3 bucket. Only allow necessary users and roles to access or manage the logs.</li><li><strong>Enable S3 Bucket Encryption:</strong> Ensure that CloudTrail logs are encrypted in S3 using either server-side encryption with AWS Key Management Service (KMS) keys or server-side encryption with S3-managed keys.</li><li><strong>Review S3 Bucket Policies Regularly:</strong> Periodically review and update your S3 bucket policies and permissions to ensure they comply with security best practices and compliance requirements.</li><li><strong>Monitor Access Logs:</strong> Enable and monitor access logging for the S3 bucket to track who is accessing or attempting to access the CloudTrail logs. Set up alerts for any unauthorized access attempts or anomalies.</li></ul>",7.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-284: Improper Access Control,cloud
Avoid Duplicate Entries in Amazon CloudTrail Logs,"This vulnerability occurs when Amazon CloudTrail logs contain duplicate entries. Duplicate entries in CloudTrail logs can arise due to various issues, such as misconfigured logging settings, errors in log processing, or issues with multiple trails capturing the same events. These duplicates can obscure the true activity recorded in the logs, making it difficult to analyze and audit API calls effectively. <p class=""pt-2"">Avoiding duplicate entries is essential for maintaining the accuracy and reliability of your CloudTrail logs. Duplicate entries can complicate incident investigations, affect log analysis, and lead to inefficiencies in monitoring and auditing activities.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Review CloudTrail Configuration:</strong> Ensure that CloudTrail is properly configured to avoid capturing duplicate events. Check for any overlapping trails or configurations that may cause duplicate entries.</li><li><strong>Consolidate Trails:</strong> If multiple CloudTrail trails are used, consolidate them to ensure that events are captured only once. Avoid having multiple trails logging the same events to prevent duplication.</li><li><strong>Filter and Deduplicate Logs:</strong> Implement log processing mechanisms to filter and deduplicate CloudTrail logs. Use scripts or tools to process logs and remove duplicate entries before analysis.</li><li><strong>Monitor CloudTrail Logs:</strong> Regularly review and monitor CloudTrail logs to identify any patterns of duplication. Set up alerts for anomalies that could indicate issues with log processing or configuration.</li></ul>",6.4,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-173: Improper Handling of Duplicate Data,cloud
CloudWatch Network Access Control Lists (NACL) Alarm Not Configured,"This vulnerability arises when AWS CloudWatch alarms are not configured for monitoring Network Access Control Lists (NACLs). NACLs are critical components of AWS security groups that control inbound and outbound traffic to and from network interfaces in your VPC. Without CloudWatch alarms to monitor NACLs, you lack real-time visibility into changes or issues with your network access control configurations. <p class=""pt-2"">CloudWatch alarms help track and respond to critical changes or anomalies in your NACL configurations, providing timely notifications and enabling proactive security measures. Failing to configure these alarms can lead to delayed detection of network access issues, potentially exposing your environment to security risks.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Configure CloudWatch Alarms for NACLs:</strong> Set up CloudWatch alarms to monitor NACL configurations and changes. Create alarms that trigger notifications based on specific thresholds or anomalies related to network traffic and access rules.</li><li><strong>Monitor NACL Activity:</strong> Regularly review and analyze the data collected by CloudWatch alarms for NACLs. Use this data to identify trends, detect potential issues, and ensure that your network access rules are functioning as intended.</li><li><strong>Implement Automated Responses:</strong> Consider integrating automated responses with CloudWatch alarms to address detected issues promptly. For example, configure automated remediation actions or alerts for network access anomalies.</li><li><strong>Review and Update Alarm Configurations:</strong> Periodically review and update your CloudWatch alarm configurations to ensure they are aligned with your security and operational requirements. Adjust thresholds and notification settings as needed.</li></ul>",6.4,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-284: Improper Access Control,cloud
CloudWatch Network Gateway's Alarm Not Configured,"This vulnerability occurs when AWS CloudWatch alarms are not configured to monitor Network Gateways (such as NAT Gateways or Virtual Private Gateways). Network Gateways are crucial for managing and routing network traffic between different segments of your AWS infrastructure and the internet. Without CloudWatch alarms to monitor the performance and status of these gateways, you lack visibility into potential issues that could affect network connectivity and security. <p class=""pt-2"">CloudWatch alarms provide critical real-time monitoring and alerting for network gateways, enabling you to detect and respond to anomalies or performance issues swiftly. The absence of such alarms can lead to delays in identifying network problems, potentially impacting your application's availability and security.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Configure CloudWatch Alarms for Network Gateways:</strong> Set up CloudWatch alarms to monitor the performance and status of Network Gateways. Create alarms to trigger notifications based on specific metrics such as traffic throughput, error rates, and gateway status.</li><li><strong>Monitor Metrics and Logs:</strong> Regularly review CloudWatch metrics and logs related to network gateways. Use this data to identify trends, detect anomalies, and ensure optimal performance of your network infrastructure.</li><li><strong>Implement Automated Responses:</strong> Consider integrating automated responses with CloudWatch alarms to address detected issues promptly. For example, configure automatic remediation actions or alerts for anomalies related to network gateways.</li><li><strong>Review and Update Alarm Configurations:</strong> Periodically review and update your CloudWatch alarm configurations to ensure they meet your monitoring and security requirements. Adjust thresholds and notification settings as needed.</li></ul>",6.4,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N, CWE-284: Improper Access Control,cloud
CloudWatch Network Route Table's Alarm Not Configured,"This vulnerability occurs when AWS CloudWatch alarms are not configured to monitor Network Route Tables. Network Route Tables are essential for directing traffic within your VPC, determining how data packets are routed between subnets and internet gateways or other network interfaces. Without CloudWatch alarms, you lack real-time monitoring and alerting for changes or issues with your route tables. <p class=""pt-2"">Proper monitoring of Network Route Tables through CloudWatch alarms is crucial for maintaining network performance and security. Failing to configure these alarms can lead to undetected routing problems or misconfigurations, which may impact network connectivity and the performance of your applications.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Configure CloudWatch Alarms for Network Route Tables:</strong> Set up CloudWatch alarms to monitor the performance and status of Network Route Tables. Create alarms to trigger notifications based on specific metrics such as routing changes, traffic patterns, and network connectivity issues.</li><li><strong>Monitor Metrics and Logs:</strong> Regularly review CloudWatch metrics and logs related to network route tables. Use this data to identify trends, detect anomalies, and ensure proper routing configurations.</li><li><strong>Implement Automated Responses:</strong> Consider integrating automated responses with CloudWatch alarms to address detected issues promptly. For example, configure automatic remediation actions or alerts for routing anomalies.</li><li><strong>Review and Update Alarm Configurations:</strong> Periodically review and update your CloudWatch alarm configurations to ensure they meet your monitoring and security requirements. Adjust thresholds and notification settings as needed.</li></ul>",6.4,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-284: Improper Access Control,cloud
CloudWatch VPC Alarm Not Configured,"This vulnerability occurs when AWS CloudWatch alarms are not configured to monitor Virtual Private Cloud (VPC) metrics. VPCs are fundamental components of AWS networking, providing isolated network environments for your resources. Without CloudWatch alarms set up for VPC metrics, you lack real-time visibility into the performance, security, and configuration of your VPC, which could lead to undetected issues and delayed responses. <p class=""pt-2""> CloudWatch alarms are essential for monitoring various aspects of VPC performance, such as network traffic, bandwidth utilization, and potential security incidents. The absence of these alarms means that anomalies or problems in VPC operations might not be detected promptly, potentially impacting the availability and security of your network infrastructure.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Configure CloudWatch Alarms for VPC Metrics:</strong> Set up CloudWatch alarms to monitor key VPC metrics, such as network traffic, bandwidth usage, and connectivity issues. Create alarms that trigger notifications based on specific thresholds or anomalies.</li><li><strong>Monitor Metrics and Logs:</strong> Regularly review CloudWatch metrics and logs related to your VPC. Use this data to identify trends, detect issues, and ensure that your VPC is functioning optimally.</li><li><strong>Implement Automated Responses:</strong> Consider integrating automated responses with CloudWatch alarms to address detected issues promptly. For example, configure automatic remediation actions or alerts for anomalies detected in VPC metrics.</li><li><strong>Review and Update Alarm Configurations:</strong> Periodically review and update your CloudWatch alarm configurations to ensure they align with your monitoring and security needs. Adjust thresholds and notification settings as necessary.</li></ul>",6.4,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-284: Improper Access Control,cloud
Cross-Account Sharing Is Enabled For CloudWatch Logs,"This vulnerability arises when cross-account sharing is enabled for AWS CloudWatch Logs. Cross-account sharing allows AWS CloudWatch Logs data to be accessed and managed by AWS accounts other than the one that owns the logs. While this feature can be useful for centralized log management and analysis, enabling it without proper controls can lead to security risks and potential exposure of sensitive log data. <p class=""pt-2""> Allowing multiple AWS accounts to access CloudWatch Logs can increase the risk of unauthorized access or data leaks if not configured correctly. Proper access controls and monitoring should be enforced to ensure that only authorized accounts have access to your log data and that any cross-account sharing is done securely.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Review and Restrict Cross-Account Access:</strong> Regularly review cross-account access permissions for CloudWatch Logs and ensure that only trusted and necessary accounts have access. Limit access to the minimum required permissions.</li><li><strong>Implement Access Controls:</strong> Configure AWS Identity and Access Management (IAM) policies and CloudWatch Logs resource policies to enforce strict access controls for cross-account sharing.</li><li><strong>Enable Logging and Monitoring:</strong> Use CloudTrail and CloudWatch to monitor and log access requests and activities related to cross-account sharing of CloudWatch Logs. Set up alarms to detect and respond to unauthorized access attempts.</li><li><strong>Periodic Audits:</strong> Conduct periodic audits of cross-account sharing configurations and access controls to ensure they remain aligned with security policies and compliance requirements.</li><li><strong>Use Encryption:</strong> Ensure that CloudWatch Logs are encrypted using AWS KMS (Key Management Service) to protect log data in transit and at rest. Configure encryption settings to enforce strong encryption practices.</li></ul>",6.4,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N,CWE-284: Improper Access Control,cloud
CloudWatch Log Groups Without KMS Encryption,"This vulnerability arises when AWS CloudWatch Log Groups are not configured with AWS Key Management Service (KMS) encryption. KMS provides encryption for data at rest using customer-managed keys, which helps ensure that log data is protected from unauthorized access. <p class=""pt-2""> Without KMS encryption, CloudWatch Logs are not encrypted at rest, which increases the risk of unauthorized access to sensitive log data. This can result in exposure of confidential information, data breaches, and non-compliance with security and regulatory standards.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Enable KMS Encryption for CloudWatch Logs:</strong> Configure CloudWatch Log Groups to use AWS KMS encryption. Create or select a KMS key and associate it with your CloudWatch Log Groups to encrypt log data at rest.</li><li><strong>Review KMS Key Policies:</strong> Ensure that KMS key policies are configured to restrict access to authorized users and roles only. Regularly review and update key policies to align with your security requirements.</li><li><strong>Audit Encryption Configurations:</strong> Regularly audit your CloudWatch Log Groups to verify that KMS encryption is enabled and properly configured. Use AWS Config or other compliance tools to monitor encryption settings.</li><li><strong>Educate Teams:</strong> Train your teams on the importance of encrypting log data and the role of KMS in securing CloudWatch Logs. Ensure that security best practices are followed when configuring encryption.</li><li><strong>Implement Encryption Best Practices:</strong> Follow AWS best practices for key management and encryption, including using strong key rotation policies and managing access controls effectively.</li></ul>",6.4,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,CWE-312: Cleartext Storage of Sensitive Information,cloud
Sensitive Information In CloudWatch Event's Logs,"This vulnerability occurs when sensitive information is exposed in AWS CloudWatch Event logs. CloudWatch Events provide a mechanism to track and respond to changes in AWS resources and services. If sensitive data, such as credentials, personal information, or internal identifiers, is logged in CloudWatch Events, it can be accessed by users with appropriate permissions or potentially intercepted by unauthorized parties. <p class=""pt-2""> Sensitive information in logs can lead to various security and privacy issues, including data breaches, unauthorized access, and non-compliance with regulatory standards. Proper management and masking of sensitive data are crucial to maintaining the security and integrity of your logging practices.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Avoid Logging Sensitive Information:</strong> Review and modify the logging configuration to ensure that sensitive information is not included in CloudWatch Event logs. Implement filters and data masking to prevent sensitive data from being logged.</li><li><strong>Review and Update Log Configurations:</strong> Regularly audit your CloudWatch Event log configurations to ensure that they comply with security policies and do not include sensitive data. Update log formats and data handling practices as necessary.</li><li><strong>Implement Data Masking and Redaction:</strong> Use techniques such as data masking or redaction to obfuscate sensitive information before it is logged. Ensure that any sensitive data is appropriately handled and protected in logs.</li><li><strong>Set Access Controls:</strong> Restrict access to CloudWatch Events logs to authorized personnel only. Use IAM policies and resource policies to enforce access controls and prevent unauthorized access to sensitive log data.</li><li><strong>Monitor and Audit Logs:</strong> Regularly monitor and audit CloudWatch Event logs for signs of sensitive information exposure. Set up alerts and notifications for any anomalies or potential security issues.</li></ul>",6.4,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,CWE-532: Insertion of Sensitive Information into Log File,cloud
Projects Using User-Controlled Buildspec File,"This vulnerability occurs when a project in AWS CodeBuild uses a buildspec file that is under user control. A buildspec file defines the build commands and settings for a CodeBuild project. Allowing users to control or modify the buildspec file can lead to various security risks, including execution of malicious commands, exposure of sensitive information, and unauthorized changes to the build environment. <p class=""pt-2""> User-controlled buildspec files can be exploited to perform unauthorized actions or inject malicious code during the build process. This can compromise the integrity of the build, lead to data breaches, and affect the overall security of the build environment.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access to Buildspec Files:</strong> Implement strict access controls to ensure that only authorized users can modify the buildspec file. Use AWS IAM policies to manage permissions and restrict access to the buildspec file.</li><li><strong>Validate Buildspec Files:</strong> Implement validation mechanisms to ensure that buildspec files adhere to security and compliance standards. Review and audit buildspec files for potential security issues before they are used in builds.</li><li><strong>Use Environment Variables:</strong> Avoid hardcoding sensitive information in the buildspec file. Instead, use environment variables to securely pass configuration data and credentials during the build process.</li><li><strong>Monitor and Audit Build Processes:</strong> Regularly monitor and audit build processes for any unauthorized changes or suspicious activities related to the buildspec file. Set up alerts to detect potential security incidents.</li></ul>",7.2,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-20: Improper Input Validation,cloud
Disable Guest Access For Cognito Identity Pool,"Amazon Cognito Identity Pools provide temporary credentials to access AWS services. By default, these pools can allow unauthenticated (guest) users to access certain AWS resources. If guest access is enabled, unauthorized users can potentially access and interact with your AWS resources without authentication, leading to security risks and potential misuse of resources. <p class=""pt-2"">Allowing guest access can expose your AWS environment to unauthorized access, data leakage, and other security vulnerabilities. Disabling guest access for Cognito Identity Pools is essential to ensure that only authenticated users can access your resources, thereby protecting your AWS environment from unauthorized interactions.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Disable Guest Access:</strong> Review your Cognito Identity Pool settings and disable guest access to ensure that only authenticated users can obtain credentials and access your AWS resources.</li><li><strong>Implement Strong Authentication:</strong> Require users to authenticate using supported identity providers (e.g., Amazon, Facebook, Google, or SAML) before they can access AWS resources through Cognito Identity Pools.</li><li><strong>Restrict Access Permissions:</strong> Apply the principle of least privilege by restricting the permissions granted to authenticated users. Ensure that users only have access to the resources they need.</li><li><strong>Audit and Monitor Access:</strong> Regularly audit and monitor access logs to ensure that unauthorized or unexpected access patterns are detected. Set up alerts for any suspicious activities related to the Cognito Identity Pool.</li></ul>",8.2,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-284: Improper Access Control,cloud
Enable Advanced Security For Cognito User Pools,"Amazon Cognito User Pools provide a managed service for user authentication and authorization. By default, Cognito User Pools offer basic security features. However, advanced security features, such as adaptive authentication and risk-based user challenges, are not enabled by default. Failing to enable these advanced security features can expose your user authentication system to increased risks, such as brute force attacks, credential stuffing, and account takeovers. <p class=""pt-2"">Enabling advanced security features for Cognito User Pools helps protect against these risks by analyzing user behavior and applying additional security measures when suspicious activity is detected.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Advanced Security Features:</strong> In the Cognito User Pool settings, enable advanced security features, including adaptive authentication, to automatically detect and respond to suspicious login attempts.</li><li><strong>Implement Risk-Based Authentication:</strong> Configure Cognito User Pools to use risk-based authentication, where users are prompted for additional verification (e.g., MFA) if suspicious activity is detected.</li><li><strong>Monitor and Respond to Security Alerts:</strong> Regularly monitor security alerts and logs generated by Cognito User Pools to detect and respond to potential security threats in real time.</li><li><strong>Regularly Review and Update Security Settings:</strong> Periodically review the security settings of your Cognito User Pools to ensure that they align with the latest security best practices and compliance requirements.</li></ul>",8.2,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-287: Improper Authentication,cloud
User Enumeration Via Cognito User Pool Client Errors,"Amazon Cognito User Pools provide a managed service for handling user authentication and authorization. However, if not configured correctly, Cognito User Pools can inadvertently reveal information about the existence of user accounts based on the error messages returned during the authentication process. This vulnerability, known as user enumeration, allows attackers to determine whether a particular user exists in the system by analyzing the different error responses (e.g., ""User does not exist"" vs. ""Incorrect password""). <p class=""pt-2"">User enumeration can be exploited in further attacks, such as brute force attacks or social engineering, leading to unauthorized access and other security issues.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Standardize Error Messages:</strong> Configure Cognito User Pools to return the same error message for both non-existent users and incorrect passwords. This makes it more difficult for attackers to differentiate between valid and invalid usernames.</li><li><strong>Enable Account Lockout Policies:</strong> Implement account lockout mechanisms after a certain number of failed login attempts to prevent attackers from using automated tools to perform user enumeration.</li><li><strong>Use CAPTCHA or MFA:</strong> Add CAPTCHA or multi-factor authentication (MFA) to the login process to reduce the risk of automated attacks and further protect against user enumeration.</li><li><strong>Monitor and Rate-Limit Login Attempts:</strong> Monitor login attempts and apply rate limiting to reduce the risk of automated enumeration attacks. This can help identify and block suspicious activities in real-time.</li></ul>",5.3,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N,CWE-203: Observable Discrepancy,cloud
Enable Cognito User Pools Token Revocation,"Amazon Cognito User Pools manage user authentication and provide tokens (ID, access, and refresh tokens) that are used to authenticate API requests and maintain user sessions. Without token revocation enabled, these tokens remain valid until they expire, even if a user’s credentials have been compromised or if they log out. This can lead to security risks, as attackers who gain access to these tokens can continue to use them until they expire, even after the user has logged out or changed their password. <p class=""pt-2"">Enabling token revocation allows administrators to revoke tokens, immediately invalidating them, thereby reducing the risk of unauthorized access after a security event.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Token Revocation:</strong> Configure your Cognito User Pool to support token revocation. This ensures that tokens can be invalidated immediately upon user logout, password change, or other security events.</li><li><strong>Implement Shorter Token Lifetimes:</strong> While enabling token revocation, also consider setting shorter expiration times for tokens, reducing the window of opportunity for misuse if a token is compromised.</li><li><strong>Monitor Token Usage:</strong> Regularly monitor the usage of tokens and identify any suspicious activities, such as usage from unexpected locations or IP addresses. Revoke tokens immediately if suspicious activity is detected.</li><li><strong>Automate Token Revocation:</strong> Automate the token revocation process during critical events such as password resets, user deactivation, or detection of compromised credentials.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L,CWE-613: Insufficient Session Expiration,cloud
Enable Cognito User Pool Deletion Protection,"Amazon Cognito User Pools provide a managed service for user authentication and user management. Deletion protection is a security feature that prevents accidental or malicious deletion of a Cognito User Pool. Without deletion protection enabled, a User Pool can be deleted, leading to the loss of all associated user data and authentication configurations. This can result in service outages, loss of user accounts, and significant disruptions to applications relying on Cognito for authentication. <p class=""pt-2"">Enabling deletion protection ensures that the User Pool cannot be deleted without a deliberate and additional confirmation step, protecting against unintended or unauthorized deletions.</p>","<ul class=""list-disc pl-4""><li><strong>Delayed Response to Issues:</strong> Without notifications, administrators might not be immediately aware of critical scaling events, leading to delayed responses to operational issues, such as insufficient capacity or unexpected instance terminations.</li><li><strong>Service Disruptions:</strong> A lack of timely information can result in service disruptions, as scaling events might go unnoticed, leading to either under-provisioned or over-provisioned resources, which can affect application performance and availability.</li><li><strong>Operational Inefficiencies:</strong> Inability to monitor scaling activities can lead to inefficient resource usage, such as maintaining too many or too few instances, impacting both cost and performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Deletion Protection:</strong> Configure Cognito User Pools to enable deletion protection. This setting prevents the User Pool from being deleted until the protection is explicitly removed, adding an additional layer of safeguard.</li><li><strong>Implement Backup and Recovery Plans:</strong> Regularly back up user data and configurations associated with Cognito User Pools. Establish and test recovery procedures to minimize impact in case of accidental or malicious deletion.</li><li><strong>Review and Limit Permissions:</strong> Review IAM policies and permissions to ensure that only authorized personnel have the ability to delete Cognito User Pools. Implement the principle of least privilege to minimize risks.</li><li><strong>Monitor for Deletion Attempts:</strong> Set up monitoring and alerting to detect any attempts to delete User Pools. Respond quickly to unauthorized or suspicious activities.</li></ul>",8.2,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-829: Inclusion of Functionality from Untrusted Control Sphere,cloud
Enable MFA For Cognito User Pool,"Amazon Cognito User Pools support multi-factor authentication (MFA) to enhance the security of user accounts. MFA requires users to provide an additional verification factor beyond their password, such as a one-time passcode sent to their mobile device. Without MFA enabled, user accounts rely solely on passwords for authentication, which can be vulnerable to various attacks, including password guessing, credential stuffing, and phishing. <p class=""pt-2"">Enabling MFA adds an extra layer of security, making it significantly more difficult for attackers to gain unauthorized access to user accounts, even if they have obtained the user's password.</p>",,HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable MFA:</strong> Configure MFA in your Cognito User Pool to require users to provide an additional verification factor during login. This typically involves enabling MFA options such as SMS-based or time-based one-time passwords (TOTP).</li><li><strong>Enforce MFA for All Users:</strong> Set up policies to ensure that MFA is enforced for all users, not just those with administrative privileges or high-risk accounts.</li><li><strong>Monitor and Review MFA Settings:</strong> Regularly review and audit MFA settings and user compliance to ensure that MFA is properly enforced and that there are no gaps in security.</li><li><strong>Implement Backup Codes:</strong> Offer backup codes or alternative MFA methods to users in case they lose access to their primary MFA device, ensuring they can still access their accounts securely.</li><li><strong>Integrate with Identity Providers:</strong> Consider integrating Cognito User Pools with external identity providers that support MFA, allowing users to benefit from additional layers of security provided by those providers.</li></ul>",7.8,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-307: Improper Restriction of Excessive Authentication Attempts,cloud
Cognito User Pool Having Weak Password Policy,"Amazon Cognito User Pools manage user authentication and user management, including password policies. A weak password policy allows users to create passwords that are easily guessable or too simple, increasing the risk of unauthorized access through brute force or credential stuffing attacks. Strong password policies enforce complexity requirements, such as length, character variety, and regular updates, to enhance security. <p class=""pt-2"">When a Cognito User Pool has a weak password policy, it undermines the effectiveness of authentication controls, making user accounts more vulnerable to compromise.</p>","<ul class=""list-disc pl-4""><li><strong>Increased Risk of Unauthorized Access:</strong> Weak passwords are more susceptible to attacks such as brute force and credential stuffing, which can lead to unauthorized access to user accounts.</li><li><strong>Higher Likelihood of Account Compromise:</strong> Attackers can exploit weak passwords to gain access to user accounts, potentially leading to data breaches, loss of sensitive information, and unauthorized actions.</li><li><strong>Reputational Damage:</strong> Security incidents resulting from weak passwords can damage the organization’s reputation, eroding user trust and confidence.</li><li><strong>Operational Disruption:</strong> Compromised accounts can lead to operational disruptions, such as unauthorized data access or manipulation, affecting business continuity.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enforce a Strong Password Policy:</strong> Configure Cognito User Pools to require strong passwords. Set policies that enforce minimum length, complexity (including uppercase letters, lowercase letters, numbers, and special characters), and prohibit common passwords.</li><li><strong>Regularly Update Password Policies:</strong> Periodically review and update password policies to adapt to evolving security threats and best practices.</li><li><strong>Monitor and Audit Password Changes:</strong> Track and audit password changes and attempts to use weak passwords. Implement alerts for unusual activities related to password changes or login attempts.</li><li><strong>Implement Multi-Factor Authentication (MFA):</strong> Complement strong password policies with MFA to add an additional layer of security, making it harder for attackers to gain unauthorized access even with weak passwords.</li><li><strong>Implement Backup Codes:</strong> Offer backup codes or alternative MFA methods to users in case they lose access to their primary MFA device, ensuring they can still access their accounts securely.</li><li><strong>Integrate with Identity Providers:</strong> Consider integrating Cognito User Pools with external identity providers that support strong password policies and additional security measures.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-521: Weak Password Requirements,cloud
Disable Cognito User Pool Self Registration,"Amazon Cognito User Pools support self-registration, allowing users to sign up for accounts directly through a registration process. While self-registration can be convenient, it can also introduce security risks if not properly managed. For example, it may allow unauthorized or malicious users to create accounts, which can be exploited for various attacks, including brute force or credential stuffing. <p class=""pt-2"">Disabling self-registration can be an effective way to prevent unauthorized account creation and ensure that all accounts are created through a controlled process. By requiring users to be invited or approved before they can register, organizations can better manage and secure user access.</p>","<ul class=""list-disc pl-4""><li><strong>Prevention of Unauthorized Account Creation:</strong> Disabling self-registration prevents unauthorized users from creating accounts, reducing the risk of malicious or fake accounts that could compromise system security.</li><li><strong>Enhanced Control Over User Access:</strong> By requiring manual approval or invitation, organizations have greater control over who can access the system, ensuring that only legitimate users are granted access.</li><li><strong>Reduced Risk of Brute Force and Credential Stuffing Attacks:</strong> Without self-registration, attackers cannot create multiple accounts for automated attacks, such as brute force or credential stuffing.</li><li><strong>Improved Compliance and Security:</strong> For sensitive applications or environments requiring strict access controls, disabling self-registration aligns with best practices and compliance requirements for managing user accounts securely.</li><li><strong>Increased Administrative Overhead:</strong> Disabling self-registration may require additional administrative effort to manage account creation and user invitations, but this trade-off is often justified by the increased security.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Disable Self-Registration:</strong> Configure Cognito User Pools to disable the self-registration feature. This will prevent users from signing up on their own and ensure that account creation is controlled and monitored.</li><li><strong>Implement Manual Account Creation:</strong> Set up processes for manually creating and approving user accounts. This can include using admin interfaces or APIs to invite users and manage their access.</li><li><strong>Use Invitation-Based Registration:</strong> Employ invitation-based registration where users can only register if they receive an invitation from an administrator. This adds an additional layer of control over who can create accounts.</li><li><strong>Monitor and Review User Registrations:</strong> Regularly review user registration activities and account creation logs to ensure that no unauthorized accounts are being created or attempted.</li><li><strong>Implement Account Approval Workflows:</strong> Set up workflows for approving new accounts or registration requests, ensuring that each account is reviewed and validated before access is granted.</li><li><strong>Enforce Additional Security Measures:</strong> Complement disabling self-registration with other security measures, such as multi-factor authentication (MFA) and strong password policies, to enhance overall account security.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-639: Authorization Bypass Through User-Controlled Key,cloud
Enable Cognito User Pool Web ACL,"Amazon Cognito User Pools manage user authentication and user management. A Web Access Control List (Web ACL) is a set of rules used to filter and control web traffic to applications, protecting them from various threats, including SQL injection, cross-site scripting (XSS), and other web exploits. <p class=""pt-2"">Enabling a Web ACL for a Cognito User Pool ensures that traffic to the user pool is filtered and protected from common web attacks. Without a Web ACL, the user pool might be exposed to these vulnerabilities, increasing the risk of exploitation and unauthorized access.</p>","<ul class=""list-disc pl-4""><li><strong>Increased Exposure to Web Threats:</strong> Without a Web ACL, the Cognito User Pool is vulnerable to web-based attacks such as SQL injection and cross-site scripting (XSS), which can compromise the security of the user management system.</li><li><strong>Higher Risk of Unauthorized Access:</strong> Attackers could exploit vulnerabilities in the user pool’s interface or API to gain unauthorized access to user accounts or sensitive data.</li><li><strong>Potential for Data Breaches:</strong> Web attacks can lead to data breaches if attackers manage to access or extract sensitive information from the user pool.</li><li><strong>Compliance Risks:</strong> Many regulatory frameworks require protections against web-based threats. Failing to implement a Web ACL could result in non-compliance with such regulations.</li><li><strong>Reputational Damage:</strong> Security incidents resulting from unprotected user pools can harm the organization’s reputation, eroding user trust and confidence.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Web ACL for Cognito User Pool:</strong> Create and configure a Web ACL in AWS WAF (Web Application Firewall) and associate it with the Cognito User Pool. Define rules to protect against common web threats, such as SQL injection, XSS, and other vulnerabilities.</li><li><strong>Define Security Rules:</strong> Implement security rules in the Web ACL that specifically address the types of threats relevant to the Cognito User Pool. Use AWS WAF's managed rule groups for common threats and customize rules as needed.</li><li><strong>Regularly Review and Update Rules:</strong> Periodically review and update the Web ACL rules to adapt to new threats and vulnerabilities. Ensure that the rules are effective and up-to-date.</li><li><strong>Monitor and Log Web Traffic:</strong> Enable logging for AWS WAF to monitor and analyze web traffic patterns and potential threats. Use these logs to refine and improve Web ACL rules.</li><li><strong>Integrate with Other Security Services:</strong> Complement the Web ACL with other security measures, such as AWS Shield for DDoS protection and AWS Config for compliance monitoring.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-16: Configuration,cloud
Enable AWS Config,"AWS Config is a service that provides a detailed view of the configuration of AWS resources in your account. It tracks configuration changes, maintains historical configurations, and enables compliance auditing. Enabling AWS Config is crucial for maintaining visibility into your AWS environment, ensuring that resources are configured according to security best practices, and meeting compliance requirements. <p class=""pt-2"">If AWS Config is not enabled, there is no systematic way to track changes in resource configurations, assess compliance, or audit historical configurations. This can lead to untracked changes, potential security risks, and difficulty in maintaining regulatory compliance.</p>","<ul class=""list-disc pl-4""><li><strong>Lack of Visibility:</strong> Without AWS Config, you lack a comprehensive view of resource configurations and changes, making it difficult to understand the current state and history of your AWS environment.</li><li><strong>Increased Risk of Misconfigurations:</strong> Untracked changes to resource configurations can lead to misconfigurations, increasing the risk of security vulnerabilities and operational issues.</li><li><strong>Challenges in Compliance and Auditing:</strong> Without AWS Config, it is challenging to ensure that resources comply with organizational policies or regulatory requirements. This can result in non-compliance and potential penalties.</li><li><strong>Difficulty in Troubleshooting and Forensics:</strong> In the absence of configuration tracking, identifying the root cause of issues or conducting forensic investigations becomes more complex and time-consuming.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable AWS Config:</strong> Activate AWS Config for your AWS account to start tracking resource configurations and changes. This provides visibility into the state and history of resources.</li><li><strong>Configure AWS Config Rules:</strong> Set up AWS Config rules to continuously evaluate resource configurations against predefined best practices and compliance standards. Customize rules based on your organization's security and compliance requirements.</li><li><strong>Enable Configuration Recorder:</strong> Ensure that the configuration recorder is enabled to capture and store configuration changes for all supported AWS resources.</li><li><strong>Set Up Aggregators:</strong> If managing multiple accounts, configure AWS Config aggregators to consolidate configuration data across accounts and regions, providing a centralized view.</li><li><strong>Implement Remediation Actions:</strong> Define automated remediation actions for non-compliant configurations, enabling proactive responses to configuration drift or security issues.</li><li><strong>Monitor and Review Configurations:</strong> Regularly review AWS Config data and compliance reports to ensure that resources remain compliant with policies and standards.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-16: Configuration,cloud
Include AWS Config Global Resources,"AWS Config is a service that monitors and records the configurations of AWS resources. By default, AWS Config tracks only resources within a region. However, some AWS resources are global, meaning they are not limited to a specific region, such as IAM roles, AWS Organizations configurations, and some AWS Security services. <p class=""pt-2"">To maintain comprehensive visibility and compliance, it's essential to include global resources in AWS Config's tracking scope. Failing to include global resources means that important configuration data for these resources will not be recorded or monitored, potentially leaving gaps in security and compliance visibility.</p>","<ul class=""list-disc pl-4""><li><strong>Incomplete Visibility:</strong> Without tracking global resources, there is a partial view of the configuration state across the AWS environment. This lack of visibility can hinder the ability to manage and audit global configurations effectively.</li><li><strong>Increased Risk of Security Gaps:</strong> Global resources may have configurations that affect the entire AWS environment. Not monitoring these configurations can lead to security gaps and compliance issues.</li><li><strong>Challenges in Compliance and Auditing:</strong> Compliance requirements often mandate visibility into all configurations, including global resources. Missing this data can result in non-compliance and difficulties in auditing.</li><li><strong>Potential for Misconfigurations:</strong> Global resources, if misconfigured, can impact multiple regions or services. Not tracking these configurations may result in undetected misconfigurations, increasing the risk of security breaches.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Include Global Resources in AWS Config:</strong> Configure AWS Config to include global resources in its tracking and monitoring scope. This ensures that all relevant configurations, including those not bound to a specific region, are recorded and managed.</li><li><strong>Review Global Resource Types:</strong> Identify and review the types of global resources that need to be included in AWS Config, such as IAM roles, AWS Organizations settings, and global security services.</li><li><strong>Set Up Aggregators:</strong> Use AWS Config aggregators to collect and consolidate configuration data for global resources across multiple accounts and regions, providing a comprehensive view of your environment.</li><li><strong>Configure AWS Config Rules for Global Resources:</strong> Set up AWS Config rules that apply to global resources to continuously evaluate their configurations against best practices and compliance standards.</li><li><strong>Monitor and Analyze Configurations:</strong> Regularly monitor AWS Config data for global resources and analyze compliance reports to ensure that all configurations meet security and policy requirements.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-16: Configuration,cloud
Enable CloudWatch Logs For Directory Service,"AWS Directory Service provides managed Microsoft Active Directory (AD) and other directory services. Integrating CloudWatch Logs with Directory Service enables detailed monitoring and logging of directory activities, including authentication events, user management actions, and changes in directory configuration. <p class=""pt-2"">When CloudWatch Logs are not enabled for Directory Service, there is a lack of visibility into directory-related activities and potential security incidents. This oversight can prevent timely detection of suspicious activities, compliance violations, and operational issues within the directory environment.</p>","<ul class=""list-disc pl-4""><li><strong>Limited Visibility:</strong> Without CloudWatch Logs for Directory Service, there is no comprehensive view of directory-related activities. This limits the ability to monitor and review critical events and actions.</li><li><strong>Increased Risk of Security Incidents:</strong> The absence of detailed logs means that unauthorized access, changes, or other suspicious activities may go undetected, increasing the risk of security breaches.</li><li><strong>Challenges in Compliance and Auditing:</strong> Many compliance frameworks require detailed logging of directory activities. Without CloudWatch Logs, meeting these requirements becomes difficult, potentially resulting in non-compliance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable CloudWatch Logs for Directory Service:</strong> Configure Directory Service to send logs to CloudWatch Logs. This ensures that all directory-related activities are captured and can be reviewed.</li><li><strong>Configure Log Groups and Streams:</strong> Set up appropriate CloudWatch Log groups and streams for Directory Service logs to organize and manage log data effectively.</li><li><strong>Set Up Log Retention Policies:</strong> Define retention policies for CloudWatch Logs to ensure that log data is retained for the required duration, meeting compliance and operational needs.</li><li><strong>Implement Monitoring and Alerts:</strong> Configure CloudWatch Alarms to monitor specific events and conditions within Directory Service logs. Set up alerts to notify relevant personnel of potential issues or anomalies.</li><li><strong>Integrate with Security Services:</strong> Use CloudWatch Logs in conjunction with other AWS security services, such as AWS Security Hub and AWS GuardDuty, to enhance overall monitoring and incident response capabilities.</li><li><strong>Regularly Review Logs:</strong> Establish procedures for regularly reviewing CloudWatch Logs for Directory Service to identify and address any security or operational issues.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-16: Configuration,cloud
LDAP Certificates Expired Or About To Expire,"LDAP (Lightweight Directory Access Protocol) certificates are used to secure communications between LDAP clients and servers, ensuring that data exchanged over the network is encrypted and protected. Expired or soon-to-expire LDAP certificates can lead to insecure communications, disruptions in service, and potential security breaches. <p class=""pt-2"">When LDAP certificates expire or are nearing expiration, the encrypted connection between LDAP clients and servers may fail, leading to communication errors and potentially exposing sensitive data to unauthorized access. It's essential to monitor and renew LDAP certificates before they expire to maintain secure and reliable directory services.</p>","<ul class=""list-disc pl-4""><li><strong>Insecure Communications:</strong> Expired certificates can lead to failed or unencrypted communications, exposing data transmitted over LDAP to interception or tampering.</li><li><strong>Service Disruptions:</strong> Communication failures due to expired certificates can disrupt access to directory services, affecting applications and users relying on LDAP for authentication and authorization.</li><li><strong>Increased Risk of Security Breaches:</strong> Without valid certificates, encrypted communication is compromised, increasing the risk of data breaches and unauthorized access to sensitive information.</li><li><strong>Compliance Issues:</strong> Many regulatory frameworks require the use of valid and secure certificates for data protection. Expired certificates can lead to non-compliance and legal issues.</li><li><strong>Operational Challenges:</strong> Renewing and reconfiguring certificates can be complex and time-consuming if the expiration is not managed proactively, potentially leading to service downtime and operational inefficiencies.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Monitor Certificate Expiration Dates:</strong> Implement monitoring tools and alerts to track the expiration dates of LDAP certificates and receive notifications well in advance of their expiry.</li><li><strong>Renew Certificates Promptly:</strong> Regularly renew LDAP certificates before they expire to ensure continuous secure communications and avoid service disruptions.</li><li><strong>Update LDAP Server Configurations:</strong> After renewing certificates, update the LDAP server configurations to use the new certificates and ensure that all clients are configured accordingly.</li><li><strong>Implement Automated Certificate Management:</strong> Use certificate management solutions or services that automate the process of certificate issuance, renewal, and deployment to minimize manual intervention and errors.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-295: Improper Certificate Validation,cloud
DocumentDB Clusters Not Encrypted With KMS Customer Master Keys (CMKs),"Amazon DocumentDB (with MongoDB compatibility) is a managed database service that provides scalable, secure, and highly available document databases. Encryption is crucial for protecting sensitive data at rest. By default, DocumentDB clusters can be encrypted using AWS Key Management Service (KMS) with AWS-managed keys or customer-managed keys (CMKs). <p class=""pt-2"">When DocumentDB clusters are not encrypted with KMS Customer Master Keys (CMKs), data at rest is not protected with the enhanced security and control provided by customer-managed encryption keys. Using CMKs allows customers to have greater control over the encryption and decryption processes, including key rotation and access management.</p>","<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Without encryption using CMKs, sensitive data stored in DocumentDB clusters is less protected. Unauthorized access to storage could potentially expose confidential information.</li><li><strong>Regulatory Non-Compliance:</strong> Many regulations and standards require the use of customer-managed encryption keys for data protection. Failure to use CMKs can lead to non-compliance and legal repercussions.</li><li><strong>Limited Control Over Encryption Keys:</strong> AWS-managed keys provide limited control over key management compared to CMKs. CMKs offer enhanced features such as key rotation, key access policies, and audit capabilities.</li><li><strong>Potential Data Breaches:</strong> Inadequate encryption can lead to data breaches if attackers gain access to storage, as unencrypted data is easier to read and exploit.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Encryption with CMKs:</strong> Configure DocumentDB clusters to use KMS Customer Master Keys (CMKs) for encryption. This ensures that data at rest is protected with customer-managed keys.</li><li><strong>Create and Manage CMKs:</strong> Set up and manage CMKs in AWS Key Management Service. Define key policies, rotation schedules, and access controls to ensure proper key management.</li><li><strong>Update Cluster Encryption Settings:</strong> For existing DocumentDB clusters, modify the encryption settings to use CMKs. Note that changing encryption settings may require creating a new cluster or snapshot and restoring data.</li><li><strong>Review and Implement Security Policies:</strong> Ensure that encryption policies align with organizational security requirements and regulatory standards. Regularly review and update these policies as needed.</li><li><strong>Monitor Key Usage and Access:</strong> Use AWS CloudTrail and AWS KMS audit logs to monitor the usage and access of CMKs. Set up alerts for any suspicious activities related to key management.</li><li><strong>Regularly Rotate Keys:</strong> Implement key rotation policies for CMKs to enhance security. Regularly rotating keys minimizes the risk of key compromise.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:L,CWE-200: Information Exposure,cloud
DocumentDB Clusters Without Deletion Protection,"Amazon DocumentDB (with MongoDB compatibility) provides managed document database services that can be protected against accidental or malicious deletions through deletion protection settings. When deletion protection is not enabled for DocumentDB clusters, there's a risk of unintentional or unauthorized deletion of the entire cluster and its data. <p class=""pt-2"">Deletion protection is a critical safeguard that prevents the accidental or intentional deletion of a DocumentDB cluster. Without it, the risk of data loss and service interruption is significantly higher, as any authorized user with sufficient permissions could potentially delete the cluster and all its stored data.</p>","<ul class=""list-disc pl-4""><li><strong>Data Loss:</strong> Without deletion protection, a DocumentDB cluster can be deleted, leading to the permanent loss of all data stored in the cluster. This can have severe consequences for data integrity and availability.</li><li><strong>Service Disruption:</strong> Deleting a DocumentDB cluster can disrupt applications and services that rely on the database for operations, leading to downtime and potential loss of business continuity.</li><li><strong>Increased Risk of Malicious Deletion:</strong> The absence of deletion protection increases the risk of intentional or malicious deletion by authorized users or attackers who gain sufficient privileges.</li><li><strong>Operational Overhead:</strong> Recovering from an accidental or malicious deletion requires restoring the cluster from backups, which can be time-consuming and complex.</li><li><strong>Regulatory and Compliance Issues:</strong> Loss of critical data due to accidental or unauthorized deletion can lead to non-compliance with regulatory requirements related to data retention and protection.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Deletion Protection:</strong> Configure deletion protection for DocumentDB clusters to prevent accidental or malicious deletion. This setting ensures that the cluster cannot be deleted without first disabling deletion protection.</li><li><strong>Review and Update Cluster Policies:</strong> Regularly review and update cluster policies to ensure that deletion protection is enabled and that access controls are properly configured to prevent unauthorized deletion.</li><li><strong>Implement Backup Strategies:</strong> Regularly back up DocumentDB clusters to ensure that data can be restored in case of accidental or malicious deletion. Use automated backup solutions to minimize manual intervention.</li><li><strong>Monitor and Audit Deletion Activities:</strong> Use AWS CloudTrail and other monitoring tools to track and audit activities related to DocumentDB clusters, including deletion attempts. Set up alerts for any suspicious activities.</li></ul>",8.3,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-428: Unquoted Search Path or Element,cloud
DynamoDB DAX Clusters Are Not Encrypted At Rest,"Amazon DynamoDB Accelerator (DAX) is an in-memory caching service designed to improve the performance of Amazon DynamoDB queries by providing faster data access. Encryption at rest for DAX clusters is essential to protect sensitive data stored in the cache. <p class=""pt-2"">When DynamoDB DAX clusters are not encrypted at rest, data stored in the cache is not protected from unauthorized access. Encryption at rest ensures that data is stored in an encrypted format on disk, making it unreadable to anyone who gains unauthorized access to the storage. Without this protection, sensitive data could be exposed if the underlying storage is compromised.</p>","<ul class=""list-disc pl-4""><li><strong>Data Exposure:</strong> Unencrypted data at rest can be accessed by unauthorized users if they gain access to the storage layer, leading to potential data breaches.</li><li><strong>Regulatory Non-Compliance:</strong> Many regulatory frameworks and standards require encryption of data at rest. Failure to encrypt DAX clusters can result in non-compliance with these regulations.</li><li><strong>Increased Risk of Data Breaches:</strong> Without encryption, sensitive data in DAX clusters is more vulnerable to exposure in the event of a security breach or unauthorized access.</li><li><strong>Loss of Confidentiality:</strong> Sensitive information such as personal data, financial records, or proprietary business information could be exposed, leading to privacy violations and reputational damage.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Encryption at Rest:</strong> Configure DynamoDB DAX clusters to use encryption at rest. This can be done by specifying an AWS Key Management Service (KMS) key for encrypting the data stored in the cluster.</li><li><strong>Use Customer-Managed Keys (CMKs):</strong> Preferably use KMS Customer Master Keys (CMKs) for encryption. CMKs provide greater control over the encryption process and allow you to manage key rotation and access.</li><li><strong>Review and Update Encryption Settings:</strong> Regularly review the encryption settings for DAX clusters to ensure they meet organizational security policies and compliance requirements.</li><li><strong>Monitor Encryption Status:</strong> Use AWS CloudTrail and AWS Config to monitor the encryption status of DAX clusters and receive alerts for any changes or misconfigurations.</li><li><strong>Implement Security Policies:</strong> Ensure that encryption policies align with organizational security requirements. Establish procedures for enabling and managing encryption for all data storage solutions.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
DynamoDB Tables Are Not Encrypted With KMS CMKs,"Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance. To protect sensitive data in DynamoDB tables, it is crucial to enable encryption. By default, DynamoDB encrypts data at rest using AWS-owned keys. However, using AWS Key Management Service (KMS) Customer Master Keys (CMKs) provides enhanced control over encryption and key management. <p class=""pt-2"">When DynamoDB tables are not encrypted with KMS CMKs, data is protected using AWS-managed keys, which offer less control and flexibility compared to CMKs. Using CMKs allows organizations to manage key rotation, audit access to the keys, and enforce more stringent security policies.</p>","<ul class=""list-disc pl-4""><li><strong>Reduced Control Over Encryption:</strong> Without using KMS CMKs, organizations have less control over key management and encryption practices. CMKs offer more granular control and flexibility.</li><li><strong>Regulatory Non-Compliance:</strong> Many regulatory frameworks and standards require the use of customer-managed keys for data encryption. Failing to use CMKs can result in non-compliance with these regulations.</li><li><strong>Increased Risk of Data Breaches:</strong> AWS-managed keys do not provide the same level of control as CMKs. If an organization requires detailed auditing or specific encryption practices, relying on default AWS-managed keys may not meet security requirements.</li><li><strong>Lack of Key Rotation Control:</strong> CMKs allow organizations to manage and automate key rotation. Without CMKs, key rotation is managed by AWS, potentially leading to less optimal security practices.</li><li><strong>Limited Access Control:</strong> Using CMKs allows organizations to enforce policies on who can use or manage encryption keys. Without CMKs, access control is less flexible.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Encryption with KMS CMKs:</strong> Configure DynamoDB tables to use AWS KMS Customer Master Keys (CMKs) for encryption. This ensures that sensitive data is protected with keys that the organization controls.</li><li><strong>Create and Manage CMKs:</strong> Use AWS KMS to create and manage CMKs. Define key policies and permissions to control access to the keys and ensure they are used appropriately for encrypting DynamoDB tables.</li><li><strong>Implement Key Rotation:</strong> Enable automatic key rotation for CMKs to enhance security and compliance. Regular key rotation helps to minimize the risk of key compromise.</li><li><strong>Review and Update Encryption Settings:</strong> Regularly review the encryption settings for DynamoDB tables to ensure they are configured to use CMKs and meet organizational security requirements.</li><li><strong>Monitor and Audit Key Usage:</strong> Use AWS CloudTrail and AWS Config to monitor and audit key usage and access. Set up alerts for any suspicious or unauthorized activities.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
EC2 Amazon Machine Images (AMIs) Set As Public,"Amazon Machine Images (AMIs) are used to create virtual servers (instances) in Amazon EC2. An AMI contains the operating system, application server, applications, and related configurations needed to launch instances. Setting an AMI to public makes it accessible to all AWS users, which can pose significant security risks if the AMI contains sensitive or proprietary information. <p class=""pt-2"">When an AMI is set as public, any AWS user can view and launch instances using that AMI. This increases the risk of exposing sensitive data or intellectual property that might be included in the AMI. It also raises concerns about security vulnerabilities that could be exploited by malicious users.</p>","<ul class=""list-disc pl-4""><li><strong>Exposure of Sensitive Data:</strong> Publicly accessible AMIs may contain sensitive information or configurations that could be exposed to unauthorized users.</li><li><strong>Intellectual Property Theft:</strong> Proprietary software or configurations included in the AMI can be copied and used by others, leading to potential intellectual property theft.</li><li><strong>Increased Attack Surface:</strong> If the AMI includes known vulnerabilities or misconfigurations, it could be exploited by malicious actors to compromise instances launched from it.</li><li><strong>Regulatory Non-Compliance:</strong> Many regulations require that sensitive data and intellectual property are protected from unauthorized access. Publicly accessible AMIs may lead to non-compliance with these regulations.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Review AMI Permissions:</strong> Regularly review the permissions of AMIs to ensure they are not set to public unless necessary. Restrict access to AMIs to specific AWS accounts or roles as required.</li><li><strong>Change AMI Visibility:</strong> If an AMI is set to public and should not be, update the permissions to restrict access to the appropriate accounts or roles. This can be done through the EC2 console or using AWS CLI commands.</li><li><strong>Implement AMI Management Policies:</strong> Establish policies for managing AMIs, including guidelines for setting permissions and handling sensitive data. Ensure that all AMIs are reviewed before being made available.</li><li><strong>Monitor AMI Usage:</strong> Use AWS CloudTrail and AWS Config to monitor the creation and sharing of AMIs. Set up alerts for any changes in AMI visibility.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-200: Information Exposure,cloud
Enable Encryption For EC2 Amazon Machine Images (AMIs),"Amazon Machine Images (AMIs) are used to create EC2 instances and contain the configuration details, operating system, and applications needed to launch these instances. By default, AMIs created in AWS are not encrypted. Encrypting AMIs is crucial for protecting sensitive data that may be contained within the image, including configurations, applications, and system snapshots. <p class=""pt-2"">Enabling encryption for AMIs ensures that all data within the image is encrypted using AWS Key Management Service (KMS) Customer Master Keys (CMKs), providing an additional layer of security. This protects the data from unauthorized access and ensures compliance with various regulatory and organizational security standards.</p>","<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Without encryption, sensitive data within the AMI can be accessed by anyone who can launch an instance using that AMI. This includes configuration details, application data, and other sensitive information.</li><li><strong>Regulatory Non-Compliance:</strong> Many regulations require data to be encrypted both at rest and in transit. Failing to encrypt AMIs could lead to non-compliance with these regulations.</li><li><strong>Increased Risk of Data Breaches:</strong> Unencrypted AMIs can be exploited by attackers to access sensitive information, leading to potential data breaches and unauthorized access.</li><li><strong>Lack of Control Over Data Security:</strong> Encrypting AMIs with KMS CMKs provides better control over encryption keys, key rotation, and access policies. Without encryption, the organization has less control over the security of the data within the AMI.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable AMI Encryption:</strong> Use AWS Key Management Service (KMS) to enable encryption for AMIs. Ensure that AMIs are encrypted with KMS Customer Master Keys (CMKs) to protect sensitive data.</li><li><strong>Create and Manage KMS CMKs:</strong> Set up and manage CMKs in AWS KMS. Define key policies and permissions to control access to the encryption keys and ensure they are used for AMI encryption.</li><li><strong>Review AMI Encryption Settings:</strong> Regularly review the encryption settings of AMIs to ensure they are configured to use CMKs. Update the settings for any unencrypted AMIs.</li><li><strong>Implement Encryption Policies:</strong> Establish policies for encrypting AMIs and ensure that all new AMIs are encrypted as part of the image creation process.</li><li><strong>Monitor and Audit AMI Encryption:</strong> Use AWS CloudTrail and AWS Config to monitor and audit AMI encryption. Set up alerts for any unencrypted AMIs or changes in encryption settings.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable EBS Default Encryption,"Amazon Elastic Block Store (EBS) provides block storage volumes for use with Amazon EC2 instances. EBS volumes can be encrypted to protect data at rest, but encryption is not enabled by default for new volumes. Enabling default encryption for EBS ensures that all new EBS volumes created in the account are automatically encrypted using AWS Key Management Service (KMS) Customer Master Keys (CMKs), providing an additional layer of security for data at rest. <p class=""pt-2"">Default encryption helps ensure that sensitive data is protected from unauthorized access and meets regulatory and organizational security requirements. Without default encryption enabled, there is a risk that unencrypted volumes could be created and used, potentially exposing sensitive data.</p>","<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Without default encryption, newly created EBS volumes may not be encrypted, leaving sensitive data exposed to unauthorized access.</li><li><strong>Regulatory Non-Compliance:</strong> Many regulations and standards require data to be encrypted at rest. Failing to enable default encryption for EBS volumes could result in non-compliance with these requirements.</li><li><strong>Increased Risk of Data Breaches:</strong> Unencrypted EBS volumes are vulnerable to unauthorized access, increasing the risk of data breaches and exposure of sensitive information.</li><li><strong>Lack of Consistency:</strong> Default encryption ensures consistency in data protection across all EBS volumes. Without it, there may be a mix of encrypted and unencrypted volumes, complicating data security management.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Default Encryption:</strong> Configure EBS default encryption in your AWS account to ensure that all new EBS volumes are automatically encrypted with AWS KMS CMKs. This setting can be applied using the AWS Management Console, AWS CLI, or AWS SDKs.</li><li><strong>Review Existing Volumes:</strong> Audit existing EBS volumes to identify any that are not encrypted. For unencrypted volumes, consider migrating data to encrypted volumes or enabling encryption.</li><li><strong>Manage KMS CMKs:</strong> Set up and manage KMS CMKs for encrypting EBS volumes. Define key policies and permissions to control access to the encryption keys.</li><li><strong>Implement Encryption Policies:</strong> Establish policies for data encryption to ensure that all new EBS volumes are encrypted by default. Include guidelines for managing and auditing EBS encryption settings.</li><li><strong>Monitor and Audit Encryption:</strong> Use AWS CloudTrail and AWS Config to monitor and audit EBS encryption settings. Set up alerts for any new unencrypted volumes or changes in encryption settings.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
EC2 EBS Snapshots set As Public,"Amazon Elastic Block Store (EBS) snapshots are backups of EBS volumes that capture the state of the volume at a specific point in time. Snapshots can be shared with other AWS accounts or made public to be accessible by anyone on the internet. However, setting EBS snapshots as public poses a significant security risk, as it can expose sensitive data contained in the snapshots to unauthorized users. <p class=""pt-2"">Ensuring that EBS snapshots are not set as public helps protect sensitive data and prevents unauthorized access. It is essential to restrict access to snapshots to specific AWS accounts or make them private to maintain data confidentiality and compliance.</p>","<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Public EBS snapshots can be accessed by anyone, leading to potential exposure of sensitive data, including configurations, application data, and system snapshots.</li><li><strong>Regulatory Non-Compliance:</strong> Many regulations and standards require strict controls over data access. Making EBS snapshots public can result in non-compliance with these requirements.</li><li><strong>Increased Risk of Data Breaches:</strong> Public snapshots can be exploited by unauthorized users to access sensitive information, leading to potential data breaches and unauthorized access.</li><li><strong>Intellectual Property Theft:</strong> Sensitive or proprietary data contained in the snapshots can be accessed by unauthorized parties, leading to potential intellectual property theft.</li><li><strong>Lack of Control Over Data Security:</strong> Allowing public access to EBS snapshots undermines the organization's control over data security and access management.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Snapshot Sharing:</strong> Ensure that EBS snapshots are not shared publicly. Review and update the sharing settings to restrict access to specific AWS accounts or keep the snapshots private.</li><li><strong>Audit Existing Snapshots:</strong> Regularly audit existing EBS snapshots to identify any that are publicly accessible. Modify the permissions of these snapshots to restrict access.</li><li><strong>Implement Snapshot Access Policies:</strong> Establish policies for managing EBS snapshot access to ensure that snapshots are only shared with authorized accounts or kept private.</li><li><strong>Monitor and Audit Snapshot Sharing:</strong> Use AWS CloudTrail and AWS Config to monitor and audit snapshot sharing activities. Set up alerts for any public snapshots or changes in snapshot permissions.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Enable EC2 EBS Snapshots Encryption,"Amazon Elastic Block Store (EBS) snapshots capture the state of EBS volumes and are used for backup, replication, and disaster recovery purposes. By default, EBS snapshots are not encrypted unless the source EBS volume is encrypted. Enabling encryption for EBS snapshots ensures that all snapshot data is securely encrypted at rest, protecting it from unauthorized access and potential data breaches. <p class=""pt-2"">Encryption of EBS snapshots is crucial for maintaining data confidentiality and compliance with regulatory standards. It helps ensure that sensitive data is protected, even when it is stored in backup or recovery formats.</p>","<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Unencrypted EBS snapshots can expose sensitive data if accessed by unauthorized users, posing a risk to data confidentiality and security.</li><li><strong>Regulatory Non-Compliance:</strong> Many regulations and compliance standards mandate encryption of data at rest. Failure to enable encryption for EBS snapshots may result in non-compliance with these requirements.</li><li><strong>Increased Risk of Data Breaches:</strong> Without encryption, EBS snapshots are vulnerable to unauthorized access, increasing the likelihood of data breaches and exposure of sensitive information.</li><li><strong>Operational Risks:</strong> Managing unencrypted snapshots requires additional security measures and oversight, increasing the operational complexity and risk of mishandling sensitive data.</li><li><strong>Lack of Consistency:</strong> Encryption ensures consistency in data protection across all snapshots. Without encryption, there may be inconsistent security measures, complicating data security management.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Encryption for New Snapshots:</strong> Ensure that encryption is enabled for all new EBS snapshots by encrypting the source EBS volumes. All snapshots taken from encrypted volumes will be encrypted automatically.</li><li><strong>Encrypt Existing Snapshots:</strong> Review existing EBS snapshots and, if necessary, create new encrypted snapshots from unencrypted ones. Use the AWS Management Console, AWS CLI, or AWS SDKs to manage encryption settings.</li><li><strong>Use AWS KMS:</strong> Configure AWS Key Management Service (KMS) to manage encryption keys for EBS snapshots. Set up and manage KMS Customer Master Keys (CMKs) for secure encryption.</li><li><strong>Implement Snapshot Encryption Policies:</strong> Establish and enforce policies for encrypting EBS snapshots to ensure consistent data protection and compliance with security standards.</li><li><strong>Monitor and Audit Snapshots:</strong> Use AWS CloudTrail and AWS Config to monitor and audit snapshot encryption settings. Set up alerts for any unencrypted snapshots or changes in encryption configurations.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable EC2 EBS Volume Encryption,"Amazon Elastic Block Store (EBS) volumes provide persistent block storage for Amazon EC2 instances. EBS volume encryption ensures that data at rest on these volumes is encrypted to protect it from unauthorized access. By default, EBS volumes are not encrypted unless specified. Enabling encryption for EBS volumes ensures that all data stored on the volumes is protected through AWS Key Management Service (KMS) keys. <p class=""pt-2"">Encryption of EBS volumes is vital for securing sensitive data and meeting compliance requirements. It helps prevent unauthorized access and potential data breaches by ensuring that data is encrypted both in transit and at rest.</p>","<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Unencrypted EBS volumes can expose sensitive data if accessed by unauthorized users, posing a risk to data confidentiality and security.</li><li><strong>Regulatory Non-Compliance:</strong> Many regulations and standards require encryption of data at rest. Failure to enable encryption for EBS volumes may result in non-compliance with these requirements.</li><li><strong>Increased Risk of Data Breaches:</strong> Without encryption, EBS volumes are vulnerable to unauthorized access, increasing the likelihood of data breaches and exposure of sensitive information.</li><li><strong>Operational Risks:</strong> Managing unencrypted volumes requires additional security measures and oversight, increasing operational complexity and the risk of mishandling sensitive data.</li><li><strong>Lack of Consistency:</strong> Encryption ensures consistent data protection across all EBS volumes. Without encryption, there may be inconsistent security measures, complicating data security management.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Encryption for New Volumes:</strong> Configure EBS volume encryption settings to ensure that all new EBS volumes are encrypted by default. Use the AWS Management Console, AWS CLI, or AWS SDKs to set up encryption.</li><li><strong>Encrypt Existing Volumes:</strong> Review existing EBS volumes and, if necessary, create new encrypted volumes from unencrypted ones. Use tools such as AWS Elastic Block Store Snapshots to migrate data to encrypted volumes.</li><li><strong>Use AWS KMS:</strong> Configure AWS Key Management Service (KMS) to manage encryption keys for EBS volumes. Set up and manage KMS Customer Master Keys (CMKs) for secure encryption.</li><li><strong>Implement Encryption Policies:</strong> Establish and enforce policies for EBS volume encryption to ensure consistent data protection and compliance with security standards.</li><li><strong>Monitor and Audit Volumes:</strong> Use AWS CloudTrail and AWS Config to monitor and audit EBS volume encryption settings. Set up alerts for any unencrypted volumes or changes in encryption configurations.</li></ul>",7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
No EC2 EBS Volume Snapshots Exists,"Amazon Elastic Block Store (EBS) volumes provide persistent storage for Amazon EC2 instances, and EBS snapshots serve as backups of these volumes. Snapshots capture the state of an EBS volume at a specific point in time, enabling data recovery, replication, and disaster recovery. <p class=""pt-2"">When no EBS snapshots exist for volumes, there is a lack of backup and recovery options in case of data loss, corruption, or accidental deletion. Regular snapshots are essential for ensuring that critical data is preserved and can be restored when needed. This situation increases the risk of data loss and impacts operational continuity.</p>","<ul class=""list-disc pl-4""><li><strong>Data Loss Risk:</strong> Without EBS snapshots, there is no backup of the EBS volumes' data. In case of accidental deletion, corruption, or failure of the EBS volume, data cannot be recovered.</li><li><strong>Disaster Recovery Challenges:</strong> Lack of snapshots means there is no recovery point in case of a disaster. This increases the risk of prolonged downtime and operational disruption.</li><li><strong>Operational Risks:</strong> The absence of snapshots complicates data management and recovery processes. It can lead to delays and difficulties in restoring systems to a working state.</li><li><strong>Compliance Issues:</strong> Many regulations and compliance standards require regular backups and snapshots as part of data protection practices. Failure to maintain snapshots may result in non-compliance.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Create Regular Snapshots:</strong> Set up a regular snapshot schedule for EBS volumes to ensure that data is backed up periodically. Use AWS Data Lifecycle Manager or similar tools to automate snapshot creation.</li><li><strong>Implement Snapshot Policies:</strong> Define and enforce snapshot policies that specify the frequency and retention period for snapshots. Ensure that snapshots are created at regular intervals based on the organization's data protection needs.</li><li><strong>Monitor Snapshot Status:</strong> Use AWS CloudWatch and AWS Config to monitor the status of EBS snapshots. Set up alerts for volumes without snapshots to ensure timely creation of backups.</li><li><strong>Verify Snapshot Integrity:</strong> Regularly verify the integrity of EBS snapshots to ensure that backups are valid and can be used for recovery. Perform test restorations to validate snapshot functionality.</li></ul>",6.4,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,CWE-309: Use of Plaintext Password,cloud
Enable Instance Metadata Service Version 2 (IMDSv2) For EC2 Instances,"Amazon EC2 instances use the Instance Metadata Service (IMDS) to provide instance-specific metadata, such as instance ID, IAM role credentials, and other metadata. IMDSv1 is the original version of this service, while IMDSv2 introduces enhanced security features to protect instance metadata from unauthorized access. <p class=""pt-2"">IMDSv2 improves security by requiring session-based authentication with token-based access. This mitigates risks associated with metadata exposure, such as server-side request forgery (SSRF) attacks, where an attacker might exploit vulnerabilities to access sensitive instance metadata.</p>","<ul class=""list-disc pl-4""><li><strong>Increased Risk of Data Exposure:</strong> Without IMDSv2, instances are vulnerable to attacks that exploit IMDSv1. Attackers could potentially access sensitive metadata, including IAM credentials, if they gain access to the instance.</li><li><strong>Security Vulnerabilities:</strong> IMDSv1 does not require authentication for accessing metadata, making it more susceptible to exploitation through SSRF attacks or other methods.</li><li><strong>Compliance Risks:</strong> Many security standards and best practices require the use of secure metadata access mechanisms. Not enabling IMDSv2 could result in non-compliance with security policies and regulations.</li><li><strong>Potential Credential Leakage:</strong> Without IMDSv2, there is an increased risk of unauthorized access to instance metadata, which could lead to exposure of IAM role credentials and other sensitive information.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Enable IMDSv2:</strong> Configure EC2 instances to use IMDSv2. This involves setting the MetadataOptions parameter to enforce the use of IMDSv2 when launching or updating instances.</li><li><strong>Update Existing Instances:</strong> For instances already running with IMDSv1, update their configuration to require IMDSv2. This can be done through the AWS Management Console, AWS CLI, or AWS SDKs.</li><li><strong>Configure Instance Metadata Options:</strong> Use the AWS Management Console or CLI to set HttpTokens to required and HttpPutResponseHopLimit to a value that fits your security requirements. This configuration enforces the use of IMDSv2 and controls the allowed number of hops.</li><li><strong>Monitor and Audit:</strong> Regularly monitor instance metadata access and audit the use of IMDSv2 to ensure compliance with security policies. Use AWS CloudTrail and AWS Config to track metadata access and configuration changes.</li></ul>",6.3,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:L,CWE-306: Missing Authentication for Critical Function,cloud
Disable Public IP Address Assignment For EC2 Instances,"Amazon EC2 instances can be assigned public IP addresses, allowing them to be directly accessible from the internet. While this can be useful for certain applications and services, it also exposes the instance to potential security risks, such as unauthorized access or attacks from the internet. <p class=""pt-2"">Disabling public IP address assignment ensures that EC2 instances are not directly accessible from the internet. Instead, instances can communicate with the internet through a NAT gateway or other secure methods, minimizing exposure and improving security posture.</p>","<ul class=""list-disc pl-4""><li><strong>Increased Attack Surface:</strong> Instances with public IP addresses are directly exposed to the internet, increasing the risk of attacks, unauthorized access, and exploitation of vulnerabilities.</li><li><strong>Unauthorized Access:</strong> Public IP addresses allow potential attackers to attempt to exploit vulnerabilities or gain unauthorized access to the instances. This increases the risk of data breaches and security incidents.</li><li><strong>Compliance Risks:</strong> Many security standards and best practices require that instances are not directly accessible from the internet unless absolutely necessary. Public IP address assignment can lead to non-compliance with such regulations.</li><li><strong>Potential Data Exposure:</strong> Instances with public IP addresses are more susceptible to data exposure and leaks if not properly secured. This includes risks related to sensitive information being accessed by unauthorized parties.</li><li><strong>Increased Attack Vector:</strong> Instances accessible via public IP addresses are more vulnerable to various types of cyber attacks, including Distributed Denial of Service (DDoS) attacks, brute-force attacks, and network scans.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Disable Public IP Assignment:</strong> Configure EC2 instances to avoid automatic public IP address assignment. This can be done by modifying the subnet settings or instance launch configuration to disable the allocation of public IP addresses.</li><li><strong>Use Private Subnets:</strong> Place instances in private subnets where public IP addresses are not assigned. Instances in private subnets can still access the internet through a NAT gateway or other secure methods.</li><li><strong>Update Security Groups:</strong> Review and update security group rules to ensure that instances do not require public IP addresses for necessary communication. Restrict inbound and outbound traffic to only what is required for the application's functionality.</li><li><strong>Configure NAT Gateways:</strong> If instances need to access the internet, configure NAT gateways or NAT instances to enable secure outbound traffic while keeping the instances private.</li><li><strong>Monitor and Audit:</strong> Regularly monitor and audit network configurations and IP assignments to ensure compliance with security policies. Use AWS CloudWatch and AWS Config to track changes and maintain visibility.</li></ul>",8.3,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-287: Improper Authentication,cloud
Manage EC2 With AWS Systems Manager (SSM),"AWS Systems Manager (SSM) is a service that allows you to manage and automate tasks across your AWS resources. For EC2 instances, Systems Manager provides capabilities such as remote management, automation, patching, and configuration management. Using SSM for managing EC2 instances enhances operational efficiency and security by providing a central management interface. <p class=""pt-2"">Failing to manage EC2 instances with SSM can lead to issues such as inconsistent configurations, missed updates, and increased manual intervention. SSM provides tools like Session Manager, Run Command, and State Manager that enable you to manage instances without needing to open inbound ports or use SSH/RDP directly.</p>","<ul class=""list-disc pl-4""><li><strong>Increased Operational Overhead:</strong> Without SSM, managing EC2 instances may require manual updates and configurations, leading to higher operational overhead and potential for human error.</li><li><strong>Inconsistent Configurations:</strong> Instances not managed by SSM might have inconsistent configurations, increasing the risk of misconfigurations and security vulnerabilities.</li><li><strong>Lack of Automation:</strong> SSM enables automation of common tasks such as patching and configuration changes. Without SSM, these tasks need to be performed manually, increasing the risk of missed updates and vulnerabilities.</li><li><strong>Security Risks:</strong> Direct access to instances through SSH/RDP can expose instances to additional security risks. SSM provides secure, controlled access without the need for inbound rules, reducing the attack surface.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable SSM Agent:</strong> Ensure that the SSM Agent is installed and running on all EC2 instances. This allows instances to communicate with AWS Systems Manager and be managed effectively.</li><li><strong>Configure IAM Roles:</strong> Assign appropriate IAM roles to your EC2 instances that grant necessary permissions for Systems Manager operations. This includes roles with policies for SSM actions.</li><li><strong>Use Session Manager:</strong> Configure and use Session Manager for secure, auditable remote access to instances without needing to open inbound ports. This reduces the exposure of instances to potential attacks.</li><li><strong>Automate Tasks:</strong> Leverage SSM Automation to perform common tasks such as patching, configuration updates, and compliance checks. This improves consistency and reduces manual effort.</li><li><strong>Apply Policies:</strong> Use SSM State Manager to ensure that instances remain in the desired state by automatically applying configurations and patches based on policies.</li><li><strong>Monitor and Audit:</strong> Regularly monitor and audit the use of SSM and the configurations applied to instances. Use AWS CloudTrail and AWS Config to track changes and maintain visibility.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer,cloud
EC2 Instances Older Than 180 Days,"EC2 instances that are older than 180 days may not be receiving the latest security updates, patches, or configuration changes, which can expose them to various security risks. As instances age, they may accumulate outdated software, unpatched vulnerabilities, or misconfigurations that can compromise the overall security posture of your environment. <p class=""pt-2"">Ensuring that instances are regularly updated and replaced as needed helps maintain security and performance. Instances older than 180 days should be reviewed for updates or decommissioned to reduce the risk of security incidents.</p>","<ul class=""list-disc pl-4""><li><strong>Security Risks:</strong> Older instances may not have the latest security patches or updates, making them vulnerable to known exploits and attacks.</li><li><strong>Performance Degradation:</strong> Over time, instances may experience performance degradation due to outdated software or configurations, impacting application performance and availability.</li><li><strong>Compliance Issues:</strong> Many security standards and best practices require regular updates and management of resources. Instances older than 180 days may be non-compliant with such regulations.</li><li><strong>Increased Attack Surface:</strong> Older instances might have outdated configurations and security settings, increasing the risk of unauthorized access or data breaches.</li></ul>",LOW,,"<ul class=""list-disc pl-4""><li><strong>Review and Update:</strong> Regularly review instances that are older than 180 days and apply the latest security patches, updates, and configuration changes to ensure they are up-to-date.</li><li><strong>Reevaluate Instances:</strong> Determine if older instances are still necessary for your operations. If not, consider decommissioning or replacing them with newer instances that have current configurations and security settings.</li><li><strong>Automate Updates:</strong> Implement automation tools and processes to regularly update and patch instances. AWS Systems Manager and other automation tools can help streamline this process.</li><li><strong>Monitor and Audit:</strong> Set up monitoring and auditing to track the age and status of EC2 instances. Use AWS Config and CloudWatch to alert you about instances that are approaching or exceeding the 180-day mark.</li><li><strong>Implement Lifecycle Policies:</strong> Develop and enforce policies for instance lifecycle management, including regular reviews, updates, and decommissioning of older instances.</li></ul>",3.4,AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N,CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer,cloud
Cassandra Port Exposed To Internet,"Cassandra is a distributed NoSQL database system that provides high availability and scalability. However, exposing Cassandra ports directly to the internet can pose significant security risks. By default, Cassandra listens on several ports, including those for client communication and inter-node communication. If these ports are accessible from the internet, unauthorized users may exploit vulnerabilities, access sensitive data, or disrupt database operations. <p class=""pt-2"">Exposing Cassandra ports to the internet increases the attack surface, making it vulnerable to various types of cyber-attacks, including unauthorized access, data breaches, and denial-of-service (DoS) attacks.</p>","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Exposed ports can allow attackers to gain unauthorized access to Cassandra nodes, potentially compromising sensitive data and system integrity.</li><li><strong>Data Breaches:</strong> Attackers exploiting exposed ports may access, exfiltrate, or manipulate sensitive data stored in Cassandra, leading to data breaches and loss of confidentiality.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Publicly accessible ports can be targeted with DoS attacks, which may disrupt database operations, degrade performance, or cause service outages.</li><li><strong>Security Vulnerabilities:</strong> Exposed ports increase the likelihood of exploiting known or unknown security vulnerabilities in Cassandra, leading to potential security incidents.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Configure security groups, network access control lists (NACLs), and firewall rules to restrict access to Cassandra ports. Ensure that only trusted IP addresses or networks can access these ports.</li><li><strong>Use VPN or Private Network:</strong> Deploy Cassandra instances within a private network or VPN to restrict access to internal communication only. Avoid exposing ports to the public internet.</li><li><strong>Enable Authentication and Encryption:</strong> Implement authentication mechanisms and encryption for data in transit to protect Cassandra communication channels. This helps secure data and prevent unauthorized access.</li><li><strong>Regularly Update and Patch:</strong> Keep Cassandra and its dependencies up-to-date with the latest security patches and updates to mitigate known vulnerabilities.</li><li><strong>Monitor and Audit:</strong> Implement monitoring and logging to detect unauthorized access attempts or unusual activity on Cassandra ports. Use AWS CloudTrail, CloudWatch, or similar tools for auditing and alerting.</li><li><strong>Review Security Configurations:</strong> Regularly review and update security configurations for Cassandra to ensure they align with best practices and security standards.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
CIFS Port Exposed To Internet,"The Common Internet File System (CIFS) is a network file sharing protocol used to provide shared access to files and printers over a network. CIFS operates over the Server Message Block (SMB) protocol. If CIFS ports (typically port 445) are exposed to the internet, it can create significant security risks, including unauthorized access to file shares, data breaches, and system compromise. <p class=""pt-2"">Exposing CIFS ports directly to the internet increases the attack surface, making systems vulnerable to various threats, including exploitation of known vulnerabilities, unauthorized access, and denial-of-service (DoS) attacks.</p>","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Exposed CIFS ports can allow attackers to gain unauthorized access to file shares and sensitive data, potentially leading to data breaches and loss of confidentiality.</li><li><strong>Data Breaches:</strong> Attackers may exploit exposed ports to access, exfiltrate, or manipulate sensitive information stored on file shares, leading to potential data breaches.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Publicly accessible CIFS ports can be targeted with DoS attacks, which may disrupt file sharing operations and degrade performance.</li><li><strong>Exploitation of Vulnerabilities:</strong> Exposed CIFS ports increase the risk of exploiting known vulnerabilities in the CIFS/SMB protocol, which can lead to system compromise or unauthorized control.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use firewalls, security groups, and network access control lists (NACLs) to restrict access to CIFS ports. Ensure that only trusted IP addresses or networks can access these ports.</li><li><strong>Use VPN or Private Network:</strong> Deploy CIFS services within a private network or VPN to restrict access to internal communication only. Avoid exposing CIFS ports to the public internet.</li><li><strong>Implement Authentication and Encryption:</strong> Enable authentication mechanisms and encryption for CIFS/SMB communications to protect data and prevent unauthorized access.</li><li><strong>Regularly Update and Patch:</strong> Keep CIFS/SMB services and their dependencies up-to-date with the latest security patches and updates to address known vulnerabilities.</li><li><strong>Monitor and Audit:</strong> Implement monitoring and logging to detect unauthorized access attempts or unusual activity on CIFS ports. Use tools like AWS CloudTrail, CloudWatch, or similar services for auditing and alerting.</li><li><strong>Review Security Configurations:</strong> Regularly review and update security configurations for CIFS/SMB services to align with best practices and security standards.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
FTP Port Exposed To Internet,"File Transfer Protocol (FTP) is a standard network protocol used to transfer files between a client and a server. FTP operates over ports 21 (command) and 20 (data). If these ports are exposed to the internet, it can create significant security risks. Exposing FTP ports directly to the internet can lead to unauthorized access, data breaches, and potential system compromise. <p class=""pt-2"">FTP is inherently insecure because it transmits data, including credentials, in plaintext. When FTP ports are accessible from the internet, attackers can exploit vulnerabilities, perform brute-force attacks, and access or manipulate sensitive files.</p>","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Exposed FTP ports can allow attackers to gain unauthorized access to file systems, potentially compromising sensitive data and system integrity.</li><li><strong>Data Breaches:</strong> Attackers may exploit exposed ports to access, exfiltrate, or manipulate files, leading to data breaches and loss of confidentiality.</li><li><strong>Exploitation of Vulnerabilities:</strong> Exposed FTP ports increase the risk of exploiting known vulnerabilities in the FTP protocol or its implementations, leading to potential system compromise.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Publicly accessible FTP ports can be targeted with DoS attacks, which may disrupt file transfer operations and degrade performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use firewalls, security groups, and network access control lists (NACLs) to restrict access to FTP ports. Ensure that only trusted IP addresses or networks can access these ports.</li><li><strong>Use Secure Alternatives:</strong> Replace FTP with more secure protocols such as SFTP (SSH File Transfer Protocol) or FTPS (FTP Secure), which provide encryption for data in transit and authentication.</li><li><strong>Implement Authentication and Encryption:</strong> If FTP must be used, implement authentication mechanisms and encryption (e.g., FTP over TLS/SSL) to protect data and prevent unauthorized access.</li><li><strong>Regularly Update and Patch:</strong> Keep FTP servers and their dependencies up-to-date with the latest security patches and updates to address known vulnerabilities.</li><li><strong>Monitor and Audit:</strong> Implement monitoring and logging to detect unauthorized access attempts or unusual activity on FTP ports. Use tools like AWS CloudTrail, CloudWatch, or similar services for auditing and alerting.</li><li><strong>Review Security Configurations:</strong> Regularly review and update security configurations for FTP services to align with best practices and security standards.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
Kafka Port Exposed To Internet,"Apache Kafka is a distributed event streaming platform used for building real-time data pipelines and streaming applications. Kafka operates on ports such as 9092 for client connections. If Kafka ports are exposed to the internet, it can pose significant security risks, including unauthorized access to Kafka topics, data breaches, and system compromise. <p class=""pt-2"">Exposing Kafka ports directly to the internet increases the risk of attacks on the Kafka brokers, allowing unauthorized users to access, modify, or consume data streams.</p>","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Exposed Kafka ports can allow attackers to gain unauthorized access to Kafka brokers and topics, potentially compromising data confidentiality and integrity.</li><li><strong>Data Breaches:</strong> Attackers may exploit exposed Kafka ports to access, exfiltrate, or manipulate sensitive data streams, leading to data breaches and loss of confidentiality.</li><li><strong>Exploitation of Vulnerabilities:</strong> Exposed Kafka ports increase the risk of exploiting known vulnerabilities in the Kafka protocol or its implementations, leading to potential system compromise.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Publicly accessible Kafka ports can be targeted with DoS attacks, which may disrupt data streaming operations and degrade performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use firewalls, security groups, and network access control lists (NACLs) to restrict access to Kafka ports. Ensure that only trusted IP addresses or networks can access these ports.</li><li><strong>Use Encryption:</strong> Enable encryption for data in transit by configuring SSL/TLS for Kafka brokers and clients. This ensures that data exchanged between Kafka clients and brokers is secure.</li><li><strong>Implement Authentication and Authorization:</strong> Use Kafka’s built-in authentication mechanisms (e.g., SASL) and access control lists (ACLs) to restrict access to Kafka brokers and topics based on user roles.</li><li><strong>Regularly Update and Patch:</strong> Keep Kafka brokers and their dependencies up-to-date with the latest security patches and updates to address known vulnerabilities.</li><li><strong>Monitor and Audit:</strong> Implement monitoring and logging to detect unauthorized access attempts or unusual activity on Kafka ports. Use tools like Kafka’s internal monitoring features, AWS CloudWatch, or similar services for auditing and alerting.</li><li><strong>Review Security Configurations:</strong> Regularly review and update security configurations for Kafka services to align with best practices and security standards.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
Kerberos Port Exposed To Internet,"Kerberos is a network authentication protocol designed to provide strong authentication for client-server applications through secret-key cryptography. It typically operates on ports 88 (Kerberos authentication) and 464 (Kerberos password change). If these ports are exposed to the internet, it poses significant security risks, including unauthorized access, credential theft, and potential system compromise. <p class=""pt-2"">Exposing Kerberos ports to the internet increases the risk of attacks on the Kerberos Key Distribution Center (KDC), allowing unauthorized users to attempt brute-force attacks, exploit vulnerabilities, or gain unauthorized access to network resources.</p>","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Exposed Kerberos ports can allow attackers to gain unauthorized access to the Kerberos authentication service, potentially compromising network security.</li><li><strong>Credential Theft:</strong> Attackers may exploit exposed Kerberos ports to capture or crack Kerberos tickets and passwords, leading to credential theft and unauthorized access to systems.</li><li><strong>Exploitation of Vulnerabilities:</strong> Exposed Kerberos ports increase the risk of exploiting known vulnerabilities in the Kerberos protocol or its implementations, leading to potential system compromise.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Publicly accessible Kerberos ports can be targeted with DoS attacks, which may disrupt authentication services and degrade performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use firewalls, security groups, and network access control lists (NACLs) to restrict access to Kerberos ports. Ensure that only trusted IP addresses or networks can access these ports.</li><li><strong>Use Secure Alternatives:</strong> Where possible, avoid exposing Kerberos ports to the internet and use VPNs or other secure methods for remote access to authentication services.</li><li><strong>Implement Strong Authentication Mechanisms:</strong> Use strong authentication methods, such as multi-factor authentication (MFA), to protect access to Kerberos services.</li><li><strong>Regularly Update and Patch:</strong> Keep Kerberos servers and their dependencies up-to-date with the latest security patches and updates to address known vulnerabilities.</li><li><strong>Monitor and Audit:</strong> Implement monitoring and logging to detect unauthorized access attempts or unusual activity on Kerberos ports. Use tools like AWS CloudTrail, CloudWatch, or similar services for auditing and alerting.</li><li><strong>Review Security Configurations:</strong> Regularly review and update security configurations for Kerberos services to align with best practices and security standards.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
LDAP Port Exposed To Internet,"The Lightweight Directory Access Protocol (LDAP) is used for accessing and managing directory services over a network. LDAP typically operates on ports 389 (LDAP) and 636 (LDAPS for secure LDAP). If these ports are exposed to the internet, it can pose significant security risks, including unauthorized access to directory information, credential theft, and potential system compromise. <p class=""pt-2"">Exposing LDAP ports to the internet increases the risk of attacks on the LDAP server, allowing unauthorized users to attempt brute-force attacks, exploit vulnerabilities, or gain unauthorized access to directory data.</p>","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Exposed LDAP ports can allow attackers to gain unauthorized access to the LDAP directory service, potentially compromising sensitive directory information.</li><li><strong>Credential Theft:</strong> Attackers may exploit exposed LDAP ports to capture or crack LDAP credentials and authentication tokens, leading to credential theft and unauthorized access.</li><li><strong>Exploitation of Vulnerabilities:</strong> Exposed LDAP ports increase the risk of exploiting known vulnerabilities in the LDAP protocol or its implementations, leading to potential system compromise.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Publicly accessible LDAP ports can be targeted with DoS attacks, which may disrupt directory services and degrade performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use firewalls, security groups, and network access control lists (NACLs) to restrict access to LDAP ports. Ensure that only trusted IP addresses or networks can access these ports.</li><li><strong>Use Encryption:</strong> Enable encryption for LDAP traffic by configuring LDAPS (LDAP over SSL/TLS) to secure data in transit. This ensures that data exchanged between LDAP clients and servers is encrypted.</li><li><strong>Implement Strong Authentication and Authorization:</strong> Use strong authentication methods, such as multi-factor authentication (MFA), and configure access controls to restrict access to LDAP services based on user roles.</li><li><strong>Regularly Update and Patch:</strong> Keep LDAP servers and their dependencies up-to-date with the latest security patches and updates to address known vulnerabilities.</li><li><strong>Monitor and Audit:</strong> Implement monitoring and logging to detect unauthorized access attempts or unusual activity on LDAP ports. Use tools like AWS CloudTrail, CloudWatch, or similar services for auditing and alerting.</li><li><strong>Review Security Configurations:</strong> Regularly review and update security configurations for LDAP services to align with best practices and security standards.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
MongoDB Port Exposed To Internet,"MongoDB is a NoSQL database that uses ports 27017 (default) for client connections. If this port is exposed to the internet, it poses significant security risks, including unauthorized access to database contents, data manipulation, and potential system compromise. Exposing MongoDB ports to the internet can lead to a range of vulnerabilities and exploitation scenarios. <p class=""pt-2"">Exposing MongoDB to the internet increases the risk of attackers accessing, modifying, or deleting data, as well as launching attacks on the database system itself.</p>","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Exposed MongoDB ports can allow attackers to gain unauthorized access to the database, potentially compromising sensitive data and application integrity.</li><li><strong>Data Manipulation:</strong> Attackers may exploit exposed MongoDB ports to manipulate or corrupt data, leading to data integrity issues and potential data loss.</li><li><strong>Exploitation of Vulnerabilities:</strong> Exposed MongoDB ports increase the risk of exploiting known vulnerabilities in MongoDB or its implementations, which can lead to system compromise or unauthorized access.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Publicly accessible MongoDB ports can be targeted with DoS attacks, which may disrupt database services and degrade performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use firewalls, security groups, and network access control lists (NACLs) to restrict access to MongoDB ports. Ensure that only trusted IP addresses or networks can access these ports.</li><li><strong>Enable Authentication:</strong> Configure MongoDB to require authentication for all database access. Implement strong authentication methods, such as multi-factor authentication (MFA), to protect database access.</li><li><strong>Use Encryption:</strong> Enable encryption for data in transit (TLS/SSL) and at rest to protect sensitive data. MongoDB supports encryption to secure data both in transit and at rest.</li><li><strong>Regularly Update and Patch:</strong> Keep MongoDB and its dependencies up-to-date with the latest security patches and updates to address known vulnerabilities.</li><li><strong>Implement Access Controls:</strong> Use role-based access controls (RBAC) to restrict permissions and access to database resources based on user roles and responsibilities.</li><li><strong>Monitor and Audit:</strong> Implement monitoring and logging to detect unauthorized access attempts or unusual activity on MongoDB ports. Use tools like AWS CloudTrail, CloudWatch, or similar services for auditing and alerting.</li><li><strong>Review Security Configurations:</strong> Regularly review and update security configurations for MongoDB to align with best practices and security standards.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
MySQL Port Exposed To Internet,"MySQL is a widely-used relational database management system that typically operates on port 3306. When this port is exposed to the internet, it poses significant security risks, including unauthorized access to database contents, data manipulation, and potential system compromise. Exposing MySQL ports to the internet increases the risk of attackers accessing, modifying, or deleting data, as well as launching attacks on the database system itself.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Exposed MySQL ports can allow attackers to gain unauthorized access to the database, potentially compromising sensitive data and application integrity.</li><li><strong>Data Manipulation:</strong> Attackers may exploit exposed MySQL ports to manipulate or corrupt data, leading to data integrity issues and potential data loss.</li><li><strong>Exploitation of Vulnerabilities:</strong> Exposed MySQL ports increase the risk of exploiting known vulnerabilities in MySQL or its implementations, which can lead to system compromise or unauthorized access.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Publicly accessible MySQL ports can be targeted with DoS attacks, which may disrupt database services and degrade performance.</li><li><strong>Compliance Issues:</strong> Many security standards and best practices require databases to be protected from unauthorized internet access. Exposing MySQL ports may result in non-compliance with these regulations.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use firewalls, security groups, and network access control lists (NACLs) to restrict access to MySQL ports. Ensure that only trusted IP addresses or networks can access these ports.</li><li><strong>Enable Authentication:</strong> Configure MySQL to require authentication for all database access. Implement strong authentication methods, such as multi-factor authentication (MFA), to protect database access.</li><li><strong>Use Encryption:</strong> Enable encryption for data in transit (TLS/SSL) and at rest to protect sensitive data. MySQL supports encryption to secure data both in transit and at rest.</li><li><strong>Regularly Update and Patch:</strong> Keep MySQL and its dependencies up-to-date with the latest security patches and updates to address known vulnerabilities.</li><li><strong>Implement Access Controls:</strong> Use MySQL’s built-in access control mechanisms to restrict permissions and access to database resources based on user roles and responsibilities.</li><li><strong>Monitor and Audit:</strong> Implement monitoring and logging to detect unauthorized access attempts or unusual activity on MySQL ports. Use tools like AWS CloudTrail, CloudWatch, or similar services for auditing and alerting.</li><li><strong>Review Security Configurations:</strong> Regularly review and update security configurations for MySQL to align with best practices and security standards.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
Oracle Port Exposed To Internet,"Oracle Database uses various ports, commonly port 1521 for client connections. If this port is exposed to the internet, it poses significant security risks, including unauthorized access to database contents, data manipulation, and potential system compromise. Exposing Oracle Database ports to the internet increases the risk of attackers accessing, modifying, or deleting data, as well as launching attacks on the database system itself.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Exposed Oracle ports can allow attackers to gain unauthorized access to the database, potentially compromising sensitive data and application integrity.</li><li><strong>Data Manipulation:</strong> Attackers may exploit exposed Oracle ports to manipulate or corrupt data, leading to data integrity issues and potential data loss.</li><li><strong>Exploitation of Vulnerabilities:</strong> Exposed Oracle ports increase the risk of exploiting known vulnerabilities in Oracle Database or its configurations, which can lead to system compromise or unauthorized access.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Publicly accessible Oracle ports can be targeted with DoS attacks, which may disrupt database services and degrade performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use firewalls, security groups, and network access control lists (NACLs) to restrict access to Oracle Database ports. Ensure that only trusted IP addresses or networks can access these ports.</li><li><strong>Enable Authentication:</strong> Configure Oracle Database to require strong authentication for all database access. Implement strong authentication methods, such as multi-factor authentication (MFA), to protect database access.</li><li><strong>Use Encryption:</strong> Enable encryption for data in transit (TLS/SSL) and at rest to protect sensitive data. Oracle Database supports encryption to secure data both in transit and at rest.</li><li><strong>Regularly Update and Patch:</strong> Keep Oracle Database and its dependencies up-to-date with the latest security patches and updates to address known vulnerabilities.</li><li><strong>Implement Access Controls:</strong> Use Oracle Database’s built-in access control mechanisms to restrict permissions and access to database resources based on user roles and responsibilities.</li><li><strong>Monitor and Audit:</strong> Implement monitoring and logging to detect unauthorized access attempts or unusual activity on Oracle ports. Use tools like AWS CloudTrail, CloudWatch, or similar services for auditing and alerting.</li><li><strong>Review Security Configurations:</strong> Regularly review and update security configurations for Oracle Database to align with best practices and security standards.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
PostgreSQL Port Exposed To Internet,"PostgreSQL, an open-source relational database system, commonly uses port 5432 for client connections. If this port is exposed to the internet, it presents a significant security risk. Unauthorized access could lead to data breaches, manipulation, or even full system compromise. Exposing PostgreSQL ports publicly makes the database vulnerable to brute-force attacks, unauthorized queries, and exploitation of unpatched vulnerabilities.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> An exposed PostgreSQL port can allow attackers to gain unauthorized access to the database, potentially compromising sensitive data and application integrity.</li><li><strong>Data Manipulation:</strong> Attackers can exploit exposed PostgreSQL ports to alter or corrupt data, leading to data integrity issues and potential loss of critical information.</li><li><strong>Exploitation of Vulnerabilities:</strong> Exposed PostgreSQL ports increase the risk of exploitation through known vulnerabilities, which can result in system compromise or unauthorized access.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Publicly accessible PostgreSQL ports can be targeted with DoS attacks, disrupting database services and impacting application performance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use security groups, firewalls, and network access control lists (NACLs) to restrict access to PostgreSQL ports. Ensure only trusted IP addresses or networks have access.</li><li><strong>Implement Strong Authentication:</strong> Configure PostgreSQL to require strong authentication methods, such as password-based authentication with secure passwords, or use certificate-based authentication.</li><li><strong>Enable Encryption:</strong> Use SSL/TLS to encrypt data in transit between PostgreSQL and clients to protect sensitive information from being intercepted.</li><li><strong>Regular Patching:</strong> Ensure that PostgreSQL and any associated components are up-to-date with the latest security patches to mitigate known vulnerabilities.</li><li><strong>Monitor and Log Access:</strong> Implement monitoring and logging of access to PostgreSQL ports. Use tools like AWS CloudTrail and CloudWatch to detect unauthorized access attempts and take corrective actions.</li><li><strong>Review Security Configurations:</strong> Regularly review PostgreSQL security configurations to ensure alignment with best practices and security standards.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
RDP Port Exposed To Internet,"Remote Desktop Protocol (RDP), typically using port 3389, is a Microsoft protocol that allows users to connect to and control remote systems. When this port is exposed to the internet, it presents a critical security risk. An exposed RDP port can be targeted by attackers for brute-force attacks, exploitation of vulnerabilities, or unauthorized access to the system, potentially leading to full system compromise.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> An exposed RDP port can allow attackers to gain unauthorized access to the system, leading to the potential compromise of sensitive data and system integrity.</li><li><strong>Data Breach:</strong> Attackers can leverage unauthorized access gained through exposed RDP ports to exfiltrate sensitive information, leading to significant data breaches.</li><li><strong>Exploitation of Vulnerabilities:</strong> Exposing RDP to the internet increases the risk of exploitation through known vulnerabilities, which can lead to full system compromise or the deployment of malware and ransomware.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Publicly accessible RDP ports can be targeted by DoS attacks, which can overwhelm and disrupt the remote access services, impacting business operations.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use security groups, firewalls, and network access control lists (NACLs) to restrict RDP access. Limit access to specific IP addresses or VPNs that are known and trusted.</li><li><strong>Enable Multi-Factor Authentication (MFA):</strong> Configure RDP to require MFA for an additional layer of security, making it more difficult for unauthorized users to gain access.</li><li><strong>Use Strong Passwords:</strong> Enforce the use of strong, complex passwords for all accounts that can access RDP, reducing the risk of successful brute-force attacks.</li><li><strong>Implement Network-Level Authentication (NLA):</strong> Enable NLA for RDP sessions to require user authentication before a session is established, helping to prevent unauthorized access.</li><li><strong>Enable Encryption:</strong> Ensure that RDP sessions are encrypted to protect the data in transit from being intercepted by malicious actors.</li><li><strong>Regularly Patch and Update Systems:</strong> Keep all systems and RDP services up-to-date with the latest security patches to mitigate known vulnerabilities.</li><li><strong>Monitor and Log Access:</strong> Implement monitoring and logging of RDP access. Use tools like AWS CloudTrail and CloudWatch to detect unauthorized access attempts and take corrective actions.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
Redis Port Exposed To Internet,"Redis is an in-memory data structure store commonly used as a database, cache, and message broker. It operates on port 6379 by default. When the Redis port is exposed to the internet, it becomes vulnerable to unauthorized access, data theft, and various attacks. Redis does not have built-in authentication or encryption by default, making it particularly susceptible to exploitation when exposed publicly.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Attackers can connect to the publicly accessible Redis instance without authentication, leading to unauthorized access to stored data.</li><li><strong>Data Manipulation:</strong> An exposed Redis instance allows attackers to read, write, or delete data, potentially leading to data loss, corruption, or unauthorized data disclosure.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Attackers can overload the Redis instance with commands, causing it to become unresponsive or crash, disrupting services dependent on Redis.</li><li><strong>Security Breaches:</strong> Publicly accessible Redis instances can be exploited to gain a foothold in the network, potentially leading to broader security breaches across the organization.</li><li><strong>Compliance Violations:</strong> Exposing sensitive data stored in Redis to the internet may result in non-compliance with data protection regulations, leading to fines or penalties.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use security groups, firewalls, or network access control lists (NACLs) to restrict access to the Redis port. Limit access to trusted IP addresses or secure VPNs.</li><li><strong>Enable Authentication:</strong> Configure Redis to require a password (using the requirepass directive) for any client to connect to the server, adding a layer of security.</li><li><strong>Disable Unnecessary Features:</strong> Disable commands and features that are not required for your Redis setup, such as CONFIG, FLUSHALL, or SAVE, to minimize the attack surface.</li><li><strong>Use TLS Encryption:</strong> Configure Redis to use TLS to encrypt data in transit, protecting it from interception by unauthorized parties.</li><li><strong>Regularly Monitor and Log Access:</strong> Implement monitoring and logging for Redis access. Use tools like AWS CloudWatch to detect unauthorized access attempts and respond promptly.</li><li><strong>Update and Patch Regularly:</strong> Keep Redis instances updated with the latest security patches to protect against known vulnerabilities.</li><li><strong>Network Segmentation:</strong> Place Redis instances in a private subnet that is not accessible from the internet to reduce exposure.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
SQL-Server Port Exposed To Internet,"Microsoft SQL Server typically operates on port 1433 and is a widely used relational database management system (RDBMS). When the SQL Server port is exposed to the internet, it opens up the database to potential unauthorized access, attacks, and data breaches. SQL Server is a critical component of many applications, and exposing it without proper security measures can lead to significant security risks.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Attackers can attempt to gain access to the SQL Server using brute force attacks or exploiting known vulnerabilities, potentially leading to data breaches.</li><li><strong>Data Theft and Manipulation:</strong> An exposed SQL Server allows attackers to extract, alter, or delete sensitive data, compromising the integrity and confidentiality of the data.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Attackers can overwhelm the SQL Server with queries, leading to performance degradation or making the database unavailable, disrupting services dependent on the database.</li><li><strong>SQL Injection Attacks:</strong> An exposed SQL Server increases the risk of SQL injection attacks, where malicious queries could be executed, resulting in unauthorized data access or manipulation.</li><li><strong>Compliance Violations:</strong> Exposure of sensitive data in SQL Server to the internet may lead to non-compliance with data protection regulations, resulting in legal penalties or fines.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use firewalls, security groups, or network access control lists (NACLs) to restrict access to the SQL Server port, allowing connections only from trusted IP addresses or secure networks.</li><li><strong>Enable Encryption:</strong> Implement encryption for data in transit using SSL/TLS to protect data exchanged between clients and the SQL Server.</li><li><strong>Use Strong Authentication:</strong> Enforce strong authentication methods, such as multi-factor authentication (MFA) and strong passwords, to secure access to the SQL Server.</li><li><strong>Regularly Patch and Update:</strong> Ensure that SQL Server instances are regularly updated with the latest security patches to protect against known vulnerabilities.</li><li><strong>Monitor and Log Access:</strong> Implement monitoring and logging of SQL Server access using tools like AWS CloudWatch or SQL Server Audit to detect and respond to suspicious activities promptly.</li><li><strong>Network Segmentation:</strong> Place SQL Server instances in private subnets and behind secure network boundaries to limit exposure to the internet.</li><li><strong>Disable Unused Services:</strong> Disable any unnecessary SQL Server features or services that are not in use to reduce the attack surface.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
SSH Port Exposed To Internet,"Secure Shell (SSH) is a protocol used for secure remote administration of systems and file transfers. By default, SSH operates on port 22. When the SSH port is exposed to the internet, it poses significant security risks, as attackers can attempt to exploit vulnerabilities or perform brute force attacks to gain unauthorized access to systems.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Exposing the SSH port to the internet allows attackers to attempt brute force attacks or exploit known vulnerabilities to gain unauthorized access to the system.</li><li><strong>Data Breach:</strong> Attackers who gain access through SSH can potentially view, modify, or exfiltrate sensitive data, leading to data breaches.</li><li><strong>System Compromise:</strong> Once attackers gain access via SSH, they can potentially gain full control of the system, install malware, or use it as a pivot point to access other parts of the network.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Attackers can overwhelm the SSH service with connection attempts, making it difficult or impossible for legitimate users to access the system.</li><li><strong>Compliance Violations:</strong> Exposing SSH to the internet may lead to non-compliance with security and data protection regulations, resulting in legal consequences and fines.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Use security groups, firewalls, or network access control lists (NACLs) to restrict SSH access to trusted IP addresses or secure networks. Consider implementing VPNs or bastion hosts for remote access.</li><li><strong>Use Strong Authentication:</strong> Enforce the use of strong passwords or, preferably, SSH key-based authentication to secure access. Disable password-based authentication if possible.</li><li><strong>Implement Multi-Factor Authentication (MFA):</strong> Require MFA for SSH access to add an additional layer of security beyond just username and password.</li><li><strong>Regularly Monitor and Log Access:</strong> Implement logging and monitoring to detect and respond to unauthorized access attempts. Use tools like AWS CloudWatch or syslog for continuous monitoring.</li><li><strong>Update and Patch Systems:</strong> Regularly apply security patches and updates to the SSH server and underlying operating system to protect against known vulnerabilities.</li><li><strong>Change Default Port:</strong> Consider changing the default SSH port from 22 to a non-standard port to reduce the risk of automated attacks. However, note that this is not a substitute for other security measures.</li><li><strong>Disable Root Login:</strong> Configure SSH to disallow direct root login. Instead, use a standard user account and escalate privileges with sudo as needed.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
Telnet Port Exposed To Internet,"Telnet is an old, unencrypted protocol used for remote communication with systems over the network. It typically operates on port 23. When the Telnet port is exposed to the internet, it presents significant security risks because Telnet transmits data, including login credentials, in plaintext. This makes it susceptible to interception and exploitation by attackers.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Attackers can exploit the exposed Telnet port to gain unauthorized access to systems, potentially by using brute force attacks or exploiting vulnerabilities.</li><li><strong>Data Interception:</strong> Since Telnet transmits data in plaintext, any intercepted communications, including login credentials, can be easily read by attackers, leading to data breaches.</li><li><strong>System Compromise:</strong> If attackers gain access via Telnet, they can potentially control the system, install malware, or use it as a launch point for further attacks on the network.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> Attackers can overwhelm the Telnet service with excessive connection attempts, causing performance issues or making the service unavailable to legitimate users.</li><li><strong>Compliance Violations:</strong> Exposing Telnet to the internet may lead to non-compliance with security and data protection standards, resulting in legal and regulatory consequences.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Disable Telnet:</strong> If Telnet is not required, disable the Telnet service on your systems to eliminate the associated security risks.</li><li><strong>Use Secure Alternatives:</strong> Replace Telnet with more secure protocols like SSH (Secure Shell) for remote administration. SSH provides encryption for data in transit and stronger authentication mechanisms.</li><li><strong>Restrict Access:</strong> If Telnet must be used, restrict access to the Telnet port using firewalls, security groups, or network access control lists (NACLs) to allow connections only from trusted IP addresses or secure networks.</li><li><strong>Implement Network Segmentation:</strong> Place systems requiring Telnet access in private subnets and behind secure network boundaries to limit exposure to the internet.</li><li><strong>Monitor and Log Access:</strong> Implement logging and monitoring for Telnet access to detect and respond to unauthorized access attempts. Use tools like AWS CloudWatch or syslog for continuous monitoring.</li><li><strong>Regularly Update Systems:</strong> Ensure that all systems are updated with the latest security patches to protect against known vulnerabilities that may be exploited through Telnet.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
RPC Port Exposed To Internet,"Remote Procedure Call (RPC) is a protocol that allows a program to request services from a program located on another computer in a network. RPC operates over various ports, with port 135 being commonly used for Microsoft RPC services. Exposing the RPC port to the internet poses significant security risks because it can be exploited by attackers to gain unauthorized access to systems, execute arbitrary code, or cause service disruptions.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Attackers can exploit the exposed RPC port to gain unauthorized access to network services, potentially leading to full system compromise.</li><li><strong>Code Execution:</strong> Exploitation of vulnerabilities in RPC services can allow attackers to execute arbitrary code on the target system, leading to unauthorized actions and control over the system.</li><li><strong>Denial-of-Service (DoS) Attacks:</strong> The RPC service can be targeted with DoS attacks, overwhelming the system and rendering services unavailable to legitimate users.</li><li><strong>Lateral Movement:</strong> Once an attacker gains access through the RPC port, they can use it as a pivot point to move laterally within the network, compromising additional systems.</li><li><strong>Data Breach:</strong> Exploiting RPC vulnerabilities may lead to unauthorized access to sensitive data, resulting in potential data breaches.</li><li><strong>Compliance Violations:</strong> Exposing RPC services to the internet may violate security and data protection regulations, leading to legal and regulatory consequences.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Disable RPC:</strong> If RPC is not required for your environment, disable the RPC service to eliminate the associated security risks.</li><li><strong>Use Secure Alternatives:</strong> Where possible, replace RPC with more secure communication protocols that offer encryption and stronger authentication.</li><li><strong>Restrict Access:</strong> If RPC must be used, restrict access to the RPC port using firewalls, security groups, or network access control lists (NACLs) to allow connections only from trusted IP addresses or secure networks.</li><li><strong>Implement Network Segmentation:</strong> Place systems requiring RPC access in private subnets and behind secure network boundaries to limit exposure to the internet.</li><li><strong>Monitor and Log Access:</strong> Enable logging and monitoring for RPC access to detect and respond to unauthorized access attempts. Use tools like AWS CloudWatch or Windows Event Logs for continuous monitoring.</li><li><strong>Regularly Update Systems:</strong> Ensure that all systems and RPC services are updated with the latest security patches to protect against known vulnerabilities.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
Unrestricted Security Group Egress To All Ports,"Security groups in AWS act as virtual firewalls that control inbound and outbound traffic for EC2 instances and other resources. An unrestricted egress rule allows outbound traffic to any destination on any port, which poses significant security risks. Without restrictions on outbound traffic, compromised instances or services within your network can freely communicate with external malicious hosts, potentially leading to data exfiltration or further compromise.","<ul class=""list-disc pl-4""><li><strong>Data Exfiltration:</strong> Attackers can exploit unrestricted egress rules to send sensitive data from your AWS environment to external locations without any restrictions.</li><li><strong>Command and Control (C2) Communication:</strong> Compromised instances can communicate with external command and control servers, allowing attackers to maintain control over infected resources.</li><li><strong>Spread of Malware:</strong> Malicious software within your environment can propagate to external systems, increasing the risk of a larger breach or attack.</li><li><strong>Undetected Outbound Traffic:</strong> Lack of egress restrictions can make it challenging to monitor and control outbound traffic, leading to undetected malicious activity.</li><li><strong>Non-Compliance:</strong> Unrestricted outbound traffic may violate security policies or regulatory requirements, resulting in potential legal and compliance issues.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Egress Traffic:</strong> Implement restrictive egress rules in your security groups to limit outbound traffic to only necessary ports and destinations. Use the principle of least privilege to minimize potential attack vectors.</li><li><strong>Use VPC Flow Logs:</strong> Enable VPC Flow Logs to monitor and log outbound traffic for further analysis and to detect unusual or unauthorized egress activity.</li><li><strong>Implement Network Segmentation:</strong> Segment your network to control and limit egress traffic between different network segments, ensuring that only approved services can communicate externally.</li><li><strong>Apply Egress Controls at Multiple Layers:</strong> Use additional layers of security such as AWS Network Firewall or third-party firewalls to enforce egress controls beyond security groups.</li><li><strong>Regularly Review and Audit Security Groups:</strong> Regularly audit your security group configurations to ensure that egress rules are aligned with your security policies and requirements. Remove any overly permissive or unnecessary rules.</li><li><strong>Utilize AWS Config Rules:</strong> Implement AWS Config rules to automatically detect and notify you of any unrestricted egress rules, enabling you to take corrective action promptly.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,cloud
EC2 Instances Without Instance Profiles,"Instance profiles in AWS are used to associate IAM roles with EC2 instances, allowing them to securely interact with other AWS services. When an EC2 instance operates without an instance profile, it lacks the necessary permissions to perform actions on other AWS services in a secure and controlled manner. This setup forces the use of static credentials or other less secure methods to grant access, increasing the risk of security breaches.","<ul class=""list-disc pl-4""><li><strong>Increased Use of Static Credentials:</strong> Without an instance profile, applications on the EC2 instance may rely on hard-coded or environment-based static credentials, which are less secure and harder to manage.</li><li><strong>Security Risk:</strong> Static credentials stored on an instance can be compromised if the instance is breached, leading to unauthorized access to AWS resources.</li><li><strong>Operational Overhead:</strong> Managing and rotating static credentials manually increases the complexity and likelihood of errors, which can lead to security vulnerabilities or operational issues.</li><li><strong>Non-Compliance:</strong> Operating without an instance profile might violate security best practices or regulatory requirements that mandate the use of role-based access controls.</li><li><strong>Limited Automation and Scaling:</strong> The absence of instance profiles limits the ability to automate and scale operations securely, as instances cannot dynamically assume roles with appropriate permissions.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Assign Instance Profiles:</strong> Attach instance profiles with appropriate IAM roles to your EC2 instances. Ensure the roles have the least privilege necessary for the instance to perform its functions.</li><li><strong>Use IAM Roles for Service Access:</strong> Define and attach IAM roles to instance profiles, granting access only to the AWS services and resources needed by the EC2 instance.</li><li><strong>Audit EC2 Instances:</strong> Regularly audit your EC2 instances to ensure that all instances requiring AWS service access have appropriate instance profiles attached.</li><li><strong>Automate Role Assignment:</strong> Implement automated mechanisms during the instance provisioning process to ensure that instance profiles are consistently assigned.</li><li><strong>Monitor and Rotate Permissions:</strong> Regularly review and update the permissions associated with IAM roles to ensure they align with the current security policies and operational needs.</li><li><strong>Use AWS Config Rules:</strong> Set up AWS Config rules to detect and notify you of any EC2 instances running without an instance profile, allowing you to take corrective action.</li></ul>",8.6,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,CWE-284: Improper Access Control,cloud
EC2 Security Groups With Range Of Ports Opened For Inbound Traffic,"This vulnerability occurs when EC2 security groups have overly permissive rules, allowing a wide range of ports to be open for inbound traffic. This can increase the attack surface and expose EC2 instances to potential vulnerabilities.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Unrestricted security groups can allow unauthorized individuals to connect to and interact with EC2 instances.</li> <li><strong>Data breaches:</strong> Compromised EC2 instances can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement strong access controls. Unrestricted security groups can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Restrict inbound traffic:</strong> Configure your EC2 security groups to allow only the necessary ports for inbound traffic.</li> <li><strong>Use security groups effectively:</strong> Create separate security groups for different EC2 instances to control access more granularly.</li> <li><strong>Review security group rules regularly:</strong> Periodically review and update security group rules to ensure they align with your organization's security policies.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-287: Improper Authentication,cloud
Sensitive Information In EC2 Instance User Data,"EC2 instance user data is a feature that allows you to provide configuration or initialization scripts when launching an instance. However, if sensitive information such as passwords, API keys, or other confidential data is included in this user data, it can be exposed to anyone with access to the instance metadata service or the instance itself. This exposure poses significant security risks if sensitive information is not properly protected.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Sensitive information in user data can be accessed by anyone with access to the instance metadata service or the instance itself, leading to potential unauthorized access to critical resources or systems.</li><li><strong>Data Breach:</strong> Exposed sensitive data can be exploited by attackers to gain unauthorized access to other services, applications, or systems, potentially resulting in a data breach.</li><li><strong>Credential Compromise:</strong> If credentials or secret keys are included in user data, they may be compromised, allowing attackers to perform unauthorized actions or access sensitive data.</li><li><strong>Non-Compliance:</strong> Storing sensitive information in user data may violate regulatory requirements or security best practices, leading to potential compliance issues.</li><li><strong>Increased Attack Surface:</strong> Exposing sensitive information increases the attack surface, making it easier for attackers to exploit vulnerabilities and gain unauthorized access.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Avoid Storing Sensitive Information:</strong> Do not include sensitive information such as passwords, API keys, or credentials in EC2 instance user data. Instead, use AWS Secrets Manager or AWS Systems Manager Parameter Store to securely manage and retrieve sensitive information.</li><li><strong>Use IAM Roles:</strong> Implement IAM roles with appropriate permissions for instances to access necessary resources securely, avoiding the need to embed sensitive data in user data.</li><li><strong>Encrypt User Data:</strong> If you must include sensitive information, encrypt it before adding it to the user data and ensure that decryption keys are stored securely.</li><li><strong>Restrict Metadata Access:</strong> Implement access controls to restrict who can view or modify instance metadata to reduce the risk of unauthorized access to sensitive information.</li><li><strong>Regularly Review User Data:</strong> Periodically review and audit EC2 instance user data to ensure that no sensitive information is being stored or exposed.</li><li><strong>Use Secure Configuration Management:</strong> Utilize secure configuration management tools and practices to handle sensitive data and configuration settings securely.</li></ul>",8.6,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,CWE-312: Cleartext Storage of Sensitive Information,cloud
Disable Network ACLs Ingress On Uncommon Ports,"Network Access Control Lists (ACLs) are a critical security feature that allows you to control inbound and outbound traffic at the subnet level in AWS VPCs. Disabling Network ACLs ingress rules on uncommon or non-standard ports can expose your network to unnecessary risks. If these ports are not restricted or monitored, they may become targets for unauthorized access or exploitation.","<ul class=""list-disc pl-4""><li><strong>Increased Attack Surface:</strong> Disabling ACL rules on uncommon ports may inadvertently expose your network to attacks or unauthorized access attempts on these ports, even if they are not commonly used.</li><li><strong>Security Risk:</strong> Open or unrestricted access on uncommon ports can be exploited by attackers to gain unauthorized access, compromise systems, or launch attacks.</li><li><strong>Compliance Issues:</strong> Security best practices and regulatory requirements often mandate the use of restrictive network policies. Disabling ACL rules on uncommon ports may lead to non-compliance with these standards.</li><li><strong>Potential Data Exfiltration:</strong> Unrestricted access on less monitored ports could be used for data exfiltration or unauthorized communications, increasing the risk of data breaches.</li><li><strong>Operational Overhead:</strong> Managing and monitoring network traffic without proper ACL rules increases the complexity of network security, making it harder to detect and respond to potential threats.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable ACL Rules:</strong> Ensure that Network ACLs have appropriate ingress rules configured for all ports, including uncommon ones. Restrict access to only the necessary ports and IP ranges.</li><li><strong>Monitor Network Traffic:</strong> Implement monitoring and logging to track traffic on all ports, including uncommon ones, to detect and respond to any suspicious activity.</li><li><strong>Review ACL Configurations:</strong> Regularly review and audit Network ACL configurations to ensure they adhere to security best practices and organizational policies.</li><li><strong>Implement Least Privilege:</strong> Apply the principle of least privilege by restricting access to only the ports and services that are necessary for your operations, minimizing potential attack vectors.</li><li><strong>Automate Security Policies:</strong> Use tools and automation to enforce and manage ACL policies consistently across your network, reducing the risk of human error and improving security posture.</li></ul>",8.6,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,CWE-284: Improper Access Control,cloud
Disable Network ACLs Ingress From 0.0.0.0/0 To Any Ports,"Network Access Control Lists (ACLs) are used to control inbound and outbound traffic at the subnet level in AWS Virtual Private Cloud (VPC). Disabling Network ACLs ingress rules from <span class=""font-medium"">0.0.0.0/0</span> (any IP address) to any ports can expose your network to significant security risks. This configuration can allow unrestricted access from any IP address to your resources, potentially leading to unauthorized access or exploitation of vulnerabilities.","<ul class=""list-disc pl-4""><li><strong>Increased Attack Surface:</strong> Allowing unrestricted inbound traffic from 0.0.0.0/0 on any port significantly increases the potential attack surface, making your network more vulnerable to external threats.</li><li><strong>Unauthorized Access:</strong> Unrestricted ingress can enable attackers to access and exploit resources, leading to potential data breaches or unauthorized control over your systems.</li><li><strong>Compliance Issues:</strong> Failing to properly restrict network access can lead to non-compliance with security best practices or regulatory requirements, which may result in security audits or penalties.</li><li><strong>Data Exfiltration Risk:</strong> With no restrictions on inbound traffic, attackers could exfiltrate sensitive data or perform unauthorized actions on your network.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Implement Strict ACL Rules:</strong> Configure Network ACLs to only allow inbound traffic from trusted IP ranges and on necessary ports. Avoid using 0.0.0.0/0 unless absolutely required.</li><li><strong>Monitor and Audit Traffic:</strong> Continuously monitor network traffic and audit ACL rules to ensure that only authorized traffic is allowed and to detect any suspicious activity.</li><li><strong>Apply Principle of Least Privilege:</strong> Restrict access to only the IP addresses and ports that are necessary for your applications and services to function, minimizing the risk of unauthorized access.</li><li><strong>Use Security Groups:</strong> In addition to ACLs, use security groups to further control and restrict traffic to your instances based on their specific requirements.</li><li><strong>Review and Update ACLs Regularly:</strong> Regularly review and update Network ACL configurations to ensure they align with current security policies and operational needs.</li><li><strong>Implement Logging and Alerting:</strong> Enable logging and set up alerts for unusual or unauthorized traffic patterns to quickly respond to potential security incidents.</li></ul>",8.6,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,CWE-287: Improper Authentication,cloud
Unused EC2 Security Groups,"Unused EC2 Security Groups are security group configurations within AWS EC2 that are not currently associated with any EC2 instances but still exist within your account. These security groups may have permissive or misconfigured rules that can pose security risks. Unused security groups can potentially be leveraged by malicious actors if they are mistakenly or intentionally associated with instances in the future, increasing the attack surface of your environment.","<ul class=""list-disc pl-4""><li><strong>Increased Attack Surface:</strong> Unused security groups with permissive rules can become a vector for attacks if they are associated with EC2 instances later. This increases the potential attack surface and risk of unauthorized access.</li><li><strong>Misconfiguration Risks:</strong> Security groups that are not actively monitored may contain outdated or overly permissive rules, which can expose your environment to security breaches.</li><li><strong>Compliance Issues:</strong> Retaining unused security groups can lead to non-compliance with security policies or regulatory requirements, potentially resulting in security audits or penalties.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Identify and Review Unused Security Groups:</strong> Regularly audit your security groups to identify those that are not in use. Review their rules to ensure they adhere to your security policies.</li><li><strong>Remove or Archive:</strong> Delete security groups that are confirmed to be unused and no longer needed. If there is a need to retain historical data, consider archiving them with proper documentation.</li><li><strong>Implement Access Controls:</strong> Ensure that only authorized personnel have the ability to create or modify security groups to prevent unnecessary or risky configurations.</li><li><strong>Automate Monitoring:</strong> Use AWS tools or third-party solutions to automate the monitoring and management of security groups to quickly identify and address unused or misconfigured groups.</li></ul>",6.1,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N,CWE-200: Information Exposure,cloud
Enable EC2 Instance Termination Protection,"EC2 Instance Termination Protection is a feature that prevents the accidental termination of EC2 instances. When enabled, this protection ensures that an instance cannot be terminated through the AWS Management Console or API without first disabling the protection. Failure to enable termination protection increases the risk of accidental or unauthorized instance termination, which can lead to data loss, service disruption, or operational issues.","<ul class=""list-disc pl-4""><li><strong>Accidental Data Loss:</strong> Without termination protection, instances can be terminated accidentally, potentially leading to data loss if proper backups or data recovery mechanisms are not in place.</li><li><strong>Service Disruption:</strong> Terminating critical instances without protection can disrupt services and impact application availability, leading to downtime and degraded user experience.</li><li><strong>Operational Risks:</strong> The lack of termination protection increases the risk of operational issues, such as the unintended loss of instances during maintenance or management activities.</li><li><strong>Compliance Issues:</strong> Failure to enable termination protection may lead to non-compliance with internal policies or regulatory requirements that mandate safeguards against accidental data loss or service disruption.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Enable Termination Protection:</strong> Activate termination protection for all critical or important EC2 instances to prevent accidental or unauthorized terminations. This can be done through the AWS Management Console, CLI, or API.</li><li><strong>Review Instance Protection Settings:</strong> Regularly review the termination protection settings of your EC2 instances to ensure that it is enabled for instances that require protection.</li><li><strong>Implement Backup and Recovery Procedures:</strong> Ensure that robust backup and recovery procedures are in place for all important instances to mitigate the impact of accidental terminations.</li></ul>",5.9,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N,CWE-770: Creation of Temporary File with Insecure Permissions,cloud
Enable ECR Repositories Image Scan On Push,"Enabling image scan on push for Amazon Elastic Container Registry (ECR) repositories ensures that container images are automatically scanned for vulnerabilities when they are pushed to the repository. If this feature is not enabled, images can be deployed with known vulnerabilities, increasing the risk of security breaches. Image scans help identify and mitigate vulnerabilities in container images, enhancing overall security.","<ul class=""list-disc pl-4""><li><strong>Increased Risk of Vulnerabilities:</strong> Without automatic image scanning, vulnerabilities in container images may go unnoticed until they are exploited, leading to potential security breaches.</li><li><strong>Operational Risks:</strong> Deploying vulnerable container images can cause security incidents, operational disruptions, and degrade the integrity of the deployed applications.</li><li><strong>Compliance Issues:</strong> Not scanning images on push may lead to non-compliance with security best practices or regulatory requirements that mandate vulnerability scanning of container images.</li><li><strong>Data Exposure:</strong> Vulnerable images can be exploited to gain unauthorized access to sensitive data or systems, leading to potential data breaches.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Image Scan On Push:</strong> Configure ECR repositories to automatically scan images for vulnerabilities when they are pushed. This can be done via the AWS Management Console, CLI, or API.</li><li><strong>Review and Update Policies:</strong> Ensure that image scanning policies are applied to all ECR repositories and review them regularly to comply with security standards.</li><li><strong>Monitor and Act on Scan Results:</strong> Regularly monitor scan results and address any identified vulnerabilities promptly by updating or patching container images.</li><li><strong>Implement Security Best Practices:</strong> Combine image scanning with other security practices such as using trusted base images, applying the principle of least privilege, and conducting regular security audits.</li></ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,CWE-117: Improper Output Neutralization for Logs,cloud
ECR Repositories Are Exposed Publicly,"Amazon Elastic Container Registry (ECR) repositories are used to store and manage container images. If ECR repositories are exposed publicly, unauthorized users may gain access to sensitive or proprietary container images. Public exposure of ECR repositories increases the risk of unauthorized access to your container images, which could lead to intellectual property theft, security breaches, and compliance issues.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Publicly accessible repositories allow anyone to view, pull, or potentially exploit container images, which can lead to unauthorized use or distribution of sensitive or proprietary data.</li><li><strong>Intellectual Property Theft:</strong> Exposing container images publicly can lead to theft of proprietary or confidential software, affecting the competitiveness and security of your applications.</li><li><strong>Security Breaches:</strong> Attackers can analyze exposed images for vulnerabilities and use this information to exploit your systems or deploy malicious payloads.</li><li><strong>Compliance Issues:</strong> Public exposure of repositories may violate compliance requirements or security policies that mandate restricted access to container images.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Repository Access:</strong> Configure your ECR repositories to be private and restrict access using AWS Identity and Access Management (IAM) policies and repository permissions.</li><li><strong>Review Repository Policies:</strong> Regularly review and update your repository access policies to ensure that only authorized users and services can access your ECR repositories.</li><li><strong>Monitor Access Logs:</strong> Enable and monitor access logging for ECR repositories to detect and respond to any unauthorized access attempts.</li></ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,CWE-200: Information Exposure,cloud
Use Lifecycle Policies For ECR Image Repositories,"Lifecycle policies for Amazon Elastic Container Registry (ECR) image repositories are used to automate the cleanup of unused or outdated container images. When lifecycle policies are not configured, unused or old images accumulate in the repository, leading to increased storage costs, potential security risks, and inefficiencies. Properly configured lifecycle policies help manage and delete outdated images, reducing storage costs and mitigating security risks.","<ul class=""list-disc pl-4""><li><strong>Increased Storage Costs:</strong> Accumulation of unused or outdated images increases storage costs as you pay for the storage of these images.</li><li><strong>Security Risks:</strong> Old and unused images may contain vulnerabilities that could be exploited if not managed properly. Keeping outdated images in the repository increases the risk of these vulnerabilities being used.</li><li><strong>Operational Inefficiencies:</strong> Having a large number of images in the repository can lead to operational inefficiencies, such as difficulties in managing and retrieving relevant images.</li><li><strong>Compliance Issues:</strong> Not implementing lifecycle policies may lead to non-compliance with best practices or regulatory requirements related to data management and security.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Configure Lifecycle Policies:</strong> Set up lifecycle policies for your ECR repositories to automatically manage and delete outdated or unused container images based on specified criteria, such as age or image count.</li><li><strong>Review and Update Policies:</strong> Regularly review and update your lifecycle policies to ensure they align with your organization's data retention and security requirements.</li><li><strong>Monitor Repository Usage:</strong> Monitor repository usage and storage metrics to assess the effectiveness of your lifecycle policies and make adjustments as needed.</li><li><strong>Implement Best Practices:</strong> Follow AWS best practices for managing container images, including setting up lifecycle policies and regularly cleaning up unused images.</li></ul>",5.3,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L,CWE-548: Exposure of Information via Directory Listing,cloud
EFS File Systems Without Encryption,"Amazon Elastic File System (EFS) provides scalable file storage that can be mounted to Amazon EC2 instances. Encryption ensures that the data stored in EFS file systems is protected from unauthorized access. If EFS file systems are not encrypted, data is stored in plaintext, which increases the risk of data breaches and unauthorized access to sensitive information.","<ul class=""list-disc pl-4""><li><strong>Data Breach Risk:</strong> Unencrypted data is vulnerable to unauthorized access, leading to potential data breaches if sensitive information is exposed.</li><li><strong>Compliance Issues:</strong> Many regulatory frameworks and industry standards require data encryption to ensure data security and privacy. Unencrypted EFS file systems may result in non-compliance with these requirements.</li><li><strong>Data Integrity Risks:</strong> Lack of encryption could also make data more susceptible to tampering or unauthorized modifications.</li><li><strong>Increased Vulnerability:</strong> Without encryption, data stored on EFS is more susceptible to interception or unauthorized access during transit and at rest.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Encryption:</strong> Configure EFS file systems to use encryption at rest and in transit. This can be done through the AWS Management Console, CLI, or API.</li><li><strong>Review and Update Policies:</strong> Regularly review and update your encryption policies and practices to ensure all EFS file systems are encrypted and comply with security standards.</li><li><strong>Monitor Access:</strong> Implement access controls and monitor access logs to detect any unauthorized access attempts or potential breaches.</li><li><strong>Encrypt Data in Transit:</strong> Ensure that encryption is also enabled for data in transit between EFS and connected EC2 instances.</li></ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable EFS File Systems Backup,"Amazon Elastic File System (EFS) provides scalable and elastic file storage for use with Amazon EC2 instances. Enabling backups for EFS file systems ensures that your data is regularly and automatically backed up, protecting against data loss due to accidental deletions, corruption, or other unforeseen events. Without backups, critical data may be permanently lost if the file system encounters issues or if data needs to be restored.","<ul class=""list-disc pl-4""><li><strong>Data Loss Risk:</strong> Without backups, any data loss or corruption in the EFS file system may result in permanent loss of critical data, impacting business continuity and operations.</li><li><strong>Operational Disruption:</strong> Lack of backups can lead to significant operational disruption in the event of data loss, as there may be no way to recover lost files or directories.</li><li><strong>Increased Recovery Time:</strong> Without a backup strategy in place, recovery from data loss incidents can be time-consuming and complex, potentially leading to increased downtime.</li><li><strong>Compliance Issues:</strong> Many organizations and regulatory frameworks require regular data backups to ensure data integrity and availability. Failure to implement backups may result in non-compliance.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Backups:</strong> Configure EFS file systems to use AWS Backup or a similar backup solution to ensure that your data is regularly and automatically backed up.</li><li><strong>Set Backup Policies:</strong> Define and implement backup policies that specify backup frequency, retention periods, and other relevant settings to meet your data protection needs.</li><li><strong>Monitor Backup Status:</strong> Regularly monitor the status and integrity of your backups to ensure they are functioning correctly and that backups are being performed as scheduled.</li><li><strong>Test Recovery Procedures:</strong> Periodically test your backup and recovery procedures to ensure that you can successfully restore data from backups when needed.</li></ul>",7.1,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H,CWE-346: Origin Validation Error,cloud
EFS File Systems Publicly Accessible,"Amazon Elastic File System (EFS) provides scalable, elastic file storage that can be accessed from Amazon EC2 instances. When EFS file systems are configured to be publicly accessible, they can potentially be accessed by unauthorized users or entities over the internet. This misconfiguration poses significant security risks, as it exposes the file system to potential attacks and unauthorized access.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Publicly accessible EFS file systems can be accessed by unauthorized users, leading to potential data breaches, theft, or exposure of sensitive information.</li><li><strong>Data Tampering:</strong> With public access, attackers might gain the ability to modify or tamper with the data stored on the EFS file system, leading to data integrity issues.</li><li><strong>Increased Attack Surface:</strong> Exposing EFS file systems to the public increases the attack surface, making them more susceptible to various types of cyberattacks, including data exfiltration and exploitation.</li><li><strong>Compliance Violations:</strong> Many regulatory frameworks and security standards require that sensitive data be protected from unauthorized access. Publicly accessible EFS file systems may result in non-compliance with these requirements.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Configure security groups and network access control lists (ACLs) to restrict access to the EFS file system, ensuring it is only accessible to authorized entities within your network.</li><li><strong>Implement VPC and Private Endpoints:</strong> Use Amazon VPC and private endpoints to restrict access to the EFS file system, ensuring it is only accessible from within your private network.</li><li><strong>Regularly Review Access Permissions:</strong> Periodically review and update access permissions to ensure that only authorized users and instances have access to the EFS file system.</li><li><strong>Enable Logging and Monitoring:</strong> Enable logging and monitoring to detect and respond to any unauthorized access attempts or unusual activity related to the EFS file system.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
Disable Remote Access To EKS Cluster Node Groups,"Amazon Elastic Kubernetes Service (EKS) provides a managed Kubernetes environment for running containerized applications. If remote access to EKS cluster node groups is not disabled, unauthorized users might gain access to the underlying EC2 instances within the cluster, leading to potential security risks. Remote access should be restricted to ensure that only authorized personnel or services can interact with the EKS node groups.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Remote access to node groups can be exploited by attackers to gain unauthorized control over the EC2 instances, potentially leading to unauthorized data access or manipulation.</li><li><strong>Increased Attack Surface:</strong> Allowing remote access increases the attack surface of the EKS cluster, making it more vulnerable to various types of cyberattacks, including data breaches and system compromises.</li><li><strong>Data Integrity Risks:</strong> Unauthorized access could lead to tampering with applications or data running on the node groups, affecting the integrity and security of your applications.</li><li><strong>Compliance Violations:</strong> Many regulatory frameworks and security standards require the restriction of remote access to critical infrastructure. Failure to disable remote access may result in non-compliance with these requirements.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Remote Access:</strong> Configure security groups and network access control lists (ACLs) to restrict remote access to EKS node groups, ensuring that only authorized entities can access the instances.</li><li><strong>Use Bastion Hosts:</strong> Implement bastion hosts or jump boxes for secure access to EKS nodes, and restrict direct remote access.</li><li><strong>Configure IAM Roles:</strong> Use AWS Identity and Access Management (IAM) roles to control and restrict access to EKS node groups and ensure only authorized users have the necessary permissions.</li><li><strong>Enable Logging and Monitoring:</strong> Enable and monitor logs for remote access attempts to detect and respond to unauthorized access or suspicious activity.</li></ul>",8.7,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
EKS Cluster Endpoint Public Access,"Amazon Elastic Kubernetes Service (EKS) provides a managed Kubernetes control plane that can be accessed through a cluster endpoint. If the EKS cluster endpoint is publicly accessible, it can be accessed over the internet, which may expose the Kubernetes control plane to unauthorized access and potential security threats. Public access to the cluster endpoint should be restricted to ensure that only authorized users and services can interact with the EKS control plane.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Publicly accessible endpoints can be exploited by attackers to gain unauthorized control over the Kubernetes control plane, leading to potential compromise of the cluster.</li><li><strong>Increased Attack Surface:</strong> Exposing the EKS cluster endpoint to the public increases the attack surface, making the cluster more vulnerable to various types of cyberattacks, including command injection and privilege escalation.</li><li><strong>Data Integrity Risks:</strong> Unauthorized access could lead to tampering with cluster resources, affecting the integrity and security of applications and data running in the Kubernetes environment.</li><li><strong>Compliance Violations:</strong> Many regulatory frameworks and security standards require the restriction of public access to critical infrastructure. Public access to the EKS cluster endpoint may result in non-compliance with these requirements.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Public Access:</strong> Configure EKS to restrict public access to the cluster endpoint, ensuring that it is only accessible from within your VPC or from trusted IP addresses.</li><li><strong>Use VPC Endpoints:</strong> Implement VPC endpoints to securely access the EKS cluster endpoint without exposing it to the public internet.</li><li><strong>Implement Network Policies:</strong> Use network policies and security groups to restrict access to the EKS cluster endpoint, ensuring that only authorized entities have access.</li><li><strong>Enable Logging and Monitoring:</strong> Enable logging and monitoring for the EKS cluster endpoint to detect and respond to unauthorized access attempts or suspicious activity.</li></ul>",8.6,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
Enable Envelope Encryption For EKS Kubernetes Secrets,"In Amazon Elastic Kubernetes Service (EKS), Kubernetes secrets are used to store sensitive information such as passwords, OAuth tokens, and SSH keys. Envelope encryption enhances the security of these secrets by encrypting them using a customer-managed AWS Key Management Service (KMS) key before they are stored. If envelope encryption is not enabled for Kubernetes secrets, these secrets may be stored in plaintext or inadequately protected, potentially exposing sensitive information.","<ul class=""list-disc pl-4""><li><strong>Sensitive Data Exposure:</strong> Without envelope encryption, Kubernetes secrets may be stored in plaintext or with insufficient encryption, increasing the risk of unauthorized access to sensitive information.</li><li><strong>Increased Risk of Data Breach:</strong> Unencrypted secrets can be compromised if an attacker gains access to the Kubernetes etcd database or other storage mechanisms, leading to potential data breaches and security incidents.</li><li><strong>Compliance Violations:</strong> Many regulatory frameworks and security standards require the encryption of sensitive data at rest. Failure to enable envelope encryption may result in non-compliance with these requirements.</li><li><strong>Reduced Security Posture:</strong> Not using envelope encryption reduces the overall security posture of the Kubernetes cluster, as sensitive data is not protected by additional layers of encryption.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Envelope Encryption:</strong> Configure Kubernetes secrets in EKS to use envelope encryption with a customer-managed KMS key. This ensures that secrets are encrypted before being stored.</li><li><strong>Use AWS KMS:</strong> Create and manage a KMS key to handle encryption and decryption of secrets. Ensure that access to this key is restricted to authorized entities.</li><li><strong>Update Secret Storage Configuration:</strong> Modify the EKS cluster configuration to include envelope encryption for Kubernetes secrets.</li><li><strong>Monitor and Audit:</strong> Regularly monitor and audit the encryption settings for Kubernetes secrets to ensure compliance with security policies and best practices.</li></ul>",8.6,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-311: Missing Encryption of Sensitive Data,cloud
Use AWS-Managed Policy To Manage Networking Resources,"AWS-managed policies are pre-defined policies created and maintained by AWS. Using AWS-managed policies to manage networking resources, such as VPCs, subnets, and security groups, can expose the environment to potential security risks. These policies may grant broad permissions that can lead to over-provisioning and increased attack surfaces. It is generally more secure to use custom policies tailored to the specific needs of your environment, providing the principle of least privilege.","<ul class=""list-disc pl-4""><li><strong>Over-Permissioning:</strong> AWS-managed policies may grant excessive permissions, allowing users or roles to perform actions that may not be necessary for their job functions.</li><li><strong>Increased Attack Surface:</strong> Broad permissions granted by AWS-managed policies can be exploited by attackers to gain unauthorized access or make unintended changes to networking resources.</li><li><strong>Compliance Issues:</strong> Regulatory frameworks and security standards often require the principle of least privilege. Using AWS-managed policies may lead to non-compliance with these standards.</li><li><strong>Reduced Control:</strong> AWS-managed policies are updated and managed by AWS, which may not align with your organization’s specific security requirements and controls.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Create Custom Policies:</strong> Develop and use custom IAM policies tailored to your specific networking needs, following the principle of least privilege. This ensures that only necessary permissions are granted.</li><li><strong>Review and Audit Permissions:</strong> Regularly review and audit IAM policies and permissions to ensure they adhere to the principle of least privilege and align with your security policies.</li><li><strong>Implement Access Controls:</strong> Use IAM roles and policies to enforce strict access controls over networking resources. Limit permissions to only what is required for each role or user.</li><li><strong>Monitor Policy Changes:</strong> Monitor and track changes to IAM policies and networking resources to detect any unauthorized modifications or potential security issues.</li></ul>",7.5,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
ElastiCache Clusters Using Public Subnets,"ElastiCache clusters are in-memory data stores used for caching and fast data access. When these clusters are deployed in public subnets, they become accessible over the internet, increasing the risk of unauthorized access and potential exposure of sensitive data. ElastiCache clusters should ideally be deployed in private subnets within a Virtual Private Cloud (VPC) to limit exposure and ensure that only trusted sources within the VPC can access them.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Publicly accessible ElastiCache clusters are vulnerable to unauthorized access by external entities, which could lead to data breaches or other security incidents.</li><li><strong>Data Exposure:</strong> Sensitive information stored in the ElastiCache cluster could be exposed to the internet, leading to potential data leaks.</li><li><strong>Increased Attack Surface:</strong> Deploying ElastiCache clusters in public subnets broadens the attack surface, making it easier for attackers to target and exploit these resources.</li><li><strong>Compliance Violations:</strong> Storing or transmitting sensitive data in publicly accessible services can lead to non-compliance with industry regulations and security standards.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Deploy in Private Subnets:</strong> Move ElastiCache clusters to private subnets within your VPC to restrict access to only trusted internal resources.</li><li><strong>Update Security Groups:</strong> Configure security groups to allow access to the ElastiCache clusters only from trusted IP ranges or VPC endpoints.</li><li><strong>Implement VPC Peering or Transit Gateway:</strong> Use VPC peering or transit gateway to allow access between VPCs without exposing the ElastiCache clusters to the public internet.</li><li><strong>Enable Encryption:</strong> Ensure that in-transit and at-rest encryption is enabled for ElastiCache clusters to protect sensitive data from unauthorized access.</li></ul>",8.5,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,cloud
ElastiCache Redis Clusters With No Backups Enabled,"ElastiCache Redis clusters are in-memory data stores that provide high-performance caching. However, if these clusters do not have backups enabled, any data loss, corruption, or cluster failure can result in the permanent loss of critical data. Backups are essential to ensure data durability and recovery in the event of unexpected incidents.","<ul class=""list-disc pl-4""><li><strong>Data Loss:</strong> Without backups, any data stored in the Redis cluster that is lost or corrupted cannot be recovered, leading to potential business disruption.</li><li><strong>Operational Downtime:</strong> In the event of a failure, the inability to restore data from a backup may lead to extended downtime while data is manually reconstructed, if possible.</li><li><strong>Compliance Issues:</strong> Failing to have data backup mechanisms in place can result in non-compliance with industry standards or regulations that require data recovery plans.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Automated Backups:</strong> Configure the Redis clusters to automatically create snapshots at regular intervals, ensuring that a backup is always available for recovery.</li><li><strong>Implement Manual Backups:</strong> In addition to automated backups, consider creating manual snapshots before making significant changes to the cluster or its data.</li><li><strong>Test Backup and Recovery:</strong> Regularly test the backup and recovery process to ensure that data can be restored successfully and that backups are usable.</li></ul>",7.8,AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
Enable ElastiCache Redis In-Transit And At-Rest Encryption,"ElastiCache Redis clusters store and transmit data that may contain sensitive information. If encryption is not enabled for data both in-transit and at-rest, this information is vulnerable to unauthorized access, interception, and tampering. Encryption ensures that data remains confidential and secure during transmission and storage.","<ul class=""list-disc pl-4""><li><strong>Data Breach:</strong> Without encryption, sensitive data transmitted over the network can be intercepted by attackers, leading to potential data breaches.</li><li><strong>Data Integrity:</strong> Unencrypted data at-rest can be modified without detection, leading to integrity issues and potentially compromising the reliability of the data.</li><li><strong>Regulatory Non-Compliance:</strong> Many industries require encryption of sensitive data to comply with regulations such as GDPR, HIPAA, and PCI-DSS. Failure to encrypt data may result in non-compliance and legal penalties.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable In-Transit Encryption:</strong> Configure ElastiCache Redis clusters to use TLS to encrypt data in-transit, ensuring that data is secure while being transmitted between the client and the cluster.</li><li><strong>Enable At-Rest Encryption:</strong> Ensure that data stored in Redis clusters is encrypted at-rest by enabling encryption through AWS KMS (Key Management Service). This protects data from unauthorized access or breaches when it is stored on disk.</li><li><strong>Regularly Rotate Encryption Keys:</strong> Implement a key rotation policy to regularly update encryption keys, ensuring continued security and compliance with best practices.</li></ul>",8.6,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable ElastiCache Redis Clusters With Multi-AZ,"ElastiCache Redis clusters can be deployed across multiple Availability Zones (Multi-AZ) to enhance fault tolerance and availability. Without Multi-AZ enabled, a Redis cluster is at risk of service disruption due to a failure in the single availability zone it resides in, which can lead to data loss or downtime.","<ul class=""list-disc pl-4""><li><strong>Service Disruption:</strong> If an Availability Zone failure occurs and Multi-AZ is not enabled, the entire Redis cluster may become unavailable, leading to significant downtime.</li><li><strong>Data Loss:</strong> Without Multi-AZ, there is no automatic failover to a standby replica in another Availability Zone, increasing the risk of data loss.</li><li><strong>Reduced Fault Tolerance:</strong> A single-AZ setup lacks redundancy, making the system more vulnerable to localized failures and reducing the overall fault tolerance of the service.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Enable Multi-AZ Deployment:</strong> Configure ElastiCache Redis clusters to use Multi-AZ with automatic failover. This ensures that a standby replica in another Availability Zone can take over in case of a failure, reducing downtime and minimizing the risk of data loss.</li><li><strong>Regularly Test Failover:</strong> Implement and regularly test failover procedures to ensure that the Multi-AZ configuration works as expected during an actual failure event.</li><li><strong>Monitor Availability Zones:</strong> Continuously monitor the health of Availability Zones and ensure that the Multi-AZ setup is maintained and optimized for resilience.</li></ul>",5.3,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L,CWE-400: Uncontrolled Resource Consumption,cloud
ELBs With Insecure SSL/TLS Ciphers,"Elastic Load Balancers (ELBs) configured with insecure SSL/TLS ciphers can allow weak encryption algorithms to be used during data transmission. This vulnerability arises when outdated and insecure ciphers are permitted, exposing data to potential interception and decryption by malicious actors.","<ul class=""list-disc pl-4""><li><strong>Data Exposure:</strong> Weak ciphers can be exploited by attackers to decrypt sensitive data in transit, leading to unauthorized access to confidential information.</li><li><strong>Increased Risk of Man-in-the-Middle Attacks:</strong> Insecure ciphers make it easier for attackers to intercept and manipulate communication between clients and servers.</li><li><strong>Compliance Issues:</strong> Using outdated ciphers may violate regulatory requirements or industry standards, leading to compliance issues and potential penalties.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Update Cipher Configurations:</strong> Reconfigure ELBs to disable insecure SSL/TLS ciphers and enable strong, modern ciphers. Ensure only TLS 1.2 or TLS 1.3 protocols are used.</li><li><strong>Regularly Review and Update Security Settings:</strong> Continuously review cipher suites and TLS protocols to align with current best practices and security recommendations.</li><li><strong>Implement Monitoring and Alerts:</strong> Set up monitoring to detect and alert on the use of weak ciphers and outdated protocols to ensure timely action.</li></ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-326: Inadequate Encryption Strength,cloud
Internet-facing ELBs,"Internet-facing Elastic Load Balancers (ELBs) configured with insecure SSL/TLS ciphers are vulnerable to weak encryption algorithms being used for data transmission. This issue arises when outdated or insecure ciphers are allowed, potentially exposing data to interception and decryption by attackers.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Attackers may gain unauthorized access to your application, potentially exploiting vulnerabilities or misconfigurations.</li><li><strong>Data Breach:</strong> Sensitive data could be exposed to unauthorized users if the ELB is not properly secured.</li><li><strong>Denial of Service:</strong> An improperly configured ELB might be susceptible to Denial of Service (DoS) attacks, potentially impacting the availability of your application.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access:</strong> Ensure that ELBs are only accessible from trusted IP addresses or within a Virtual Private Cloud (VPC) if possible. Configure security groups and network access control lists (ACLs) to limit access.</li><li><strong>Implement Authentication:</strong> Use authentication mechanisms to restrict access to your application and ensure that only authorized users can interact with the ELB.</li><li><strong>Monitor and Log:</strong> Enable logging and monitoring for your ELBs to detect and respond to suspicious activity promptly.</li></ul>",7.5,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
Enable Logging For ELBs,"Elastic Load Balancers (ELBs) in AWS are critical components that distribute incoming traffic across multiple targets, such as EC2 instances. However, if access logging is not enabled for ELBs, you miss out on capturing detailed records of the traffic that passes through these load balancers. This can lead to difficulties in monitoring and troubleshooting traffic patterns, security incidents, and compliance audits.","Without access logs, it becomes challenging to diagnose issues, perform security investigations, and meet regulatory compliance requirements. Attackers may exploit this lack of visibility to carry out malicious activities unnoticed.",MEDIUM,,"Enable access logging for all ELBs to ensure that traffic details are recorded and stored in an S3 bucket. This enhances visibility for monitoring, diagnosing issues, and meeting compliance standards.",5.3,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L,CWE-778 - Insufficient Logging,cloud
ELBs Using Clear Text For Communication (HTTP Protocol),"Elastic Load Balancers (ELBs) in AWS that use the HTTP protocol for communication transmit data in clear text. This means that any data sent between clients and the load balancer is not encrypted, which exposes it to potential interception and eavesdropping. This vulnerability can lead to sensitive information being exposed to unauthorized parties and increase the risk of man-in-the-middle attacks.","Using clear text communication (HTTP) can result in the exposure of sensitive data, such as personal information or credentials, to potential attackers. It also increases the risk of data tampering and interception, which can compromise the confidentiality and integrity of the transmitted data.",HIGH,,Configure your ELBs to use HTTPS instead of HTTP to ensure that all data transmitted between clients and the load balancer is encrypted. This can be done by setting up an SSL/TLS certificate for the load balancer and configuring listeners to use HTTPS.,7.4,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N,CWE-319 - Cleartext Transmission of Sensitive Information,cloud
Enable Deletion Protection For ELBs,"Elastic Load Balancers (ELBs) in AWS are critical for distributing incoming traffic across multiple targets. If deletion protection is not enabled, there is a risk that an ELB could be accidentally or maliciously deleted, leading to potential service outages or disruptions. Deletion protection helps safeguard against unintentional or unauthorized removal of ELBs, ensuring continuous availability and minimizing the risk of operational impact.","Without deletion protection, ELBs can be deleted either by mistake or through malicious actions. This can result in the loss of traffic distribution capabilities, service interruptions, and potential downtime for applications dependent on the load balancer.",MEDIUM,,Enable deletion protection for all ELBs to prevent accidental or unauthorized deletions. This can be configured via the AWS Management Console or using AWS CLI.,5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-299 - Improper Validation of Metadata,cloud
Enable EMR Clusters With Public Access Block,"Amazon EMR (Elastic MapReduce) clusters can be exposed to the internet if public access is not blocked. If public access is enabled, unauthorized users can potentially reach the EMR clusters, which may lead to data breaches, unauthorized data access, or exploitation of the cluster's resources. Ensuring that public access is blocked helps secure EMR clusters by restricting access to only authorized users within a VPC or specific IP addresses.","Allowing public access to EMR clusters can expose sensitive data and services to unauthorized users, increasing the risk of data breaches, unauthorized actions, and potential exploitation of cluster resources.",MEDIUM,,"Configure EMR clusters to block public access by enabling the public access block feature. This will ensure that your clusters are only accessible from within the VPC or specified network environments, reducing the risk of exposure to the internet.",5.3,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L,CWE-284 - Improper Access Control,cloud
EMR Clusters With Public IPs On Master Nodes,"Amazon EMR (Elastic MapReduce) clusters can be configured with master nodes that have public IP addresses. If master nodes are assigned public IPs, they become accessible from the internet, potentially exposing sensitive cluster management interfaces and data to unauthorized users. This can lead to security risks such as unauthorized access, data breaches, and potential exploitation of the cluster.","Public IP addresses on master nodes increase the attack surface of the EMR cluster, allowing unauthorized access from the internet. This can result in compromised cluster management, data exposure, and potential disruption of services.",MEDIUM,,"Ensure that master nodes in EMR clusters are not assigned public IP addresses. Configure your EMR clusters to use private IP addresses only, and ensure that all access is restricted to internal networks or specific VPC endpoints.",5.3,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L,CWE-284 - Improper Access Control,cloud
Enable EMR In-Transit And At-Rest Encryption,"Amazon EMR (Elastic MapReduce) clusters handle large volumes of sensitive data, which requires protection both during transmission and while stored. If in-transit and at-rest encryption are not enabled, data can be exposed to unauthorized access or tampering during transmission between nodes and while stored on disk. This could lead to data breaches, loss of confidentiality, and compliance issues.","Without proper encryption, sensitive data transmitted between EMR nodes and stored on disk is vulnerable to interception and unauthorized access. This compromises data confidentiality and integrity, potentially leading to data breaches and regulatory non-compliance.",HIGH,,Enable both in-transit and at-rest encryption for EMR clusters to ensure that all data is encrypted while being transmitted between nodes and while stored on disk. Configure encryption settings in the EMR cluster configuration and ensure that the appropriate encryption keys are used.,7.5,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-311 - Missing Encryption of Sensitive Data,cloud
EventBridge Buses With Unknown Cross-Account Access,"Amazon EventBridge (formerly known as CloudWatch Events) allows the creation of event buses that can receive events from a variety of sources. When these event buses are configured to allow cross-account access, it becomes crucial to ensure that the access permissions are explicitly defined and controlled. Unknown or improperly managed cross-account access could lead to unauthorized entities sending or receiving events, potentially resulting in data leakage, security breaches, or unauthorized actions.","<ul class=""list-disc pl-4""><li><strong>Data Leakage:</strong> Unauthorized cross-account access could lead to sensitive event data being exposed to unintended parties.</li><li><strong>Security Breach:</strong> Malicious users from another account could inject harmful events or disrupt event flows, leading to potential security vulnerabilities within the AWS environment.</li><li><strong>Operational Disruptions:</strong> Mismanagement of event permissions can cause critical events to be intercepted, delayed, or lost, leading to operational inefficiencies or failures.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Audit and Restrict Cross-Account Access:</strong> Regularly audit the permissions associated with EventBridge buses and ensure that cross-account access is granted only to trusted accounts. Implement strict policies that explicitly define who can send or receive events.</li><li><strong>Use IAM Policies for Fine-Grained Control:</strong> Apply IAM policies to control which accounts or users have access to the event bus. Ensure that the policies are least-privilege and regularly reviewed.</li><li><strong>Monitor and Log Access:</strong> Enable logging and monitoring for EventBridge to detect and respond to unauthorized access attempts. Use CloudTrail and other monitoring tools to keep track of cross-account access events.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
EventBridge Event Bus Is Exposed To Everyone,"Amazon EventBridge (formerly known as CloudWatch Events) allows the creation of event buses that can receive events from various sources. An event bus that is exposed to everyone (i.e., has overly permissive access policies) can be accessed by any AWS account or unauthorized users. This exposure could result in sensitive data leaks, unauthorized event injection, or the disruption of critical event-driven processes, potentially leading to significant security incidents.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Malicious users could send events to or receive events from the exposed event bus, leading to potential data leakage and security breaches.</li><li><strong>Data Integrity Compromise:</strong> Unrestricted access might allow attackers to inject unauthorized events, disrupting normal operations or triggering unintended actions.</li><li><strong>Operational Downtime:</strong> Unauthorized or malicious events could cause system failures or slowdowns, impacting the availability of services dependent on EventBridge.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Access to Event Bus:</strong> Modify the event bus policy to ensure that only trusted AWS accounts or IAM roles have access. Implement least-privilege access controls to minimize the risk of exposure.</li><li><strong>Regular Audits:</strong> Conduct regular audits of EventBridge policies to ensure no unnecessary permissions are granted. Use tools like IAM Access Analyzer to identify overly permissive policies.</li><li><strong>Enable Logging and Monitoring:</strong> Use CloudTrail and CloudWatch Logs to monitor and log all access to the event bus. Set up alerts for any unauthorized or suspicious access attempts to quickly respond to potential security threats.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,cloud
Publicly Accessible Glacier Vaults,"Amazon S3 Glacier is a service designed for long-term data archiving with retrieval times ranging from minutes to hours. Glacier vaults are used to store these archived objects. If a Glacier vault is configured to be publicly accessible, it means that anyone on the internet can potentially access or manipulate the archived data, leading to data breaches and potential loss of sensitive information.","<ul class=""list-disc pl-4""><li><strong>Data Breach:</strong> Sensitive archived data could be accessed by unauthorized users, leading to data exposure and potential compliance violations.</li><li><strong>Data Integrity Risks:</strong> Public access could allow unauthorized users to delete or modify archived data, leading to loss of critical information or alteration of records.</li><li><strong>Financial Impact:</strong> Retrieval requests from unauthorized users could lead to unexpected costs, as Glacier charges based on data retrieval.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Restrict Vault Access:</strong> Configure Glacier vault access policies to ensure that only authorized users and roles have the necessary permissions. Implement least-privilege principles to minimize access.</li><li><strong>Monitor and Audit Access:</strong> Regularly monitor access logs for the Glacier vaults to detect any unauthorized access attempts. Use AWS CloudTrail to log and review access patterns.</li><li><strong>Enable MFA Delete:</strong> Consider enabling MFA Delete on Glacier vaults to add an additional layer of security against accidental or malicious deletion of archived data.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
Enable Password Encryption For Glue Data Catalog Connections,"AWS Glue Data Catalog Connections store connection details, including passwords, to various data sources such as databases and data warehouses. If these passwords are stored in plaintext rather than encrypted, it poses a significant security risk. Unauthorized access to these passwords can lead to unauthorized access to data sources, resulting in potential data breaches and data integrity issues.","<ul class=""list-disc pl-4""><li><strong>Data Breach:</strong> Unencrypted passwords can be easily exposed, allowing unauthorized users to access sensitive databases or data sources connected via Glue.</li><li><strong>Data Integrity Risks:</strong> With access to connection credentials, unauthorized users can potentially alter or delete data, leading to corruption or loss of critical information.</li><li><strong>Compliance Violations:</strong> Storing passwords in plaintext may violate industry regulations or internal security policies, leading to legal and financial repercussions.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Password Encryption:</strong> Ensure that passwords in AWS Glue Data Catalog Connections are encrypted using AWS Key Management Service (KMS) or another encryption mechanism to protect them from unauthorized access.</li><li><strong>Rotate Passwords Regularly:</strong> Implement a password rotation policy to ensure that passwords are updated regularly, minimizing the risk of compromise.</li><li><strong>Audit Connection Configurations:</strong> Periodically review and audit Glue Data Catalog Connection configurations to ensure that all passwords are encrypted and adhere to best practices.</li></ul>",8.4,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-256: Unprotected Storage of Credentials,cloud
Enable Glue Data Catalogs With Metadata Encryption,"The AWS Glue Data Catalog is a central repository that stores metadata for your data assets, including databases, tables, and partitions. Enabling metadata encryption for Glue Data Catalogs ensures that sensitive information, such as database schema, table names, and other metadata, is encrypted at rest. This adds an extra layer of security to protect against unauthorized access and potential data breaches. <p class=""pt-2"">Without metadata encryption enabled, the metadata stored in the AWS Glue Data Catalog is not protected by encryption, making it vulnerable to unauthorized access and potential data exposure. This could lead to the compromise of sensitive information, including database schemas and other metadata, which might be exploited by malicious actors.</p>","<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Without metadata encryption, sensitive information stored in the AWS Glue Data Catalog, such as database schemas, table names, and other metadata, is at risk of unauthorized access. This could potentially expose internal data structures and sensitive details to malicious actors.</li><li><strong>Compliance Issues:</strong> Many regulatory and industry standards require encryption of sensitive data at rest. Failing to encrypt metadata could result in non-compliance with data protection regulations, leading to legal and financial repercussions.</li><li><strong>Increased Attack Surface:</strong> Unencrypted metadata can be a target for attackers looking to gain insights into your data architecture, which could facilitate more targeted attacks or data breaches.</li><li><strong>Potential Data Breaches:</strong> If unauthorized users gain access to the metadata, they might exploit this information to access or manipulate underlying data, leading to broader data breaches and increased risk to your data security.</li></ul>",MEDIUM,,"To address this vulnerability, enable metadata encryption for your AWS Glue Data Catalogs. This can be done through the AWS Management Console, AWS CLI, or AWS SDKs. By enabling encryption, you ensure that all metadata stored in the Glue Data Catalog is encrypted using AWS Key Management Service (KMS), providing enhanced security and compliance with data protection standards.",5.9,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable SSL Connections For Glue Database,"Enabling SSL connections for AWS Glue databases ensures that the data transmitted between your application and the Glue database is encrypted during transit. SSL (Secure Sockets Layer) provides an encrypted channel that protects data from interception and eavesdropping, enhancing security and data integrity.","<ul class=""list-disc pl-4""><li><strong>Data Interception Risk:</strong> Without SSL, data transmitted between your application and the Glue database is not encrypted, leaving it vulnerable to interception and eavesdropping by unauthorized parties.</li><li><strong>Compliance Issues:</strong> Many regulatory and industry standards require encryption of data in transit. Failing to use SSL connections can result in non-compliance with these standards, leading to potential legal and financial consequences.</li><li><strong>Increased Attack Surface:</strong> Unencrypted data transmission can be exploited by attackers who may intercept sensitive data, leading to potential data breaches or unauthorized access.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Update Client Applications:</strong> Ensure that client applications connecting to the AWS Glue database are configured to use SSL/TLS. Update the database connection strings or configurations in your application to include SSL parameters. This typically involves adding ?useSSL=true or similar parameters to your JDBC or ODBC connection strings.</li><li><strong>Verify SSL/TLS Configuration:</strong> Test the connection from your client application to the AWS Glue database to ensure that SSL/TLS is correctly enabled and that data is being transmitted securely. You can often verify SSL/TLS by checking the connection properties or using network tools to inspect the encrypted traffic.</li><li><strong>Review and Document:</strong> Update your internal documentation to reflect the SSL/TLS configuration changes. Ensure that your team is informed about the new security practices for database connections.</li></ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-319: Cleartext Transmission of Sensitive Information,cloud
Enable CloudWatch Logs Encryption For Glue Development Endpoints,Enabling CloudWatch Logs encryption for AWS Glue Development Endpoints ensures that the logs generated by Glue jobs and development endpoints are encrypted when stored in Amazon CloudWatch. This protects sensitive information within the logs from unauthorized access and ensures compliance with security and privacy requirements.,"<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Without encryption, CloudWatch Logs associated with Glue Development Endpoints are stored in plaintext, which can expose sensitive information if accessed by unauthorized individuals.</li><li><strong>Compliance Issues:</strong> Many regulatory and industry standards require encryption of logs and other sensitive data. Failing to encrypt CloudWatch Logs can result in non-compliance with these standards, leading to potential legal and financial consequences.</li><li><strong>Increased Security Risk:</strong> Unencrypted logs can be exploited by attackers who gain access to CloudWatch, potentially revealing sensitive operational details and aiding further attacks.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Verify Encryption Settings:</strong> Ensure that the new encryption settings are applied by checking the CloudWatch Logs configuration. Verify that logs are encrypted by reviewing log entries and confirming encryption status in CloudWatch.</li><li><strong>Update Documentation:</strong> Update your internal documentation to reflect the encryption settings for CloudWatch Logs associated with Glue Development Endpoints. Ensure that your team is aware of the encryption practices and compliance requirements.</li><li><strong>Monitor and Audit:</strong> Regularly monitor and audit your CloudWatch Logs to ensure encryption settings are maintained. Look for any signs of unencrypted logs or access attempts that may indicate security issues.</li></ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable Job Bookmark Encryption For Glue Development Endpoints,"Enabling job bookmark encryption for AWS Glue Development Endpoints ensures that job bookmarks, which track the progress of data processing jobs, are encrypted. This protects sensitive information about the state and progress of Glue jobs from unauthorized access and ensures compliance with data protection and privacy requirements.","<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Without encryption, job bookmarks are stored in plaintext, which can expose sensitive information about the state and progress of Glue jobs to unauthorized users.</li><li><strong>Compliance Issues:</strong> Many regulatory and industry standards require encryption of data, including metadata and tracking information. Failing to encrypt job bookmarks can result in non-compliance with these standards, leading to potential legal and financial consequences.</li><li><strong>Increased Security Risk:</strong> Unencrypted job bookmarks can be exploited by attackers to gain insights into data processing activities, which might be used to compromise or disrupt data workflows.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Verify Encryption Settings:</strong> Confirm that job bookmark encryption is properly configured by checking the encryption status in the Glue Console. Ensure that job bookmarks are encrypted as per your settings.</li><li><strong>Update Documentation:</strong> Update your internal documentation to reflect the encryption settings for job bookmarks associated with Glue Development Endpoints. Ensure that your team is informed about the encryption practices and compliance requirements.</li></ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable S3 Encryption For Glue Development Endpoints,"Enabling S3 encryption for AWS Glue Development Endpoints ensures that data stored in Amazon S3, including temporary and output files used by Glue jobs, is encrypted. This protects sensitive data at rest from unauthorized access and ensures compliance with data protection and privacy requirements.","<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Without encryption, data stored in Amazon S3 is saved in plaintext, which can expose sensitive information if accessed by unauthorized individuals.</li><li><strong>Compliance Issues:</strong> Many regulatory and industry standards require encryption of data at rest. Failing to encrypt data stored in S3 can result in non-compliance with these standards, leading to potential legal and financial consequences.</li><li><strong>Increased Security Risk:</strong> Unencrypted data stored in S3 can be exploited by attackers who gain access to your S3 buckets, leading to potential data breaches or unauthorized access to sensitive information.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Update S3 Bucket Policies:</strong> Apply Bucket Encryption: Ensure that S3 buckets used by the Glue Development Endpoints have encryption enabled. Navigate to the S3 console, select the relevant bucket, and configure bucket-level encryption settings. Set Default Encryption: Set default encryption to ensure that all objects stored in the bucket are automatically encrypted.</li><li><strong>Verify Encryption Settings:</strong> Confirm that S3 encryption is properly configured by checking the encryption status of objects in your S3 buckets. Verify that new data is being encrypted according to your settings.</li><li><strong>Update Documentation:</strong> Update your internal documentation to reflect the encryption settings for S3 storage associated with Glue Development Endpoints. Ensure that your team is aware of the encryption practices and compliance requirements.</li></ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable CloudWatch Logs Encryption For Glue ETL Jobs,"Enabling CloudWatch Logs encryption for AWS Glue ETL (Extract, Transform, Load) jobs ensures that the logs generated by these jobs are encrypted when stored in Amazon CloudWatch. This enhances the security of your logs, protecting sensitive information from unauthorized access and ensuring compliance with data protection and privacy requirements.","<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Without encryption, CloudWatch Logs generated by Glue ETL jobs are stored in plaintext, which can expose sensitive information if accessed by unauthorized individuals.</li><li><strong>Compliance Issues:</strong> Many regulatory and industry standards require encryption of logs and sensitive data. Failing to encrypt CloudWatch Logs can result in non-compliance with these standards, leading to potential legal and financial consequences.</li><li><strong>Increased Security Risk:</strong> Unencrypted logs can be exploited by attackers who gain access to CloudWatch, potentially revealing sensitive operational details and aiding further attacks.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Verify Encryption Settings:</strong> Confirm that encryption settings are correctly applied by checking the CloudWatch Logs configuration. Ensure that logs from the Glue ETL jobs are encrypted according to your settings.</li><li><strong>Update Documentation:</strong> Update your internal documentation to reflect the encryption settings for CloudWatch Logs associated with Glue ETL jobs. Ensure that your team is informed about the encryption practices and compliance requirements.</li></ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable Job Bookmark Encryption For Glue ETL Jobs,"Enabling job bookmark encryption for AWS Glue ETL (Extract, Transform, Load) jobs ensures that job bookmarks, which track the progress and state of ETL jobs, are encrypted. This protects sensitive tracking information from unauthorized access and ensures compliance with data protection and privacy requirements.","<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Without encryption, job bookmarks used by Glue ETL jobs are stored in plaintext, potentially exposing sensitive information about job progress and state to unauthorized individuals.</li><li><strong>Compliance Issues:</strong> Many regulatory and industry standards require encryption of data, including metadata and tracking information. Failing to encrypt job bookmarks can result in non-compliance with these standards, leading to potential legal and financial consequences.</li><li><strong>Increased Security Risk:</strong> Unencrypted job bookmarks can be exploited by attackers to gain insights into ETL job progress, potentially aiding in the compromise or disruption of data workflows.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Verify Encryption Settings:</strong> Confirm that encryption settings are correctly applied by checking the job bookmark configuration in the Glue Console. Ensure that job bookmarks for the ETL jobs are encrypted according to your settings.</li><li><strong>Update Documentation:</strong> Update your internal documentation to reflect the encryption settings for job bookmarks associated with Glue ETL jobs. Ensure that your team is aware of the encryption practices and compliance requirements.</li></ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable S3 Encryption For Glue ETL Jobs,"Enabling S3 encryption for AWS Glue ETL (Extract, Transform, Load) jobs ensures that all data stored in Amazon S3, including intermediate and output files used by Glue jobs, is encrypted. This protects sensitive data at rest from unauthorized access and ensures compliance with data protection and privacy requirements.","<ul class=""list-disc pl-4""><li><strong>Data Exposure Risk:</strong> Without encryption, data stored in Amazon S3 is saved in plaintext, potentially exposing sensitive information if accessed by unauthorized individuals.</li><li><strong>Compliance Issues:</strong> Many regulatory and industry standards require encryption of data at rest. Failing to encrypt data stored in S3 can lead to non-compliance with these standards, resulting in potential legal and financial consequences.</li><li><strong>Increased Security Risk:</strong> Unencrypted data in S3 can be exploited by attackers who gain access to your S3 buckets, potentially leading to data breaches or unauthorized access to sensitive information.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Apply Bucket Encryption:</strong> Ensure that S3 buckets used by the Glue ETL jobs have encryption enabled. Navigate to the S3 console, select the relevant bucket, and configure bucket-level encryption settings.</li><li><strong>Set Default Encryption:</strong> Configure default encryption for the bucket to ensure all objects stored in the bucket are automatically encrypted.</li><li><strong>Verify Encryption Settings:</strong> Confirm that S3 encryption is properly configured by checking the encryption status of objects in your S3 buckets. Ensure that data being written by Glue ETL jobs is encrypted according to your settings.</li><li><strong>Update Documentation:</strong> Update your internal documentation to reflect the encryption settings for S3 storage associated with Glue ETL jobs. Ensure that your team is aware of the encryption practices and compliance requirements.</li></ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable GuardDuty,"Enabling Amazon GuardDuty provides continuous monitoring for malicious or unauthorized behavior and anomalous activity in your AWS environment. GuardDuty uses machine learning, anomaly detection, and integrated threat intelligence to identify potential security threats and vulnerabilities, enhancing your overall security posture.","<ul class=""list-disc pl-4""><li><strong>Unidentified Threats:</strong> Without GuardDuty, your AWS environment may lack continuous monitoring for security threats, increasing the risk of undetected malicious or unauthorized activities.</li><li><strong>Delayed Incident Detection:</strong> Absence of GuardDuty can result in delayed detection of security incidents, potentially allowing attackers more time to compromise systems or exfiltrate data.</li><li><strong>Compliance Issues:</strong> Many regulatory and industry standards require monitoring and threat detection. Failing to use GuardDuty could result in non-compliance with these standards, leading to potential legal and financial consequences.</li><li><strong>Increased Risk of Data Breaches:</strong> Without proper threat detection, there is a higher risk of data breaches or unauthorized access to sensitive information, which can damage your organization’s reputation and erode customer trust.</li></ul>",MEDIUM,,"Ensure that Amazon GuardDuty service is currently enabled in all regions in order to protect your AWS environment and infrastructure (AWS accounts and resources, IAM credentials, guest operating systems, applications, etc) against security threats. AWS GuardDuty is a managed threat detection service that continuously monitors your VPC flow logs, AWS CloudTrail event logs and DNS logs for malicious or unauthorized behavior. The service monitors for activity such as unusual API calls, potentially compromised EC2 instances or potentially unauthorized deployments that indicate a possible AWS account compromise. AWS GuardDuty operates entirely on Amazon Web Services infrastructure and does not affect the performance or reliability of your applications. The service does not require any software agents, sensors or network appliances.",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-200: Information Exposure,cloud
GuardDuty High-Severity Findings Detected,"With GuardDuty findings you can evaluate your AWS infrastructure (AWS accounts and resources, IAM user passwords, API keys, guest operating systems, applications, etc) in an automated way, without the heavy lifting of additional security hardware or software to deploy and maintain.","<ul class=""list-disc pl-4""><li><strong>Critical Security Threats:</strong> High-Severity findings represent significant security risks, such as compromised instances, unauthorized access attempts, or potentially malicious activities within your AWS environment.</li><li><strong>Immediate Action Required:</strong> Failure to promptly address High-Severity findings can lead to exploitation of vulnerabilities, data breaches, or further compromise of sensitive information.</li><li><strong>Compliance Risks:</strong> Many regulatory and industry standards mandate timely response to security threats. Neglecting High-Severity findings may result in non-compliance and potential legal or financial repercussions.</li></ul>",MEDIUM,,"Check for AWS GuardDuty findings and resolve them step by step to ensure that your AWS infrastructure is protected against security threats. Amazon GuardDuty is a managed threat detection service that continuously monitors your VPC flow logs, CloudTrail event logs and DNS logs for malicious or unauthorized behavior. When GuardDuty detects a suspicious or unexpected behavior in your AWS account, it generates a finding. A finding is a notification that contains information about a potential security threat identified by the GuardDuty service. The finding details includes data about the finding actor, the AWS resource(s) involved in the suspicious activity, the time when the activity occurred and so on. The GuardDuty findings are available within your Cloud Conformity account as result of Real-Time Threat Monitoring and Analysis (RTMA) integration with Amazon GuardDuty service. With RTMA - GuardDuty integration, the findings are highlighted on your Cloud Conformity dashboard and alert notifications are sent (based on the severity level) via established communication channels in real-time. The communication channels for sending finding alert notifications can be easily configured within your Cloud Conformity account. The list of supported communication channels are Email, SMS, Slack, JIRA, PagerDuty and ServiceNow.",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-200: Information Exposure,cloud
MFA Device Deactivated,"The Multi-Factor Authentication (MFA) device associated with an AWS Identity and Access Management (IAM) user has been deactivated. MFA adds an extra layer of security to user accounts by requiring not only a password but also a second factor, such as a code generated by an MFA device. When an MFA device is deactivated, it can lead to security vulnerabilities because it removes the additional layer of protection that helps to prevent unauthorized access.","<ul class=""list-disc pl-4""><li><strong>Reduced Security:</strong> The deactivation of an MFA device lowers the security posture of the IAM user account, making it more vulnerable to unauthorized access. An attacker who obtains the user's password could gain access without needing the MFA code.</li><li><strong>Compliance Issues:</strong> Many security standards and compliance frameworks require the use of MFA for sensitive accounts. Deactivating MFA might result in non-compliance with these standards.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Reactivate MFA:</strong> Immediately reactivate the MFA device for the affected IAM user to restore the additional layer of security. Follow AWS documentation to re-enable MFA.</li><li><strong>Review Access:</strong> Audit the account activity to ensure that there has been no unauthorized access during the period when MFA was deactivated.</li><li><strong>Update Policies:</strong> Ensure that IAM policies enforce MFA for sensitive operations or privileged roles to maintain a high level of security.</li></ul>",6,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
Root Account Activity,"Root account activity refers to actions taken using the AWS root account, which has the highest level of permissions and can access all AWS resources and services. Unauthorized or suspicious activity involving the root account poses a significant security risk because it can lead to complete control over the AWS environment.","<ul class=""list-disc pl-4""><li><strong>Security Risk:</strong> Unauthorized access or misuse of the root account can lead to severe security breaches, including full control over the AWS environment. This can result in data theft, alteration, deletion, or disruption of services.</li><li><strong>Compliance Issues:</strong> Many security standards and compliance frameworks require strict controls over root account access. Unauthorized root account activity could lead to non-compliance with these standards.</li><li><strong>Operational Disruption:</strong> Misuse of the root account can impact the availability and integrity of AWS resources, potentially causing significant operational disruptions.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Reactivate MFA:</strong> Immediately reactivate the MFA device for the affected IAM user to restore the additional layer of security. Follow AWS documentation to re-enable MFA.</li><li><strong>Review Access:</strong> Audit the account activity to ensure that there has been no unauthorized access during the period when MFA was deactivated.</li><li><strong>Update Policies:</strong> Ensure that IAM policies enforce MFA for sensitive operations or privileged roles to maintain a high level of security.</li></ul>",8,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-287: Improper Authentication,cloud
Enable MFA For Root Account,"The vulnerability refers to the situation where Multi-Factor Authentication (MFA) is not enabled for the AWS root account. The root account has unrestricted access to all resources and settings in an AWS environment, making it a critical point of security. Enabling MFA adds an extra layer of protection by requiring not only a password but also a second factor, such as a code generated by an MFA device, to access the account.","<ul class=""list-disc pl-4""><li><strong>Security Risk:</strong> Unauthorized access or misuse of the root account can lead to severe security breaches, including full control over the AWS environment. This can result in data theft, alteration, deletion, or disruption of services.</li><li><strong>Compliance Issues:</strong> Many security standards and compliance frameworks require strict controls over root account access. Unauthorized root account activity could lead to non-compliance with these standards.</li><li><strong>Operational Disruption:</strong> Misuse of the root account can impact the availability and integrity of AWS resources, potentially causing significant operational disruptions.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable MFA for Root Account:</strong> Ensure that Multi-Factor Authentication (MFA) is enabled for the root account to add an additional layer of security.</li><li><strong>Monitor Root Account Activity:</strong> Implement monitoring and alerting for any unusual or unauthorized activity involving the root account. Use AWS CloudTrail and AWS Config to track and audit actions performed by the root user.</li><li><strong>Limit Root Account Use:</strong> Minimize the use of the root account and perform administrative tasks using IAM users with appropriate permissions. Create and use IAM roles with the least privilege necessary.</li><li><strong>Rotate Credentials Regularly:</strong> Regularly rotate the root account password and ensure that it is strong and unique.</li><li><strong>Review Access Policies:</strong> Regularly review and update IAM policies to enforce least privilege principles and prevent unauthorized access.</li></ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-287: Improper Authentication,cloud
Enable Hardware MFA for AWS Root Account,"The vulnerability refers to the situation where a hardware-based Multi-Factor Authentication (MFA) device is not enabled for the AWS root account. Hardware MFA devices provide a higher level of security compared to virtual MFA apps by generating one-time passwords (OTPs) on a physical device. Enabling a hardware MFA device for the root account adds an additional, robust layer of protection against unauthorized access.","<ul class=""list-disc pl-4""><li><strong>Security Risk:</strong> Without hardware MFA, the root account is more vulnerable to attacks if the MFA application or password is compromised. Hardware MFA provides a higher security level and helps protect against unauthorized access.</li><li><strong>Compliance Issues:</strong> Many security standards and compliance frameworks recommend or require the use of hardware-based MFA for highly privileged accounts like the root account. Failure to use hardware MFA may lead to non-compliance.</li><li><strong>Operational Disruption:</strong> Unauthorized access to the root account can lead to severe disruptions, including data breaches, unauthorized changes, and service outages.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Enable Hardware MFA for Root Account:</strong> Immediately configure a hardware MFA device for the root account to enhance security. Follow AWS guidelines for setting up hardware MFA.</li><li><strong>Monitor MFA Configuration:</strong> Regularly check that the hardware MFA device is properly configured and active for the root account.</li><li><strong>Educate Administrators:</strong> Educate account administrators on the importance of hardware MFA and the steps to configure and use hardware MFA devices.</li><li><strong>Review Security Practices:</strong> Ensure that other accounts with significant privileges also use hardware MFA where possible to strengthen overall security.</li></ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-287: Improper Authentication,cloud
IAM Policies With Administrative Privileges,Providing full administrative privileges instead of restricting to the minimum set of permissions can expose your AWS cloud resources to potentially unwanted actions. Trend Micro Cloud One™ – Conformity strongly recommends creating and using IAM policies that implement the Principle of Least Privilege (i.e. providing the minimal set of actions required to perform successfully the desired tasks) instead of using overly permissive policies.,"<ul class=""list-disc pl-4""><li><strong>Security Risk:</strong> Granting administrative privileges through IAM policies can lead to unauthorized access and manipulation of AWS resources. If these policies are assigned to inappropriate users or roles, it can result in severe security breaches, including data theft, alteration, or service disruptions.</li><li><strong>Compliance Issues:</strong> Many security standards and frameworks require the principle of least privilege, which involves granting only the minimum necessary permissions. IAM policies with broad administrative privileges may violate these requirements, leading to non-compliance.</li><li><strong>Operational Disruption:</strong> Administrative access can impact the availability and integrity of resources, potentially causing disruptions to operations, unauthorized changes, or outages.</li></ul>",HIGH,,"Ensure there are no Amazon IAM policies (inline and customer-managed policies) that allow full administrative privileges available in your AWS cloud account, in order to follow the Principle of Least Privilege and provide the IAM users, groups, and roles that use these policies the minimal amount of access required to perform their tasks. An IAM policy that provides full administrative permissions is a policy that contains the following combination of elements: <strong>""Effect"": ""Allow"", ""Action"": ""*"", ""Resource"": ""*""</strong>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,"CWE-274: Permissions, Privileges, and Access Controls",cloud
Inline Policies Allowing Privilege Escalation,"The vulnerability refers to situations where inline IAM (Identity and Access Management) policies are configured in such a way that they allow privilege escalation. Privilege escalation occurs when a user or entity gains more permissions than initially intended, potentially leading to unauthorized access or control over resources. Inline policies with misconfigured permissions can enable users to escalate their privileges, often through resource or action permissions that were not intended.","<ul class=""list-disc pl-4""><li><strong>Security Risk:</strong> Inline policies that permit privilege escalation can lead to unauthorized access and control over AWS resources. Attackers or unauthorized users might exploit these policies to gain elevated permissions, resulting in potential security breaches, data theft, or unauthorized modifications.</li><li><strong>Compliance Issues:</strong> Many security frameworks and standards mandate the principle of least privilege, which involves minimizing permissions to the minimum necessary. Policies that allow privilege escalation can violate this principle, leading to compliance issues.</li><li><strong>Operational Disruption:</strong> Escalated privileges can affect the availability and integrity of resources, potentially causing disruptions, unauthorized changes, or service outages.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Review Inline Policies:</strong> Regularly review inline IAM policies to ensure they do not allow privilege escalation. Verify that permissions are restricted to the minimum necessary for specific tasks.</li><li><strong>Implement Principle of Least Privilege:</strong> Apply the principle of least privilege by granting only the necessary permissions required for users or roles to perform their tasks. Avoid broad permissions that could enable privilege escalation.</li><li><strong>Use Managed Policies:</strong> Where possible, use AWS managed policies or create customer managed policies with defined boundaries to prevent privilege escalation. Managed policies are maintained by AWS and follow best practices for permissions.</li><li><strong>Monitor IAM Activity:</strong> Implement monitoring and alerting to detect any unusual or unauthorized privilege escalation activities. Use AWS CloudTrail and AWS Config to track and audit IAM actions.</li></ul>",8.1,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,"CWE-264: Permissions, Privileges, and Access Controls",cloud
Expired Server Certificates,"Expired server certificates can compromise the security of encrypted communication by no longer providing valid encryption between clients and servers. When a server certificate expires, it can lead to insecure data transmission, where sensitive information might be intercepted or accessed by unauthorized parties. Additionally, users and clients may encounter security warnings or errors when attempting to connect, which can damage trust in the affected server or service. While expired certificates do not directly affect the availability of services, they undermine the integrity and confidentiality of data, making it crucial to regularly monitor and renew certificates to ensure ongoing security and compliance with standards.","<ul class=""list-disc pl-4""><li><strong>Security Risk:</strong> Expired server certificates compromise the security of encrypted communication, potentially allowing attackers to intercept or manipulate data. This could lead to unauthorized access or data breaches.</li><li><strong>Trust Issues:</strong> Clients and users may receive warnings or errors when connecting to servers with expired certificates, leading to reduced trust and credibility of the server or service.</li><li><strong>Operational Disruption:</strong> While expired certificates do not directly affect service availability, they can cause disruptions by preventing secure connections and requiring immediate attention and renewal.</li></ul>",MEDIUM,,Ensure that all the expired SSL/TLS certificates stored in AWS IAM are removed in order to follow IAM security best practices.,6.4,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L,CWE-295: Improper Certificate Validation,cloud
Root User With Access Keys,"Having access keys associated with the root user is a critical security risk. The root user in AWS has unrestricted access to all resources and services within an account, making it a prime target for unauthorized access if its access keys are compromised. Access keys for the root user can be used to perform any action, including sensitive operations like deleting resources or modifying configurations. If these keys are exposed or misused, it can lead to severe security breaches, including unauthorized changes, data loss, and potential service disruptions. To mitigate this risk, it is essential to avoid using access keys for the root user and instead use IAM roles and users with appropriate permissions for day-to-day operations. Regularly audit and remove any existing root access keys to enhance the security of your AWS environment.","<ul class=""list-disc pl-4""><li><strong>Security Risk:</strong> Access keys for the root user can lead to unauthorized access and control over all AWS resources, potentially resulting in data breaches, unauthorized modifications, or resource deletions.</li><li><strong>Compliance Issues:</strong> Using root user access keys may violate security best practices and compliance standards, which generally recommend avoiding the use of such keys and adhering to the principle of least privilege.</li><li><strong>Operational Disruption:</strong> Unauthorized access via root user keys can lead to severe operational disruptions, including service outages, data loss, and extensive configuration changes.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Remove Access Keys for Root User:</strong> Immediately delete any existing access keys associated with the root user. Access keys should not be used with the root account.</li><li><strong>Use IAM Roles and Users:</strong> Implement IAM roles and users with specific permissions for daily operations instead of using the root user. Ensure that permissions adhere to the principle of least privilege.</li><li><strong>Enable MFA for Root User:</strong> Ensure that Multi-Factor Authentication (MFA) is enabled for the root user to add an additional layer of security.</li><li><strong>Regular Audits:</strong> Regularly audit IAM configurations and root account activities to ensure compliance with best practices and identify any unauthorized changes.</li></ul>",8.9,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-269: Improper Privilege Management,cloud
Password Policy Expires Passwords After More Than 90 Days,"This vulnerability occurs when an AWS account's password policy requires passwords to expire after a period exceeding 90 days. While setting a password expiration period helps prevent the use of compromised credentials, having an excessively long expiration time can increase the risk of unauthorized access.","<ul class=""list-disc pl-4""><li><strong>Increased Risk of Unauthorized Access:</strong> If an attacker compromises a user's password, they can maintain access for an extended period, potentially leading to data breaches or other security incidents.</li><li><strong>Reduced Security Posture:</strong> A longer password expiration period can weaken the overall security of the AWS account, making it more susceptible to attacks.</li><li><strong>User Inconvenience:</strong> Frequent password changes can be cumbersome for users and may lead to errors or reduced productivity.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Set a Shorter Password Expiration Period:</strong> Consider reducing the maximum password age to 90 days or less to minimize the risk of compromised credentials.</li><li><strong>Implement Additional Security Measures:</strong> Employ other security controls such as multi-factor authentication (MFA), access controls, and regular security assessments to enhance the overall security posture of the AWS account.</li></ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-259: Weak Password Policy,cloud
IAM Weak Password Policy,"This vulnerability occurs when an AWS Identity and Access Management (IAM) policy imposes weak password requirements, making it easier for attackers to compromise user accounts. Weak password policies typically involve insufficient length, lack of complexity requirements, or short expiration periods.","<ul class=""list-disc pl-4""><li><strong>Increased Risk of Unauthorized Access:</strong> Weak passwords can be easily guessed or brute-forced, allowing unauthorized individuals to gain access to AWS resources and potentially sensitive data.</li><li><strong>Data Breaches and Financial Loss:</strong> Compromised accounts can lead to data breaches, identity theft, and financial losses.</li><li><strong>Service Disruptions:</strong> Attackers can use compromised accounts to disrupt AWS services or launch malicious activities.</li></ul>",MEDIUM,,"<ul class=""list-disc pl-4""><li><strong>Implement Strong Password Requirements:</strong> Enforce a minimum password length of 14 characters or more, require a combination of uppercase and lowercase letters, numbers, and special characters, and avoid using common or easily guessable passwords.</li><li><strong>Set Appropriate Password Expiration Policies:</strong> Require regular password changes to prevent the use of compromised credentials, but avoid excessively short expiration periods that can be burdensome for users.</li><li><strong>Enable Multi-Factor Authentication (MFA):</strong> Require MFA for all IAM users to add an extra layer of security and make it more difficult for attackers to gain unauthorized access.</li><li><strong>Use Password Managers:</strong> Encourage users to use password managers to generate, store, and manage strong, unique passwords for their AWS accounts and other online services.</li></ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-259: Weak Password Policy,cloud
IAM Policies Should Attached Only To Groups Or Roles,IAM Policies Should Attached Only To Groups Or Roles,"<ul class=""list-disc pl-4""><li><strong>Increased Risk of Unauthorized Access:</strong> Directly attaching policies to users can make it challenging to manage and revoke permissions when necessary, increasing the risk of unauthorized access to AWS resources.</li><li><strong>Difficulty in Managing Permissions:</strong> As users change roles or responsibilities, it can be time-consuming and error-prone to modify individual policies.</li><li><strong>Lack of Centralized Control:</strong> Attaching policies directly to users can make it difficult to enforce consistent security policies across the organization.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Use IAM groups and roles:</strong> Create IAM groups and roles to organize users based on their roles and responsibilities. Attach policies to these groups and roles, rather than directly to individual users.</li> <li><strong>Leverage least privilege principle:</strong> Grant users only the minimum permissions necessary to perform their job functions. This helps to reduce the risk of unauthorized access and data breaches.</li> <li><strong>Regularly review and update IAM policies:</strong> Monitor IAM policies to ensure they align with current security best practices and address any vulnerabilities.</li> <li><strong>Implement a password policy:</strong> Enforce a strong password policy to protect user accounts and prevent unauthorized access.</li> <li><strong>Use multi-factor authentication (MFA):</strong> Require MFA for all IAM users to add an extra layer of security and make it more difficult for attackers to gain unauthorized access.</li> </ul>",7,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:M,CWE-269: Improper Authorization,cloud
Certificates With Weak Key Length,"This vulnerability occurs when SSL/TLS certificates use weak cryptographic keys, making them susceptible to attacks that can compromise the security of encrypted communications. Weak key lengths reduce the computational effort required to crack the encryption, increasing the risk of unauthorized access to sensitive data.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Attackers can intercept and decrypt encrypted communications, exposing sensitive data such as user credentials, financial information, and proprietary business data.</li> <li><strong>Man-in-the-middle attacks:</strong> Attackers can position themselves between clients and servers, eavesdropping on and manipulating communications.</li> <li><strong>Loss of trust:</strong> Compromised certificates can damage the reputation of organizations and erode user trust.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Use strong key lengths:</strong> Ensure that all certificates use key lengths of at least 2048 bits, or preferably 4096 bits or longer. This makes it significantly more difficult for attackers to crack the encryption.</li> <li><strong>Update certificates regularly:</strong> Regularly renew certificates to prevent them from expiring and to ensure that they use the latest security standards.</li> <li><strong>Verify certificate authenticity:</strong> Check the certificate chain to ensure that it is issued by a trusted certificate authority (CA). Use tools like OpenSSL or browser extensions to verify certificate authenticity.</li> <li><strong>Implement HTTPS Everywhere:</strong> Encourage the use of HTTPS for all web traffic to protect sensitive data from being intercepted and decrypted.</li> <li><strong>Monitor for vulnerabilities:</strong> Keep track of known vulnerabilities related to SSL/TLS protocols and cryptographic algorithms, and update your systems accordingly.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-327: Use of a Weak Algorithm or Cryptographic Key,cloud
No Alternate Contacts Configured For Security,"This vulnerability arises when there are no designated alternative contacts specified for security purposes within an AWS account. Alternate contacts serve as a crucial backup, providing a secondary point of contact in case the primary security contact becomes unavailable or compromised. The absence of alternate contacts can significantly hinder an organization's ability to respond effectively to security incidents, potentially leading to severe consequences such as delayed responses to threats, loss of control over the account, and non-compliance with industry regulations.","<ul class=""list-disc pl-4""> <li><strong>Delayed response to security incidents:</strong> If the primary security contact is unavailable, there may be a delay in responding to security incidents, which can increase the risk of data breaches or other adverse consequences.</li> <li><strong>Loss of control over the account:</strong> In the event of a security breach, having no alternate contacts can make it difficult to regain control of the account and mitigate the damage.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to have multiple points of contact for security purposes. Failure to comply can result in fines or penalties.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Specify alternate contacts:</strong> Clearly define alternate contacts who have the authority to access and manage the AWS account in case of emergencies.</li> <li><strong>Provide contact information:</strong> Ensure that the alternate contacts have up-to-date contact information, including email addresses and phone numbers.</li> <li><strong>Regularly review and update contact information:</strong> Periodically review and update contact information to ensure it remains accurate and accessible.</li> <li><strong>Consider using a security information and event management (SIEM) solution:</strong> A SIEM can automate the notification process and provide a centralized view of security events.</li> <li><strong>Implement a security awareness training program:</strong> Educate employees about the importance of security and the procedures to follow in case of incidents.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-246: Missing or Incomplete Security Configuration,cloud
Allow IAM Users To Change Password,"This vulnerability occurs when IAM users are allowed to change their own passwords without additional security measures. While allowing users to change their passwords can be convenient, it also introduces risks if not implemented properly.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> If an attacker compromises a user's password, they can gain access to the user's account and potentially sensitive data.</li> <li><strong>Difficulty in enforcing password policies:</strong> Allowing users to change their passwords without oversight can make it difficult to enforce strong password policies.</li> <li><strong>Social engineering attacks:</strong> Attackers may use social engineering techniques to trick users into revealing their passwords.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable multi-factor authentication (MFA):</strong> Require MFA for all IAM users to add an extra layer of security and make it more difficult for attackers to gain unauthorized access.</li> <li><strong>Set strong password policies:</strong> Enforce a minimum password length, require a combination of uppercase and lowercase letters, numbers, and special characters, and avoid using common or easily guessable passwords.</li> <li><strong>Limit password reuse:</strong> Prevent users from reusing passwords within a certain timeframe.</li> <li><strong>Require password changes at regular intervals:</strong> Set a reasonable password expiration period to ensure that passwords are updated periodically.</li> <li><strong>Monitor password changes:</strong> Keep track of password changes and investigate any suspicious activity.</li> </ul>",4.6,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N,CWE-259: Weak Password Policy,cloud
Server Certificates Vulnerable to Heartbleed Attack,"The Heartbleed vulnerability is a serious flaw in the OpenSSL cryptographic library that could allow attackers to steal sensitive information from secure web servers. It affects versions of OpenSSL prior to 1.0.1.10. This vulnerability allows an attacker to obtain data directly from the server's memory, potentially exposing sensitive information such as private keys, passwords, and user data.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Attackers can steal sensitive information such as private keys, passwords, and user data, leading to data breaches and unauthorized access.</li> <li><strong>Man-in-the-middle attacks:</strong> Attackers can intercept and decrypt encrypted communications, potentially compromising the integrity of online transactions.</li> <li><strong>Loss of trust:</strong> Compromised certificates can damage the reputation of organizations and erode user trust.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Update OpenSSL:</strong> Ensure that all affected servers are running OpenSSL version 1.0.1.10 or later to patch the Heartbleed vulnerability.</li> <li><strong>Revoke and reissue certificates:</strong> Revoke any certificates that may have been compromised due to the Heartbleed attack and reissue them with new private keys.</li> <li><strong>Implement strong security practices:</strong> Use strong cryptographic algorithms, regularly update software, and monitor for vulnerabilities to protect against future attacks.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a successful Heartbleed attack.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-327: Use of a Weak Algorithm or Cryptographic Key,cloud
Root Account Active Signing Certificates,This vulnerability occurs when the root account in an AWS account has active signing certificates. The root account is the most powerful account in AWS and should be used with extreme caution. Allowing the root account to have active signing certificates can increase the risk of unauthorized access and data breaches.,"<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> If an attacker compromises the root account's signing certificates, they can gain full control over the AWS account and all its resources.</li> <li><strong>Data breaches:</strong> Compromised signing certificates can be used to create new IAM users, modify existing policies, and access sensitive data.</li> <li><strong>Loss of control over the account:</strong> An attacker with access to the root account's signing certificates can completely take over an AWS account, making it difficult to regain control.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Disable root account access:</strong> Disable the root account's password and access keys to prevent unauthorized use.</li> <li><strong>Use IAM users and roles:</strong> Create IAM users and roles with the necessary permissions to manage AWS resources, avoiding the use of the root account whenever possible.</li> <li><strong>Implement multi-factor authentication (MFA):</strong> Require MFA for all IAM users, including the root account, to add an extra layer of security.</li> <li><strong>Rotate signing certificates regularly:</strong> Regularly rotate signing certificates to reduce the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-269: Improper Authorization,cloud
Lack Of Key Rotation For 90 Days,"This vulnerability occurs when cryptographic keys used for encryption and decryption are not rotated within a reasonable timeframe, typically every 90 days or less. Over time, cryptographic keys can become compromised or weakened, making it easier for attackers to decrypt encrypted data.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> If compromised keys are used to decrypt data, sensitive information can be exposed to unauthorized individuals.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require regular key rotation to protect sensitive data. Failure to comply can result in fines or penalties.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Implement a key rotation policy:</strong> Establish a clear policy for rotating cryptographic keys at regular intervals, typically every 90 days or less.</li> <li><strong>Automate key rotation:</strong> Use tools or scripts to automate the key rotation process, ensuring that it is performed consistently and efficiently.</li> <li><strong>Store keys securely:</strong> Store cryptographic keys in a secure location, such as a hardware security module (HSM), to protect them from unauthorized access.</li> <li><strong>Monitor for key usage:</strong> Track the usage of cryptographic keys to identify any anomalies or signs of compromise.</li> <li><strong>Regularly review and update security practices:</strong> Stay informed about the latest security best practices and update your key rotation policies and procedures accordingly.</li> </ul>",5.3,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L,CWE-327: Use of a Weak Algorithm or Cryptographic Key,cloud
Found Pending Inspector Findings,This vulnerability occurs when there are unresolved inspector findings within an AWS account. Inspector is a security assessment service that identifies potential security vulnerabilities in AWS resources. Pending findings indicate issues that require attention and remediation to mitigate security risks.,"<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Unresolved findings can expose vulnerabilities that could be exploited by attackers to gain unauthorized access to AWS resources.</li> <li><strong>Data breaches:</strong> If vulnerabilities are not addressed, they could lead to data breaches and the loss of sensitive information.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to address security vulnerabilities promptly. Failure to do so can result in fines or penalties.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Review inspector findings regularly:</strong> Monitor inspector findings and prioritize addressing critical vulnerabilities first.</li> <li><strong>Investigate and remediate findings:</strong> Thoroughly investigate each finding to understand the underlying cause and take appropriate action to remediate the issue.</li> <li><strong>Update security configurations:</strong> Modify security configurations to address the identified vulnerabilities and prevent future occurrences.</li> <li><strong>Implement a vulnerability management process:</strong> Establish a process for identifying, assessing, and remediating vulnerabilities on a regular basis.</li> <li><strong>Stay informed about security best practices:</strong> Keep up-to-date with the latest security trends and best practices to effectively address vulnerabilities.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-200: Information Exposure,cloud
Enable Inspector2,"This vulnerability occurs when Inspector2, a newer version of the Amazon Inspector security assessment service, is not enabled in an AWS account. Inspector2 offers enhanced features and capabilities for identifying and assessing security vulnerabilities in AWS resources.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Failure to enable Inspector2 can result in missed vulnerabilities that could be exploited by attackers.</li> <li><strong>Data breaches:</strong> Unidentified vulnerabilities can lead to data breaches and the loss of sensitive information.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to use appropriate security tools to identify and address vulnerabilities. Failure to enable Inspector2 can result in non-compliance.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable Inspector2:</strong> Activate Inspector2 in your AWS account to benefit from its enhanced features and capabilities.</li> <li><strong>Configure Inspector2 settings:</strong> Customize Inspector2 settings to match your specific security requirements and resource types.</li> <li><strong>Review and address findings:</strong> Regularly review Inspector2 findings and take prompt action to remediate identified vulnerabilities.</li> <li><strong>Stay informed about Inspector2 updates:</strong> Keep up-to-date with the latest features and improvements in Inspector2 to ensure you are using the most effective security tool.</li> </ul>",4,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N,CWE-200: Information Exposure,cloud
Found Pending Inspector2 Findings,"This vulnerability occurs when there are unresolved inspector findings within an AWS account using Inspector2, a newer version of the Amazon Inspector security assessment service. Inspector2 offers enhanced features and capabilities for identifying and assessing security vulnerabilities in AWS resources. Pending findings indicate issues that require attention and remediation to mitigate security risks.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Unresolved findings can expose vulnerabilities that could be exploited by attackers to gain unauthorized access to AWS resources.</li> <li><strong>Data breaches:</strong> If vulnerabilities are not addressed, they could lead to data breaches and the loss of sensitive information.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to address security vulnerabilities promptly. Failure to do so can result in fines or penalties.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Review inspector findings regularly:</strong> Monitor inspector findings and prioritize addressing critical vulnerabilities first.</li> <li><strong>Investigate and remediate findings:</strong> Thoroughly investigate each finding to understand the underlying cause and take appropriate action to remediate the issue.</li> <li><strong>Update security configurations:</strong> Modify security configurations to address the identified vulnerabilities and prevent future occurrences.</li> <li><strong>Implement a vulnerability management process:</strong> Establish a process for identifying, assessing, and remediating vulnerabilities on a regular basis.</li> <li><strong>Stay informed about security best practices:</strong> Keep up-to-date with the latest security trends and best practices to effectively address vulnerabilities.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-200: Information Exposure,cloud
Enable MSK Cluster Encryption At Rest using CMK,"This vulnerability occurs when Amazon Managed Streaming for Kafka (MSK) clusters are not encrypted at rest using a Customer Master Key (CMK). Encryption at rest helps protect data from unauthorized access, even if the underlying storage is compromised.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> If an attacker gains unauthorized access to the underlying storage, they could potentially decrypt and exfiltrate sensitive data.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to do so can result in fines or penalties.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable encryption at rest:</strong> Configure your MSK clusters to use a CMK for encryption at rest.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated CMK for your MSK clusters to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> <li><strong>Stay informed about security best practices:</strong> Keep up-to-date with the latest security trends and best practices to protect your MSK clusters.</li> </ul>",5,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L,CWE-327: Use of a Weak Algorithm or Cryptographic Key,cloud
Enable In-Transit Encryption For Kafka Clusters,This vulnerability occurs when data transmitted between Kafka clients and brokers is not encrypted in transit. This can expose sensitive data to eavesdropping and interception attacks.,"<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Sensitive data transmitted over the network can be intercepted and decrypted by attackers.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt data in transit. Failure to do so can result in fines or penalties.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable SSL/TLS encryption:</strong> Configure your Kafka clusters to use SSL/TLS encryption for all client-broker communication.</li> <li><strong>Use strong cryptographic algorithms:</strong> Choose strong cryptographic algorithms and ciphers for SSL/TLS encryption.</li> <li><strong>Verify certificate authenticity:</strong> Ensure that the certificates used for SSL/TLS are issued by trusted certificate authorities.</li> <li><strong>Implement client authentication:</strong> Require client authentication to verify the identity of clients connecting to the Kafka cluster.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-327: Use of a Weak Algorithm or Cryptographic Key,cloud
Enable Mutual TLS Authentication for Kafka Clients,"This vulnerability occurs when Kafka clients are not configured to use mutual TLS authentication. Mutual TLS authentication requires both the client and the server to present valid certificates, providing a more robust security mechanism than traditional one-way authentication. Without mutual TLS authentication, there is a risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Without mutual TLS authentication, attackers may be able to impersonate legitimate clients and gain access to sensitive data.</li> <li><strong>Data breaches:</strong> If unauthorized clients gain access to the Kafka cluster, they can potentially exfiltrate sensitive data.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement strong authentication mechanisms. Failure to use mutual TLS authentication can result in non-compliance.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable mutual TLS authentication:</strong> Configure your Kafka clients and brokers to use mutual TLS authentication.</li> <li><strong>Use strong cryptographic algorithms:</strong> Choose strong cryptographic algorithms and ciphers for SSL/TLS encryption.</li> <li><strong>Verify certificate authenticity:</strong> Ensure that the certificates used for mutual TLS authentication are issued by trusted certificate authorities.</li> <li><strong>Implement client authentication:</strong> Require client authentication to verify the identity of clients connecting to the Kafka cluster.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-327: Use of a Weak Algorithm or Cryptographic Key,cloud
Publicly Accessible Kafka Clusters,"This vulnerability occurs when Kafka clusters are accessible from the public internet without proper access controls. Publicly accessible Kafka clusters can be easily discovered and exploited by attackers, allowing them to gain unauthorized access to sensitive data.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible Kafka clusters can be discovered and exploited by attackers, allowing them to gain unauthorized access to sensitive data.</li> <li><strong>Data breaches:</strong> If attackers gain access to a Kafka cluster, they can potentially exfiltrate sensitive data.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible Kafka clusters can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Restrict access:</strong> Limit access to Kafka clusters to authorized users and applications using security groups, network ACLs, or VPC peering.</li> <li><strong>Use private VPCs:</strong> Place Kafka clusters in private VPCs to prevent direct access from the public internet.</li> <li><strong>Implement client authentication:</strong> Require client authentication to verify the identity of clients connecting to the Kafka cluster.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.2,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-269: Improper Authorization ,cloud
Upgrade MSK Clusters To Latest Version,"This vulnerability occurs when MSK clusters are not running the latest version, leaving them vulnerable to known security vulnerabilities and performance issues. Outdated MSK clusters may have security flaws that can be exploited by attackers.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Outdated MSK clusters may contain vulnerabilities that can be exploited by attackers to gain unauthorized access.</li> <li><strong>Data breaches:</strong> If vulnerabilities are exploited, attackers could potentially exfiltrate sensitive data.</li> <li><strong>Performance issues:</strong> Older versions of MSK may have performance limitations or inefficiencies that can impact the availability and reliability of your Kafka applications.</li> <li><strong>Compliance risks:</strong> Some compliance frameworks require organizations to use the latest versions of software to maintain a secure environment.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Stay up-to-date with MSK versions:</strong> Regularly review the latest MSK versions and upgrade your clusters to the latest supported version.</li> <li><strong>Test upgrades thoroughly:</strong> Test upgrades in a non-production environment before applying them to production clusters to ensure compatibility and avoid disruptions.</li> <li><strong>Monitor for security vulnerabilities:</strong> Keep an eye out for security advisories and patches related to MSK to address known vulnerabilities promptly.</li> <li><strong>Implement a patching process:</strong> Establish a process for applying security patches and updates to MSK clusters in a timely manner.</li> <li><strong>Consider using automated patching tools:</strong> Utilize automated patching tools to streamline the upgrade process and reduce the risk of human error.</li> </ul>",6,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE-1328: Security Version Number Mutable to Older Versions,cloud
Unrestricted Access To Apache Kafka Brokers,"This vulnerability occurs when Apache Kafka brokers are accessible from the public internet without proper access controls. Publicly accessible Kafka brokers can be easily discovered and exploited by attackers, allowing them to gain unauthorized access to sensitive data.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible Kafka brokers can be discovered and exploited by attackers, allowing them to gain unauthorized access to sensitive data.</li> <li><strong>Data breaches:</strong> If attackers gain access to a Kafka cluster, they can potentially exfiltrate sensitive data.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible Kafka brokers can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Restrict access:</strong> Limit access to Kafka brokers to authorized users and applications using security groups, network ACLs, or VPC peering.</li> <li><strong>Use private VPCs:</strong> Place Kafka brokers in private VPCs to prevent direct access from the public internet.</li> <li><strong>Implement client authentication:</strong> Require client authentication to verify the identity of clients connecting to the Kafka cluster.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-287: Improper Authentication,cloud
Enable Kinesis Data Firehose Delivery Stream Encryption,"This vulnerability occurs when Kinesis Data Firehose delivery streams are not encrypted, leaving sensitive data exposed to unauthorized access. Encryption helps protect data from unauthorized access, even if the underlying storage or network is compromised.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> If attackers gain unauthorized access to a delivery stream, they can potentially exfiltrate sensitive data.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data. Failure to do so can result in fines or penalties.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable encryption:</strong> Configure your Kinesis Data Firehose delivery streams to use encryption.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your delivery streams to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.2,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-327: Use of a Weak Algorithm or Cryptographic Key,cloud
Encrypte Kinesis Stream Using Customer Master Keys (CMKs),"This vulnerability occurs when Kinesis data streams are not encrypted using Customer Master Keys (CMKs). Encryption helps protect sensitive data from unauthorized access, even if the underlying storage or network is compromised.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> If attackers gain unauthorized access to a Kinesis stream, they can potentially exfiltrate sensitive data.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data. Failure to do so can result in fines or penalties.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable encryption:</strong> Configure your Kinesis data streams to use encryption.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your Kinesis streams to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.2,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-327: Use of a Weak Algorithm or Cryptographic Key,cloud
KMS Cross Account Access Allowed,"This vulnerability occurs when a KMS key is configured to allow cross-account access. Cross-account access enables other AWS accounts to use the KMS key for encryption and decryption, which can increase the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> If an attacker gains access to another AWS account with permission to use the KMS key, they can use it to encrypt and decrypt data.</li> <li><strong>Data breaches:</strong> Compromised KMS keys can lead to data breaches if sensitive data is encrypted using them.</li> <li><strong>Loss of control over the key:</strong> Once cross-account access is granted, it can be difficult to revoke or restrict access in the future.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to control access to sensitive data. Allowing cross-account access can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Restrict cross-account access:</strong> Configure KMS keys to allow access only from specific AWS accounts or IAM roles that have been verified and trusted.</li> <li><strong>Use IAM roles:</strong> Grant access to KMS keys using IAM roles rather than individual users to improve management and control.</li> <li><strong>Implement least privilege principle:</strong> Grant IAM roles only the minimum permissions necessary to perform their tasks.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-269: Improper Authorization,cloud
KMS Customer Master Key Pending Deletion,This vulnerability occurs when a KMS Customer Master Key (CMK) is in a pending deletion state. A pending deletion CMK is scheduled for deletion but can still be used for encryption and decryption. This can increase the risk of unauthorized access and data breaches if the CMK is not deleted as planned.,"<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> If a pending deletion CMK is not deleted as planned, it can be used by unauthorized individuals to encrypt and decrypt data.</li> <li><strong>Data breaches:</strong> Compromised KMS keys can lead to data breaches if sensitive data is encrypted using them.</li> <li><strong>Loss of control over the key:</strong> Once a CMK is scheduled for deletion, it can be difficult to recover or restore it if needed.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to manage cryptographic keys securely. Failure to delete pending CMK can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Review pending deletion CMKs regularly:</strong> Monitor the status of pending deletion CMKs and ensure that they are deleted according to the planned schedule.</li> <li><strong>Delete CMKs promptly:</strong> If a CMK is no longer needed, delete it as soon as possible to reduce the risk of unauthorized access.</li> <li><strong>Implement a key management process:</strong> Establish a process for managing cryptographic keys, including creation, rotation, and deletion.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.4,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,CWE-269: Improper Authorization,cloud
KMS Key Exposed,"This vulnerability occurs when a KMS Customer Master Key (CMK) is exposed to unauthorized access, either through accidental disclosure or due to a security breach. Exposed KMS keys can be used to encrypt and decrypt data, compromising the confidentiality and integrity of sensitive information.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Exposed KMS keys can be used by unauthorized individuals to encrypt and decrypt data.</li> <li><strong>Data breaches:</strong> Compromised KMS keys can lead to data breaches if sensitive data is encrypted using them.</li> <li><strong>Loss of control over the key:</strong> Once a KMS key is exposed, it can be difficult to recover or restore it.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect cryptographic keys securely. Exposing KMS keys can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Protect KMS key material:</strong> Store KMS key material securely and avoid exposing it to unauthorized individuals.</li> <li><strong>Implement strong access controls:</strong> Restrict access to KMS keys to authorized users and applications.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> <li><strong>Regularly rotate KMS keys:</strong> Rotate KMS keys periodically to reduce the risk of compromise.</li> <li><strong>Use a key management system:</strong> Employ a robust key management system to manage and protect KMS keys effectively.</li> </ul>",8.2,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
KMS Key Rotation Not Enabled,This vulnerability occurs when KMS Customer Master Keys (CMKs) are not configured for automatic rotation. Regular key rotation helps mitigate the risk of compromise and ensures that cryptographic keys remain strong over time.,"<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> If a KMS key is compromised, it can be used to encrypt and decrypt data, potentially leading to unauthorized access.</li> <li><strong>Data breaches:</strong> Compromised KMS keys can lead to data breaches if sensitive data is encrypted using them.</li> <li><strong>Loss of control over the key:</strong> Once a KMS key is compromised, it can be difficult to recover or restore it.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to rotate cryptographic keys regularly. Failure to do so can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable key rotation:</strong> Configure your KMS CMKs for automatic rotation at regular intervals.</li> <li><strong>Set appropriate rotation schedules:</strong> Determine the appropriate rotation frequency based on your organization's specific security requirements and compliance standards.</li> <li><strong>Monitor key rotation status:</strong> Regularly review the status of key rotation to ensure that it is occurring as planned.</li> <li><strong>Implement a key management process:</strong> Establish a process for managing cryptographic keys, including creation, rotation, and deletion.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",5.3,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L,CWE-327: Use of a Weak Algorithm or Cryptographic Key,cloud
Unused Customer Master Key,This vulnerability occurs when a KMS Customer Master Key (CMK) is no longer in use but is still active. Unused CMKs can increase the risk of unauthorized access and data breaches if they are not properly managed.,"<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> If an unused CMK is not deleted, it can be accidentally or maliciously used to encrypt and decrypt data.</li> <li><strong>Data breaches:</strong> Compromised KMS keys can lead to data breaches if sensitive data is encrypted using them.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to manage cryptographic keys securely. Unused CMKs can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Identify unused CMKs:</strong> Regularly review your KMS environment to identify CMKs that are no longer in use.</li> <li><strong>Delete unused CMKs:</strong> Delete CMKs that are no longer needed to reduce the risk of unauthorized access.</li> <li><strong>Implement a key management process:</strong> Establish a process for managing cryptographic keys, including creation, rotation, and deletion.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",4.7,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-732: Incorrect Permission Assignment for Critical Resource,cloud
Lambda Functions Resource-Based Policy Set As Public,"This vulnerability occurs when Lambda functions have resource-based policies that grant public access. Public access policies allow anyone with internet access to invoke the Lambda function, potentially exposing sensitive data or enabling unauthorized actions.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible Lambda functions can be invoked by anyone with internet access, allowing unauthorized individuals to access sensitive data or perform malicious actions.</li> <li><strong>Data breaches:</strong> If a Lambda function processes sensitive data and is publicly accessible, the data could be exposed to unauthorized individuals.</li> <li><strong>Denial of service (DoS) attacks:</strong> Publicly accessible Lambda functions can be targeted with DoS attacks, which can disrupt the availability of your applications.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible Lambda functions can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Restrict access:</strong> Configure resource-based policies for Lambda functions to limit access to authorized users or applications.</li> <li><strong>Use VPC endpoints:</strong> Place Lambda functions in a private VPC and use VPC endpoints to restrict access to the public internet.</li> <li><strong>Implement IAM roles:</strong> Grant access to Lambda functions using IAM roles rather than individual users to improve management and control.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-269: Improper Authorization,cloud
Enable Lambda Functions CloudTrail Logging,"This vulnerability occurs when CloudTrail logging is not enabled for Lambda functions. CloudTrail logs API calls made to AWS services, providing valuable insights into user activity and potential security threats. Disabling CloudTrail logging for Lambda functions can hinder the ability to detect and respond to security incidents.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into Lambda function activity:</strong> Without CloudTrail logging, it can be difficult to track and monitor Lambda function invocations, making it harder to detect unauthorized access or malicious activity.</li> <li><strong>Delayed response to security incidents:</strong> Lack of logging can delay the detection and response to security incidents, increasing the risk of data breaches or other adverse consequences.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to log and monitor AWS activities. Disabling CloudTrail logging can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable CloudTrail logging:</strong> Enable CloudTrail logging for your Lambda functions to capture API calls and provide visibility into user activity.</li> <li><strong>Configure CloudTrail settings:</strong> Customize CloudTrail settings to log the desired events and data types.</li> <li><strong>Review and analyze logs:</strong> Regularly review CloudTrail logs to identify any suspicious activity or security incidents.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant events or security threats detected in CloudTrail logs.</li> <li><strong>Consider using CloudTrail Advanced Event Formats:</strong> Enable CloudTrail Advanced Event Formats to capture more detailed information about API calls.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-200: Information Exposure,cloud
Lambda Functions Without URL Configuration,"This vulnerability occurs when Lambda functions are deployed without a URL configuration. Without a URL configuration, Lambda functions cannot be invoked directly over the internet, limiting their accessibility. However, it's important to note that this vulnerability can be exploited in conjunction with other misconfigurations or vulnerabilities to allow unauthorized access.","<ul class=""list-disc pl-4""> <li><strong>Limited functionality:</strong> Lambda functions without a URL configuration cannot be invoked directly over the internet, limiting their usability.</li> <li><strong>Increased complexity:</strong> Invoking Lambda functions without a URL configuration requires additional steps, such as using the AWS SDK or the AWS CLI.</li> <li><strong>Potential security risks:</strong> While not directly exploitable, Lambda functions without URL configurations can be used in conjunction with other misconfigurations or vulnerabilities to allow unauthorized access.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Configure a URL configuration:</strong> If your Lambda function needs to be publicly accessible, configure a URL configuration to allow direct invocation over the internet.</li> <li><strong>Use VPC endpoints:</strong> If you need to restrict access to a Lambda function, consider using VPC endpoints to allow access only from within your VPC.</li> <li><strong>Implement strong access controls:</strong> Use IAM roles and policies to control who can invoke your Lambda functions.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",4.3,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-16: Configuration,cloud
Lambda Functions Missing Execution Role,"This vulnerability occurs when Lambda functions are deployed without an execution role assigned. An execution role grants Lambda functions the necessary permissions to access AWS resources and perform their tasks. Without an execution role, Lambda functions cannot execute.","<ul class=""list-disc pl-4""> <li><strong>Lambda functions cannot execute:</strong> Lambda functions without an execution role cannot be invoked or perform any actions.</li> <li><strong>Limited functionality:</strong> The inability to execute Lambda functions can significantly impact the functionality of your applications.</li> <li><strong>Potential security risks:</strong> If a Lambda function is configured to use an IAM role with excessive permissions, it could pose a security risk.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Assign an execution role:</strong> Assign an appropriate execution role to your Lambda functions to grant them the necessary permissions.</li> <li><strong>Use the least privilege principle:</strong> Grant Lambda functions only the minimum permissions required to perform their tasks.</li> <li><strong>Review and update execution roles:</strong> Regularly review and update execution roles to ensure that they align with your security requirements and avoid granting unnecessary permissions.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",5.5,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L,CWE-287: Improper Authentication,cloud
Lambda functions without Code Signing Enabled,"This vulnerability occurs when Lambda functions are deployed without code signing enabled. Code signing verifies the integrity and authenticity of Lambda function code, preventing unauthorized modifications and tampering. Without code signing, there is a risk of malicious code being injected into Lambda functions, potentially leading to unauthorized access or data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> If malicious code is injected into a Lambda function, it could be used to gain unauthorized access to AWS resources or sensitive data.</li> <li><strong>Data breaches:</strong> Compromised Lambda functions can lead to data breaches if they are used to process sensitive information.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement security measures to protect their applications. Disabling code signing can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable code signing:</strong> Configure your Lambda functions to require code signing to verify the integrity and authenticity of the deployed code.</li> <li><strong>Use a trusted certificate authority (CA):</strong> Obtain a trusted CA certificate to sign your Lambda function code.</li> <li><strong>Securely store private keys:</strong> Protect the private key used for code signing to prevent unauthorized access.</li> <li><strong>Regularly rotate private keys:</strong> Rotate the private key used for code signing periodically to reduce the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-347: Improper Verification of Cryptographic Signature,cloud
Enable Encryption For Lambda Function Environment Variables,"This vulnerability occurs when Lambda function environment variables are not encrypted, leaving sensitive data exposed to unauthorized access. Unencrypted environment variables can be accessed by anyone with permission to invoke the Lambda function, potentially leading to data breaches and unauthorized access.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Unencrypted environment variables can be accessed by anyone with permission to invoke the Lambda function, allowing unauthorized individuals to gain access to sensitive data.</li> <li><strong>Data breaches:</strong> Compromised environment variables can lead to data breaches if they contain sensitive information.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Unencrypted environment variables can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable environment variable encryption:</strong> Configure your Lambda functions to encrypt environment variables at rest.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your Lambda functions to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:M,CWE-311: Missing Encryption of Sensitive Data,cloud
Lambda Functions URLs Without IAM Authentication,"This vulnerability occurs when Lambda functions are deployed with publicly accessible URLs without requiring IAM authentication. This allows anyone with the URL to invoke the Lambda function, potentially exposing sensitive data or enabling unauthorized actions.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible Lambda functions can be invoked by anyone with the URL, allowing unauthorized individuals to access sensitive data or perform malicious actions.</li> <li><strong>Data breaches:</strong> If a Lambda function processes sensitive data and is publicly accessible without IAM authentication, the data could be exposed to unauthorized individuals.</li> <li><strong>Denial of service (DoS) attacks:</strong> Publicly accessible Lambda functions can be targeted with DoS attacks, which can disrupt the availability of your applications.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible Lambda functions can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Require IAM authentication:</strong> Configure your Lambda functions to require IAM authentication for invocation.</li> <li><strong>Use VPC endpoints:</strong> If you need to restrict access to a Lambda function, consider using VPC endpoints to allow access only from within your VPC.</li> <li><strong>Implement strong access controls:</strong> Use IAM roles and policies to control who can invoke your Lambda functions.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
Publicly Accessible Lambda Functions,"This vulnerability occurs when Lambda functions are configured to be publicly accessible without proper access controls. Publicly accessible Lambda functions can be invoked by anyone with the URL, allowing unauthorized individuals to access sensitive data or perform malicious actions.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible Lambda functions can be invoked by anyone with the URL, allowing unauthorized individuals to access sensitive data or perform malicious actions.</li> <li><strong>Data breaches:</strong> If a Lambda function processes sensitive data and is publicly accessible, the data could be exposed to unauthorized individuals.</li> <li><strong>Denial of service (DoS) attacks:</strong> Publicly accessible Lambda functions can be targeted with DoS attacks, which can disrupt the availability of your applications.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible Lambda functions can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Restrict access:</strong> Configure Lambda functions to require IAM authentication for invocation.</li> <li><strong>Use VPC endpoints:</strong> If you need to restrict access to a Lambda function, consider using VPC endpoints to allow access only from within your VPC.</li> <li><strong>Implement strong access controls:</strong> Use IAM roles and policies to control who can invoke your Lambda functions.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.2,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-287: Improper Authentication,cloud
Lambda Functions Not Connected To Private VPC Subnets Only,"This vulnerability occurs when Lambda functions are configured to be accessible from the public internet, allowing anyone with the URL to invoke them. While this can be useful in some scenarios, it can also increase the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible Lambda functions can be invoked by anyone with the URL, allowing unauthorized individuals to access sensitive data or perform malicious actions.</li> <li><strong>Data breaches:</strong> If a Lambda function processes sensitive data and is publicly accessible, the data could be exposed to unauthorized individuals.</li> <li><strong>Denial of service (DoS) attacks:</strong> Publicly accessible Lambda functions can be targeted with DoS attacks, which can disrupt the availability of your applications.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible Lambda functions can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Use private VPC subnets:</strong> Configure your Lambda functions to be connected to private VPC subnets only, restricting access to authorized users within your VPC.</li> <li><strong>Implement VPC endpoints:</strong> If you need to access resources outside of your VPC, use VPC endpoints to securely connect to services like S3 or DynamoDB.</li> <li><strong>Use IAM roles:</strong> Grant access to Lambda functions using IAM roles rather than individual users to improve management and control.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-269: Improper Authorization,cloud
Lambda Functions With Cross-Account Access Permissions,"This vulnerability occurs when Lambda functions are configured with cross-account access permissions, allowing them to access resources in other AWS accounts. While cross-account access can be useful in certain scenarios, it also introduces security risks if not managed properly.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> If an attacker gains control of a Lambda function with cross-account access, they can potentially access and manipulate resources in other accounts.</li> <li><strong>Data breaches:</strong> Compromised Lambda functions can lead to data breaches if they have access to sensitive data in other accounts.</li> <li><strong>Loss of control over resources:</strong> Granting cross-account access to Lambda functions can make it difficult to manage and control access to resources in other accounts.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to restrict access to sensitive data. Granting cross-account access to Lambda functions can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Restrict cross-account access:</strong> Configure Lambda functions to limit cross-account access to only trusted accounts or IAM roles.</li> <li><strong>Use IAM roles:</strong> Grant access to Lambda functions using IAM roles rather than individual users to improve management and control.</li> <li><strong>Implement least privilege principle:</strong> Grant Lambda functions only the minimum permissions necessary to perform their tasks.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Lambda Function Execution Roles With Inline Policies,"This vulnerability occurs when Lambda functions are configured with inline policies instead of using IAM roles. Inline policies are directly attached to the Lambda function, making them harder to manage and control. Using inline policies can increase the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Inline policies can be difficult to manage and control, increasing the risk of unauthorized access to Lambda functions and the resources they have access to.</li> <li><strong>Data breaches:</strong> Compromised Lambda functions can lead to data breaches if they have access to sensitive data.</li> <li><strong>Difficulty in managing permissions:</strong> Inline policies can be difficult to maintain and update as Lambda functions change their requirements.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to manage access controls effectively. Using inline policies can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Use IAM roles:</strong> Assign IAM roles to Lambda functions to manage their permissions centrally and effectively.</li> <li><strong>Implement least privilege principle:</strong> Grant IAM roles only the minimum permissions necessary to perform their tasks.</li> <li><strong>Regularly review and update IAM roles:</strong> Monitor and update IAM roles as Lambda functions change their requirements.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,CWE- Policy Management,cloud
Lambda Function With Admin Privileges,"This vulnerability occurs when Lambda functions are granted excessive permissions, such as administrator privileges. Admin privileges allow Lambda functions to perform a wide range of actions, including modifying and deleting resources, which can significantly increase the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Lambda functions with admin privileges can perform a wide range of actions, including modifying and deleting resources, which can increase the risk of unauthorized access.</li> <li><strong>Data breaches:</strong> Compromised Lambda functions with admin privileges can lead to data breaches if they are used to access or modify sensitive data.</li> <li><strong>Loss of control over resources:</strong> Granting admin privileges to Lambda functions can make it difficult to manage and control access to AWS resources.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to restrict access to sensitive data and resources. Granting admin privileges to Lambda functions can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Use the least privilege principle:</strong> Grant Lambda functions only the minimum permissions necessary to perform their tasks.</li> <li><strong>Review and update permissions regularly:</strong> Monitor and update Lambda function permissions as their requirements change.</li> <li><strong>Implement strong access controls:</strong> Use IAM roles and policies to control access to Lambda functions and the resources they have access to.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-272: Least Privilege,cloud
Enable Active Tracing For Lambda Functions,"This vulnerability occurs when active tracing is not enabled for Lambda functions. Active tracing provides visibility into the performance and behavior of Lambda functions, helping to identify and address potential issues. Disabling active tracing can hinder the ability to detect and troubleshoot performance problems or security vulnerabilities.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into Lambda function performance:</strong> Without active tracing, it can be difficult to identify and troubleshoot performance issues, such as latency or errors.</li> <li><strong>Delayed response to security incidents:</strong> Lack of visibility into Lambda function behavior can delay the detection and response to security incidents.</li> <li><strong>Performance degradation:</strong> Unresolved performance issues can lead to degraded user experience and decreased application availability.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable active tracing:</strong> Enable active tracing for your Lambda functions to capture detailed performance metrics and diagnostic information.</li> <li><strong>Configure tracing settings:</strong> Customize tracing settings to capture the desired level of detail and optimize performance.</li> <li><strong>Analyze traces:</strong> Regularly review and analyze traces to identify performance bottlenecks, errors, or security vulnerabilities.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant performance issues or security threats detected through tracing.</li> <li><strong>Consider using X-Ray:</strong> Use AWS X-Ray to visualize and analyze distributed traces across your applications, including Lambda functions.</li> </ul>",5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-200: Information Exposure,cloud
Lambda Functions Without Customer-Managed Policies,"This vulnerability occurs when Lambda functions rely solely on default IAM policies for access control. Default policies may grant excessive permissions, increasing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Default policies may grant excessive permissions, allowing Lambda functions to access resources they don't need.</li> <li><strong>Data breaches:</strong> Compromised Lambda functions with excessive permissions can lead to data breaches.</li> <li><strong>Loss of control over resources:</strong> Default policies can make it difficult to manage and control access to resources.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement strong access controls. Relying solely on default policies can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Create custom policies:</strong> Create custom IAM policies to grant Lambda functions only the minimum permissions necessary to perform their tasks.</li> <li><strong>Review and update policies regularly:</strong> Monitor and update policies as Lambda functions change their requirements.</li> <li><strong>Use IAM roles:</strong> Assign IAM roles to Lambda functions to manage their permissions centrally and effectively.</li> <li><strong>Implement least privilege principle:</strong> Grant Lambda functions only the minimum permissions necessary to perform their tasks.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",5.5,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L,CWE-732: Incorrect Permission Assignment for Critical Resource,cloud
Enable Enhanced Monitoring for Lambda Functions,"This vulnerability occurs when enhanced monitoring is not enabled for Lambda functions. Enhanced monitoring provides more detailed insights into Lambda function performance, helping to identify and address potential issues. Disabling enhanced monitoring can hinder the ability to detect and troubleshoot performance problems or security vulnerabilities.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into Lambda function performance:</strong> Without enhanced monitoring, it can be difficult to identify and troubleshoot performance issues, such as latency or errors.</li> <li><strong>Delayed response to security incidents:</strong> Lack of visibility into Lambda function behavior can delay the detection and response to security incidents.</li> <li><strong>Performance degradation:</strong> Unresolved performance issues can lead to degraded user experience and decreased application availability.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable enhanced monitoring:</strong> Enable enhanced monitoring for your Lambda functions to capture more detailed performance metrics and diagnostic information.</li> <li><strong>Configure monitoring settings:</strong> Customize monitoring settings to capture the desired level of detail and optimize performance.</li> <li><strong>Analyze metrics:</strong> Regularly review and analyze performance metrics to identify trends, anomalies, or potential issues.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant performance issues or security threats detected through monitoring.</li> <li><strong>Consider using X-Ray:</strong> Use AWS X-Ray to visualize and analyze distributed traces across your applications, including Lambda functions.</li> </ul>",5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-200: Information Exposure,cloud
Enable AWS Macie,"This vulnerability occurs when AWS Macie, a security service that continuously monitors your AWS accounts for potential threats, is not enabled. Disabling Macie can hinder the ability to detect and respond to security incidents.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Without Macie, it can be difficult to detect and respond to security threats, increasing the risk of unauthorized access and data breaches.</li> <li><strong>Data breaches:</strong> Unidentified vulnerabilities can lead to data breaches and the loss of sensitive information.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to use appropriate security tools to identify and address vulnerabilities. Disabling Macie can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable AWS Macie:</strong> Activate Macie in your AWS account to benefit from its continuous monitoring capabilities.</li> <li><strong>Configure Macie settings:</strong> Customize Macie settings to match your specific security requirements and resource types.</li> <li><strong>Review and address findings:</strong> Regularly review Macie findings and take prompt action to remediate identified vulnerabilities.</li> <li><strong>Stay informed about Macie updates:</strong> Keep up-to-date with the latest features and improvements in Macie to ensure you are using the most effective security tool.</li> </ul>",6,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L,CWE-200: Information Exposure,cloud
Enable IAM Database Authentication for Neptune,"This vulnerability occurs when Amazon Neptune databases do not use IAM database authentication. IAM database authentication provides a more secure way to authenticate users and applications accessing Neptune databases, reducing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Without IAM database authentication, Neptune databases may be vulnerable to unauthorized access using traditional authentication methods.</li> <li><strong>Data breaches:</strong> Compromised credentials can lead to data breaches if sensitive data is stored in the Neptune database.</li> <li><strong>Loss of control over access:</strong> IAM database authentication provides finer-grained control over access to Neptune databases, reducing the risk of unauthorized access.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement strong authentication mechanisms. Using traditional authentication methods for Neptune databases can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable IAM database authentication:</strong> Configure your Neptune databases to use IAM database authentication.</li> <li><strong>Use IAM roles:</strong> Grant access to Neptune databases using IAM roles rather than individual users to improve management and control.</li> <li><strong>Implement least privilege principle:</strong> Grant IAM roles only the minimum permissions necessary to perform their tasks.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-306: Missing Authentication for Critical Resource,cloud
Enable Neptune Auto Minor Version Upgrade,This vulnerability occurs when Neptune databases are not configured for automatic minor version upgrades. Minor version upgrades often include security patches and performance improvements. Disabling automatic minor version upgrades can increase the risk of security vulnerabilities and performance issues.,"<ul class=""list-disc pl-4""> <li><strong>Increased risk of security vulnerabilities:</strong> Outdated Neptune versions may contain vulnerabilities that can be exploited by attackers.</li> <li><strong>Performance issues:</strong> Older versions of Neptune may have performance limitations or inefficiencies that can impact the availability and reliability of your applications.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to use the latest versions of software to maintain a secure environment.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable auto minor version upgrade:</strong> Configure your Neptune databases to automatically upgrade to minor versions when they become available.</li> <li><strong>Test upgrades thoroughly:</strong> Test minor version upgrades in a non-production environment before applying them to production databases to ensure compatibility and avoid disruptions.</li> <li><strong>Monitor for security vulnerabilities:</strong> Keep an eye out for security advisories and patches related to Neptune to address known vulnerabilities promptly.</li> <li><strong>Implement a patching process:</strong> Establish a process for applying security patches and updates to Neptune databases in a timely manner.</li> <li><strong>Consider using automated patching tools:</strong> Utilize automated patching tools to streamline the upgrade process and reduce the risk of human error.</li> </ul>",5.5,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L,CWE-1004: Insecure Update,cloud
Enable Neptune Database Encryption,"This vulnerability occurs when Neptune databases are not encrypted at rest. Encryption at rest helps protect sensitive data from unauthorized access, even if the underlying storage is compromised.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> If an attacker gains unauthorized access to the underlying storage, they could potentially decrypt and exfiltrate sensitive data.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to do so can result in fines or penalties.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable encryption at rest:</strong> Configure your Neptune databases to use encryption at rest.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your Neptune databases to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Encrypt Neptune Database instances With KMS Customer Master Keys (CMKs),"This vulnerability occurs when Neptune database instances are not encrypted at rest using a Customer Master Key (CMK). Encryption at rest helps protect sensitive data from unauthorized access, even if the underlying storage is compromised.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> If an attacker gains unauthorized access to the underlying storage, they could potentially decrypt and exfiltrate sensitive data.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to do so can result in fines or penalties.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable encryption at rest:</strong> Configure your Neptune database instances to use encryption at rest.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your Neptune database instances to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable Neptune Database instances Deletion Protection,"This vulnerability occurs when Neptune database instances do not have deletion protection enabled. Deletion protection prevents accidental or malicious deletion of database instances, safeguarding valuable data.","<ul class=""list-disc pl-4""> <li><strong>Accidental deletion of data:</strong> If a Neptune database instance is accidentally deleted, it can result in data loss and disruption of services.</li> <li><strong>Malicious deletion of data:</strong> Attackers can attempt to delete Neptune database instances to disrupt operations or steal data.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized deletion. Failure to enable deletion protection can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable deletion protection:</strong> Configure your Neptune database instances to have deletion protection enabled.</li> <li><strong>Review deletion protection settings:</strong> Regularly review and update deletion protection settings to ensure they align with your organization's needs.</li> <li><strong>Implement a backup and recovery plan:</strong> Have a robust backup and recovery plan in place to restore data in case of accidental deletion or other incidents.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-16: Configuration,cloud
AWS Network Firewall Not In Use,This vulnerability occurs when AWS Network Firewall is not enabled or configured correctly. Network Firewall is a managed firewall service that helps protect your network from unauthorized traffic. Disabling or misconfiguring Network Firewall can increase the risk of unauthorized access and data breaches.,"<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Without Network Firewall, your network may be vulnerable to unauthorized access from the internet or other external sources.</li> <li><strong>Data breaches:</strong> Compromised network security can lead to data breaches if sensitive data is exposed to unauthorized access.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement appropriate network security measures. Disabling Network Firewall can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable AWS Network Firewall:</strong> Activate Network Firewall in your AWS account and configure it to protect your network from unauthorized traffic.</li> <li><strong>Create firewall rules:</strong> Define firewall rules to allow or deny traffic based on source, destination, port, and other criteria.</li> <li><strong>Monitor firewall logs:</strong> Regularly review firewall logs to identify and address any suspicious activity or security incidents.</li> <li><strong>Keep firewall rules up-to-date:</strong> Update firewall rules as your network infrastructure and security requirements change.</li> <li><strong>Consider using additional security measures:</strong> Combine Network Firewall with other security measures, such as intrusion detection systems (IDS) and web application firewalls (WAFs), to enhance your network security.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-288: Authentication Bypass Using Null Key,cloud
Enable Audit Logs,"This vulnerability occurs when audit logs are not enabled for AWS resources. Audit logs record user activity and system events, providing valuable insights into security incidents and compliance violations. Disabling audit logs can hinder the ability to detect and respond to security threats.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into user activity:</strong> Without audit logs, it can be difficult to track and monitor user activity, making it harder to detect unauthorized access or malicious actions.</li> <li><strong>Delayed response to security incidents:</strong> Lack of logging can delay the detection and response to security incidents, increasing the risk of data breaches or other adverse consequences.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to log and monitor AWS activities. Disabling audit logs can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable audit logs:</strong> Enable audit logs for all relevant AWS services to capture user activity and system events.</li> <li><strong>Configure audit log settings:</strong> Customize audit log settings to capture the desired events and data types.</li> <li><strong>Review and analyze logs:</strong> Regularly review audit logs to identify any suspicious activity or security incidents.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant events or security threats detected in audit logs.</li> <li><strong>Consider using CloudTrail Advanced Event Formats:</strong> Enable CloudTrail Advanced Event Formats to capture more detailed information about API calls.</li> </ul>",5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-200: Information Exposure,cloud
Opensearch Somains HTTPS Communications Enforced,"This vulnerability occurs when Opensearch domains do not enforce HTTPS communications. HTTPS provides encryption for data transmitted between clients and Opensearch domains, protecting it from unauthorized access and interception.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Sensitive data transmitted over HTTP can be intercepted and decrypted by attackers.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt data in transit. Failure to enforce HTTPS communications can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable HTTPS:</strong> Configure your Opensearch domains to require HTTPS communication.</li> <li><strong>Use strong cryptographic algorithms:</strong> Choose strong cryptographic algorithms and ciphers for HTTPS encryption.</li> <li><strong>Verify certificate authenticity:</strong> Ensure that the certificates used for HTTPS are issued by trusted certificate authorities.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-327: Use of a Weak Algorithm or Cryptographic Key,cloud
Enable Opensearch At-Rest Encryption,"This vulnerability occurs when Opensearch data is not encrypted at rest. Encryption at rest helps protect sensitive data from unauthorized access, even if the underlying storage is compromised.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> If an attacker gains unauthorized access to the underlying storage, they could potentially decrypt and exfiltrate sensitive data.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to do so can result in fines or penalties.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable encryption at rest:</strong> Configure your Opensearch domains to use encryption at rest.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your Opensearch domains to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-319: Improper Encryption,cloud
OpenSearch Domain Exposed To Everyone,"This vulnerability occurs when an Opensearch domain is publicly accessible without proper access controls. A publicly accessible Opensearch domain can be discovered and exploited by attackers, allowing them to gain unauthorized access to sensitive data.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible Opensearch domains can be discovered and exploited by attackers, allowing them to gain unauthorized access to sensitive data.</li> <li><strong>Data breaches:</strong> Compromised Opensearch domains can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible Opensearch domains can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Restrict access:</strong> Limit access to your Opensearch domain using security groups, network ACLs, or VPC peering.</li> <li><strong>Use private VPCs:</strong> Place your Opensearch domain in a private VPC to prevent direct access from the public internet.</li> <li><strong>Implement client authentication:</strong> Require client authentication to verify the identity of clients connecting to the Opensearch domain.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
Enable OpenSearch Node To Node Encryption,"This vulnerability occurs when Opensearch nodes are not configured to use node-to-node encryption. Node-to-node encryption protects data transmitted between Opensearch nodes, reducing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Sensitive data transmitted between Opensearch nodes can be intercepted and decrypted by attackers.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data in transit. Failure to enable node-to-node encryption can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable node-to-node encryption:</strong> Configure your Opensearch cluster to use node-to-node encryption.</li> <li><strong>Use strong cryptographic algorithms:</strong> Choose strong cryptographic algorithms and ciphers for node-to-node encryption.</li> <li><strong>Verify certificate authenticity:</strong> Ensure that the certificates used for node-to-node encryption are issued by trusted certificate authorities.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Configure TLS-1.2 For OpenSearch domains,"This vulnerability occurs when Opensearch domains do not enforce TLS-1.2 or higher for communication. TLS-1.2 is a more secure version of the TLS protocol, providing stronger encryption and protection against vulnerabilities in older versions.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Using older TLS versions can make Opensearch domains vulnerable to attacks, such as man-in-the-middle attacks.</li> <li><strong>Data breaches:</strong> Compromised communications can lead to data breaches if sensitive data is transmitted over the network.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to use strong encryption protocols. Using outdated TLS versions can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable TLS-1.2 or higher:</strong> Configure your Opensearch domains to require TLS-1.2 or higher for communication.</li> <li><strong>Disable older TLS versions:</strong> Disable older and less secure TLS versions to protect against vulnerabilities.</li> <li><strong>Use strong cryptographic algorithms:</strong> Choose strong cryptographic algorithms and ciphers for TLS encryption.</li> <li><strong>Verify certificate authenticity:</strong> Ensure that the certificates used for TLS are issued by trusted certificate authorities.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-326: Inadequate Encryption Strength,cloud
Enable AWS Organizations Service,This vulnerability occurs when AWS Organizations is not enabled in an AWS account. AWS Organizations is a service that allows you to manage multiple AWS accounts centrally. Disabling AWS Organizations can hinder the ability to manage and control access to multiple AWS accounts effectively.,"<ul class=""list-disc pl-4""> <li><strong>Difficulty in managing multiple accounts:</strong> Without AWS Organizations, it can be challenging to manage and control access to multiple AWS accounts.</li> <li><strong>Increased risk of unauthorized access:</strong> Lack of centralized management can increase the risk of unauthorized access to AWS resources.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement appropriate governance and management practices. Disabling AWS Organizations can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable AWS Organizations:</strong> Activate AWS Organizations in your AWS account to benefit from its centralized management capabilities.</li> <li><strong>Create organizational units (OUs):** Organize your AWS accounts into OUs to improve management and control.</li> <li><strong>Implement policies and permissions:** Use policies and permissions to control access to AWS resources across your organization.</li> <li><strong>Monitor for suspicious activity:** Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-284: Improper Access Control,cloud
Enable All Features For AWS Organizations,"This vulnerability occurs when not all features of AWS Organizations are enabled. AWS Organizations offers various features to enhance governance, management, and security of multiple AWS accounts. Disabling certain features can increase the risk of unauthorized access, data breaches, and non-compliance.","<ul class=""list-disc pl-4""> <li><strong>Reduced security and management capabilities:</strong> Disabling certain AWS Organizations features can limit your ability to manage and control access to AWS resources, increasing the risk of unauthorized access and data breaches.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement appropriate governance and management practices. Disabling AWS Organizations features can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Review and enable features:</strong> Evaluate the available features of AWS Organizations and enable those that are relevant to your organization's needs and security requirements.</li> <li><strong>Configure features appropriately:</strong> Customize feature settings to match your specific requirements and ensure optimal security and management.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",5.5,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L,CWE-16: Configuration,cloud
RDS Database Snapshots Publicly Accessible,"This vulnerability occurs when RDS database snapshots are publicly accessible, allowing unauthorized individuals to access and download sensitive data. Publicly accessible snapshots pose a significant risk to data privacy and security.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible snapshots can be discovered and downloaded by anyone with internet access, allowing unauthorized individuals to access sensitive data.</li> <li><strong>Data breaches:</strong> Compromised snapshots can lead to data breaches if they contain sensitive information.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible snapshots can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Restrict access:</strong> Configure your RDS database snapshots to be private and accessible only within your VPC.</li> <li><strong>Use VPC endpoints:</strong> If you need to access RDS database snapshots from outside your VPC, use VPC endpoints to securely connect to your RDS resources.</li> <li><strong>Implement encryption:</strong> Encrypt your RDS database snapshots to protect sensitive data from unauthorized access, even if the snapshots are compromised.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.2,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
Enable Activity Streams For Aurora Database Cluster,"This vulnerability occurs when activity streams are not enabled for Aurora database clusters. Activity streams record user activity and system events, providing valuable insights into security incidents and compliance violations. Disabling activity streams can hinder the ability to detect and respond to security threats.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into database activity:</strong> Without activity streams, it can be difficult to track and monitor user activity, making it harder to detect unauthorized access or malicious actions.</li> <li><strong>Delayed response to security incidents:</strong> Lack of logging can delay the detection and response to security incidents, increasing the risk of data breaches or other adverse consequences.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to log and monitor database activities. Disabling activity streams can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable activity streams:</strong> Enable activity streams for your Aurora database clusters to capture user activity and system events.</li> <li><strong>Configure activity stream settings:</strong> Customize activity stream settings to capture the desired events and data types.</li> <li><strong>Review and analyze logs:</strong> Regularly review activity streams to identify any suspicious activity or security incidents.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant events or security threats detected in activity streams.</li> <li><strong>Consider using CloudTrail Advanced Event Formats:</strong> Enable CloudTrail Advanced Event Formats to capture more detailed information about API calls related to your Aurora database clusters.</li> </ul>",5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-200: Information Exposure,cloud
Enable RDS Cluster Deletion Protection,"This vulnerability occurs when RDS database clusters do not have deletion protection enabled. Deletion protection prevents accidental or malicious deletion of database clusters, safeguarding valuable data.","<ul class=""list-disc pl-4""> <li><strong>Accidental deletion of data:</strong> If an RDS database cluster is accidentally deleted, it can result in data loss and disruption of services.</li> <li><strong>Malicious deletion of data:</strong> Attackers can attempt to delete RDS database clusters to disrupt operations or steal data.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized deletion. Failure to enable deletion protection can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable deletion protection:</strong> Configure your RDS database clusters to have deletion protection enabled.</li> <li><strong>Review deletion protection settings:</strong> Regularly review and update deletion protection settings to ensure they align with your organization's needs.</li> <li><strong>Implement a backup and recovery plan:</strong> Have a robust backup and recovery plan in place to restore data in case of accidental deletion or other incidents.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-16: Configuration,cloud
Enable RDS Transport Encryption,"This vulnerability occurs when RDS database instances do not have transport encryption enabled. Transport encryption protects data transmitted between the database instance and clients, reducing the risk of unauthorized access and data breaches during transmission.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Sensitive data transmitted over the network can be intercepted and decrypted by attackers.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt data in transit. Failure to enable transport encryption can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable transport encryption:</strong> Configure your RDS database instances to use transport encryption.</li> <li><strong>Use strong cryptographic algorithms:</strong> Choose strong cryptographic algorithms and ciphers for transport encryption.</li> <li><strong>Verify certificate authenticity:</strong> Ensure that the certificates used for transport encryption are issued by trusted certificate authorities.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable RDS Cluster Serverless Log Exports,"This vulnerability occurs when serverless log exports are not enabled for RDS database clusters. Serverless log exports provide valuable insights into database activity, helping to detect and respond to security incidents and performance issues. Disabling serverless log exports can hinder the ability to monitor and troubleshoot your RDS database clusters.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into database activity:</strong> Without serverless log exports, it can be difficult to track and monitor user activity, making it harder to detect unauthorized access or malicious actions.</li> <li><strong>Delayed response to security incidents:</strong> Lack of logging can delay the detection and response to security incidents, increasing the risk of data breaches or other adverse consequences.</li> <li><strong>Performance issues:</strong> Unresolved performance issues can lead to degraded user experience and decreased application availability.</li> </ul>",LOW,,"<ul class=""list-disc pl-4""> <li><strong>Enable serverless log exports:</strong> Configure your RDS database clusters to enable serverless log exports.</li> <li><strong>Configure log export settings:</strong> Customize log export settings to capture the desired events and data types.</li> <li><strong>Review and analyze logs:</strong> Regularly review serverless logs to identify any suspicious activity or performance issues.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant events or security threats detected in serverless logs.</li> <li><strong>Consider using CloudWatch Logs Insights:</strong> Use CloudWatch Logs Insights to analyze and query serverless logs for valuable insights.</li> </ul>",3.4,AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N,CWE-532: Information Exposure Through Log Files,cloud
Enable IAM Database Authentication For RDS Instances,"This vulnerability occurs when RDS database instances do not use IAM database authentication. IAM database authentication provides a more secure way to authenticate users and applications accessing RDS databases, reducing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Without IAM database authentication, RDS database instances may be vulnerable to unauthorized access using traditional authentication methods.</li> <li><strong>Data breaches:</strong> Compromised credentials can lead to data breaches if sensitive data is stored in the RDS database.</li> <li><strong>Loss of control over access:</strong> IAM database authentication provides finer-grained control over access to RDS databases, reducing the risk of unauthorized access.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement strong authentication mechanisms. Using traditional authentication methods for RDS databases can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable IAM database authentication:</strong> Configure your RDS database instances to use IAM database authentication.</li> <li><strong>Use IAM roles:</strong> Grant access to RDS databases using IAM roles rather than individual users to improve management and control.</li> <li><strong>Implement least privilege principle:</strong> Grant IAM roles only the minimum permissions necessary to perform their tasks.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-306: Missing Authentication for Critical Resource,cloud
Enable RDS Snapshot Encryption,"This vulnerability occurs when RDS database snapshots are not encrypted. Unencrypted snapshots can expose sensitive data if compromised, leading to data breaches.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Compromised snapshots can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to encrypt RDS snapshots can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable snapshot encryption:</strong> Configure your RDS database instances to automatically encrypt snapshots.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your RDS database instances to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable RDS Instance Deletion Protection,"This vulnerability occurs when RDS database instances do not have deletion protection enabled. Deletion protection prevents accidental or malicious deletion of database instances, safeguarding valuable data.","<ul class=""list-disc pl-4""> <li><strong>Accidental deletion of data:</strong> If an RDS database instance is accidentally deleted, it can result in data loss and disruption of services.</li> <li><strong>Malicious deletion of data:</strong> Attackers can attempt to delete RDS database instances to disrupt operations or steal data.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized deletion. Failure to enable deletion protection can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable deletion protection:</strong> Configure your RDS database instances to have deletion protection enabled.</li> <li><strong>Review deletion protection settings:</strong> Regularly review and update deletion protection settings to ensure they align with your organization's needs.</li> <li><strong>Implement a backup and recovery plan:</strong> Have a robust backup and recovery plan in place to restore data in case of accidental deletion or other incidents.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-16: Configuration,cloud
Enable RDS Instances Encryption,"This vulnerability occurs when RDS database instances are not encrypted at rest. Encryption at rest helps protect sensitive data from unauthorized access, even if the underlying storage is compromised.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> If an attacker gains unauthorized access to the underlying storage, they could potentially decrypt and exfiltrate sensitive data.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to do so can result in fines or penalties.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable encryption at rest:</strong> Configure your RDS database instances to use encryption at rest.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your RDS database instances to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable RDS Event Notifications,"This vulnerability occurs when RDS event notifications are not enabled. Event notifications provide valuable insights into database activity, helping to detect and respond to security incidents and performance issues. Disabling event notifications can hinder the ability to monitor and troubleshoot your RDS database instances.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into database activity:</strong> Without event notifications, it can be difficult to track and monitor database activity, making it harder to detect unauthorized access or malicious actions.</li> <li><strong>Delayed response to security incidents:</strong> Lack of logging can delay the detection and response to security incidents, increasing the risk of data breaches or other adverse consequences.</li> <li><strong>Performance issues:</strong> Unresolved performance issues can lead to degraded user experience and decreased application availability.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable event notifications:</strong> Configure your RDS database instances to enable event notifications.</li> <li><strong>Configure notification settings:</strong> Customize notification settings to receive notifications for specific events and destinations.</li> <li><strong>Review and analyze notifications:</strong> Regularly review event notifications to identify any suspicious activity or performance issues.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant events or security threats detected through event notifications.</li> <li><strong>Consider using CloudWatch Logs Insights:</strong> Use CloudWatch Logs Insights to analyze and query event logs for valuable insights.</li> </ul>",5,AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,CWE-16: Configuration,cloud
RDS Instance In Public Subnet,"Amazon RDS (Relational Database Service) instances that are deployed in public subnets are exposed to the internet, potentially allowing unauthorized users to access the database. By default, a public subnet has a route to the internet via an internet gateway. When an RDS instance is placed in such a subnet, it becomes accessible from the internet if the appropriate security group rules are in place, increasing the risk of data breaches.","<ul class=""list-disc pl-4""><li><strong>Unauthorized Access:</strong> Exposing RDS instances to the internet can allow attackers to gain access to the database, potentially compromising sensitive data.</li><li><strong>Data Breach:</strong> Attackers gaining access to the RDS instance could exfiltrate or modify critical data, leading to data breaches and loss of data integrity.</li><li><strong>Compliance Violations:</strong> Storing sensitive data in publicly accessible databases may violate regulatory requirements, resulting in legal consequences and financial penalties.</li></ul>",HIGH,,"<ul class=""list-disc pl-4""><li><strong>Deploy RDS Instances in Private Subnets:</strong> Ensure that all RDS instances are deployed in private subnets without direct access to the internet. This can be done by modifying the subnet settings or by launching new RDS instances in private subnets.</li><li><strong>Update Security Groups:</strong> Adjust security group settings to restrict access to the RDS instances only to necessary IP addresses or other AWS resources.</li><li><strong>Enable Multi-Factor Authentication (MFA):</strong> Use MFA for database access to add an additional layer of security.</li></ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,cloud
RDS Master Username Set To ADMIN,"This vulnerability occurs when the master username for an RDS database instance is set to the default value of ""ADMIN."" Using the default master username can increase the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> The default master username is widely known, making it easier for attackers to guess or brute-force the password.</li> <li><strong>Data breaches:</strong> Compromised credentials can lead to data breaches if sensitive data is stored in the RDS database.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement strong security practices. Using the default master username can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Change the master username:</strong> Modify the master username for your RDS database instances to a strong, unique value.</li> <li><strong>Use strong passwords:</strong> Create strong passwords for the master username, including a combination of uppercase and lowercase letters, numbers, and symbols.</li> <li><strong>Enable IAM database authentication:</strong> Consider using IAM database authentication to further enhance security and manage access to your RDS database instances.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-798: Use of Hard-coded Credentials,cloud
RDS Publicly Accessible,"This vulnerability occurs when an RDS database instance is accessible from the public internet, allowing unauthorized individuals to connect and interact with the database. Publicly accessible RDS instances can be discovered and exploited by attackers, leading to data breaches and other security risks.","<li><strong>Increased risk of unauthorized access:</strong> Publicly accessible RDS instances can be discovered and exploited by attackers, allowing them to gain unauthorized access to sensitive data.</li> <li><strong>Data breaches:</strong> Compromised RDS instances can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible RDS instances can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Restrict access:</strong> Configure your RDS database instances to be accessible only from within your VPC using security groups and network ACLs.</li> <li><strong>Use VPC endpoints:</strong> If you need to access RDS database instances from outside your VPC, use VPC endpoints to securely connect to your RDS resources.</li> <li><strong>Implement strong authentication:</strong> Require strong authentication methods, such as IAM database authentication, to protect access to your RDS database instances.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.2,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
Unrestricted RDS DB Security Group,"This vulnerability occurs when an RDS database security group has overly permissive rules, allowing unauthorized traffic to access the database. A misconfigured security group can expose the database to potential attacks and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Unrestricted security groups can allow unauthorized individuals to connect to and interact with the RDS database.</li> <li><strong>Data breaches:</strong> Compromised RDS instances can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement strong access controls. Unrestricted security groups can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Restrict inbound traffic:</strong> Configure your RDS database security group to allow only authorized IP addresses or CIDR blocks to connect to the database.</li> <li><strong>Use security groups effectively:</strong> Create separate security groups for different RDS database instances to control access more granularly.</li> <li><strong>Review security group rules regularly:</strong> Periodically review and update security group rules to ensure they align with your organization's security policies.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Redshift Parameter Group Require SSL,"This vulnerability occurs when Redshift parameter groups do not require SSL/TLS encryption for communication. Without SSL/TLS encryption, sensitive data transmitted between clients and Redshift clusters can be intercepted and decrypted by attackers.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Sensitive data transmitted over the network can be intercepted and decrypted by attackers.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt data in transit. Failure to require SSL/TLS encryption can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable SSL/TLS encryption:</strong> Configure your Redshift parameter groups to require SSL/TLS encryption for all client-broker communication.</li> <li><strong>Use strong cryptographic algorithms:</strong> Choose strong cryptographic algorithms and ciphers for SSL/TLS encryption.</li> <li><strong>Verify certificate authenticity:</strong> Ensure that the certificates used for SSL/TLS are issued by trusted certificate authorities.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-319: Improper Encryption,cloud
Redshift Cluster Publicly Accessible,"This vulnerability occurs when a Redshift cluster is publicly accessible without proper access controls. A publicly accessible Redshift cluster can be easily discovered and exploited by attackers, allowing them to gain unauthorized access to sensitive data.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible Redshift clusters can be discovered and exploited by attackers, allowing them to gain unauthorized access to sensitive data.</li> <li><strong>Data breaches:</strong> Compromised Redshift clusters can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible Redshift clusters can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Restrict access:</strong> Limit access to your Redshift cluster using security groups, network ACLs, or VPC peering.</li> <li><strong>Use private VPCs:</strong> Place your Redshift cluster in a private VPC to prevent direct access from the public internet.</li> <li><strong>Implement client authentication:</strong> Require client authentication to verify the identity of clients connecting to the Redshift cluster.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.2,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-200: Information Exposure,cloud
Redshift Cluster Not In VPC,"This vulnerability occurs when a Redshift cluster is not placed within a Virtual Private Cloud (VPC). A VPC provides a private network within AWS, isolating resources from the public internet and enhancing security.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Redshift clusters not in VPCs are directly accessible from the public internet, making them vulnerable to attacks.</li> <li><strong>Data breaches:</strong> Compromised Redshift clusters can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Redshift clusters not in VPCs can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Place cluster in VPC:</strong> Move your Redshift cluster into a private VPC to restrict access from the public internet.</li> <li><strong>Use security groups:</strong> Configure security groups to control inbound and outbound traffic to your Redshift cluster.</li> <li><strong>Implement client authentication:</strong> Require client authentication to verify the identity of clients connecting to the Redshift cluster.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Enable Encryption For Redshift Cluster,"This vulnerability occurs when Redshift clusters are not encrypted at rest. Encryption at rest helps protect sensitive data from unauthorized access, even if the underlying storage is compromised.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> If an attacker gains unauthorized access to the underlying storage, they could potentially decrypt and exfiltrate sensitive data.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to do so can result in fines or penalties.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable encryption at rest:</strong> Configure your Redshift clusters to use encryption at rest.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your Redshift clusters to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Redshift Cluster Default Master Username,"This vulnerability occurs when Redshift clusters use the default master username. The default master username is widely known, making it easier for attackers to guess or brute-force the password.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> The default master username can be easily guessed or brute-forced, allowing unauthorized individuals to gain access to the Redshift cluster.</li> <li><strong>Data breaches:</strong> Compromised Redshift clusters can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement strong security practices. Using the default master username can violate these requirements.</li> </ul>",LOW,,"<ul class=""list-disc pl-4""> <li><strong>Change the master username:</strong> Modify the master username for your Redshift clusters to a strong, unique value.</li> <li><strong>Use strong passwords:</strong> Create strong passwords for the master username, including a combination of uppercase and lowercase letters, numbers, and symbols.</li> <li><strong>Enable IAM database authentication:</strong> Consider using IAM database authentication to further enhance security and manage access to your Redshift clusters.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",3.4,AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N,CWE-798: Use of Hard-coded Credentials,cloud
Enable Redshift Cluster Audit Logging,"This vulnerability occurs when audit logging is not enabled for Redshift clusters. Audit logs record user activity and system events, providing valuable insights into security incidents and compliance violations. Disabling audit logs can hinder the ability to detect and respond to security threats.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into database activity:</strong> Without audit logs, it can be difficult to track and monitor user activity, making it harder to detect unauthorized access or malicious actions.</li> <li><strong>Delayed response to security incidents:</strong> Lack of logging can delay the detection and response to security incidents, increasing the risk of data breaches or other adverse consequences.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to log and monitor database activities. Disabling audit logs can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable audit logging:</strong> Configure your Redshift clusters to enable audit logging.</li> <li><strong>Configure audit log settings:</strong> Customize audit log settings to capture the desired events and data types.</li> <li><strong>Review and analyze logs:</strong> Regularly review audit logs to identify any suspicious activity or security incidents.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant events or security threats detected in audit logs.</li> <li><strong>Consider using CloudTrail Advanced Event Formats:</strong> Enable CloudTrail Advanced Event Formats to capture more detailed information about API calls related to your Redshift clusters.</li> </ul>",5.5,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L,CWE-532: Information Exposure Through Log Files,cloud
Allow Redshift Cluster Version Upgrade,This vulnerability occurs when Redshift clusters are not configured to allow automatic minor version upgrades. Minor version upgrades often include security patches and performance improvements. Disabling automatic minor version upgrades can increase the risk of security vulnerabilities and performance issues.,"<ul class=""list-disc pl-4""> <li><strong>Increased risk of security vulnerabilities:</strong> Outdated Redshift versions may contain vulnerabilities that can be exploited by attackers.</li> <li><strong>Performance issues:</strong> Older versions of Redshift may have performance limitations or inefficiencies that can impact the availability and reliability of your applications.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to use the latest versions of software to maintain a secure environment.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable auto minor version upgrade:</strong> Configure your Redshift clusters to automatically upgrade to minor versions when they become available.</li> <li><strong>Test upgrades thoroughly:</strong> Test minor version upgrades in a non-production environment before applying them to production clusters to ensure compatibility and avoid disruptions.</li> <li><strong>Monitor for security vulnerabilities:</strong> Keep an eye out for security advisories and patches related to Redshift to address known vulnerabilities promptly.</li> <li><strong>Implement a patching process:</strong> Establish a process for applying security patches and updates to Redshift clusters in a timely manner.</li> <li><strong>Consider using automated patching tools:</strong> Utilize automated patching tools to streamline the upgrade process and reduce the risk of human error.</li> </ul>",5.5,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L,CWE-1004: Insecure Update,cloud
Enable Redshift Cluster Enhanced VPC Routing,"This vulnerability occurs when Redshift clusters do not have enhanced VPC routing enabled. Enhanced VPC routing provides improved network performance and reliability for Redshift clusters, reducing the risk of connection issues and disruptions.","<ul class=""list-disc pl-4""> <li><strong>Performance issues:</strong> Without enhanced VPC routing, Redshift clusters may experience network latency or connection issues, impacting performance.</li> <li><strong>Availability issues:</strong> Network problems can lead to disruptions in service availability, affecting user experience and business operations.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable enhanced VPC routing:</strong> Configure your Redshift clusters to use enhanced VPC routing.</li> <li><strong>Review VPC configuration:</strong> Ensure that your VPC configuration is optimized for performance and reliability.</li> <li><strong>Monitor network performance:</strong> Keep an eye out for any signs of network latency or connection issues.</li> <li><strong>Consider using a VPC endpoint:</strong> If you need to access your Redshift cluster from outside your VPC, consider using a VPC endpoint to improve network performance and security.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Sender Policy Framework Not Configured,"This vulnerability occurs when an email server does not have SPF configured. SPF is a DNS-based mechanism that helps prevent email spoofing, where malicious actors send emails using a forged sender address.","<ul class=""list-disc pl-4""> <li><strong>Create an SPF record:</strong> Create an SPF record in your domain's DNS settings to specify which IP addresses are authorized to send emails on behalf of your domain.</li> <li><strong>Use a tool to generate the SPF record:</strong> There are online tools available to help you create the correct SPF record.</li> <li><strong>Monitor SPF records:</strong> Regularly monitor your SPF records to ensure they are up-to-date and accurate.</li> <li><strong>Consider using additional authentication methods:</strong> In addition to SPF, consider using other authentication methods like DKIM and DMARC to further protect your email domain.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Create an SPF record:** Create an SPF record in your domain's DNS settings to specify which IP addresses are authorized to send emails on behalf of your domain.</li> <li><strong>Use a tool to generate the SPF record:** There are online tools available to help you create the correct SPF record.</li> <li><strong>Monitor SPF records:** Regularly monitor your SPF records to ensure they are up-to-date and accurate.</li> <li><strong>Consider using additional authentication methods:</strong> In addition to SPF, consider using other authentication methods like DKIM and DMARC to further protect your email domain.</li> </ul>",6,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-16: Configuration,cloud
Configure Route 53 Domain Transfer Lock,"This vulnerability occurs when a Route 53 domain does not have transfer lock enabled. Transfer lock prevents unauthorized transfer of your domain name to another registrar, protecting it from hijacking.","<ul class=""list-disc pl-4""> <li><strong>Domain hijacking:</strong> Without transfer lock, unauthorized individuals can attempt to transfer your domain name to another registrar, gaining control of your domain.</li> <li><strong>Website downtime:</strong> If your domain is hijacked, your website may become inaccessible.</li> <li><strong>Loss of trust:</strong> A domain hijacking can damage your organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect their domain names from unauthorized transfer. Failure to enable transfer lock can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable transfer lock:</strong> Configure your Route 53 domains to have transfer lock enabled.</li> <li><strong>Review transfer lock settings:</strong> Regularly review and update transfer lock settings to ensure they align with your organization's needs.</li> <li><strong>Monitor for unauthorized transfer attempts:</strong> Keep an eye out for notifications from Route 53 about any attempts to transfer your domain name.</li> <li><strong>Use two-factor authentication (2FA):</strong> Enable 2FA for your Route 53 account to add an extra layer of security.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-306: Missing Authentication for Critical Resource,cloud
Expired Or About To Expire Route 53 Domains,"This vulnerability occurs when Route 53 domains are allowed to expire or are nearing expiration. An expired domain can be hijacked by unauthorized individuals, leading to data loss, website downtime, and reputational damage.","<ul class=""list-disc pl-4""> <li><strong>Domain hijacking:</strong> Expired domains can be easily transferred to a new registrar, allowing unauthorized individuals to gain control of your domain.</li> <li><strong>Website downtime:</strong> If your domain is hijacked, your website may become inaccessible.</li> <li><strong>Data loss:</strong> Domain hijacking can lead to data loss if the hijackers modify DNS records or redirect traffic to malicious websites.</li> <li><strong>Loss of trust:</strong> A domain hijacking can damage your organization's reputation and erode user trust.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Monitor domain expiration dates:</strong> Regularly review the expiration dates of your Route 53 domains and renew them well in advance.</li> <li><strong>Set up renewal reminders:</strong> Configure reminders or alerts to notify you when your domains are approaching expiration.</li> <li><strong>Use domain lock:</strong> Enable domain lock to prevent unauthorized transfers of your domains.</li> <li><strong>Consider using a domain registrar with automatic renewal:</strong> Some domain registrars offer automatic renewal services to ensure that your domains are always renewed on time.</li> </ul>",7,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:M,CWE-16: Configuration,cloud
Enable Route 53 Domain Auto Renew,"This vulnerability occurs when Route 53 domains are not configured for automatic renewal. Without automatic renewal, domains can expire, leading to domain hijacking and potential data loss.","<ul class=""list-disc pl-4""> <li><strong>Domain hijacking:</strong> Expired domains can be easily transferred to a new registrar, allowing unauthorized individuals to gain control of your domain.</li> <li><strong>Website downtime:</strong> If your domain is hijacked, your website may become inaccessible.</li> <li><strong>Data loss:</strong> Domain hijacking can lead to data loss if the hijackers modify DNS records or redirect traffic to malicious websites.</li> <li><strong>Loss of trust:</strong> A domain hijacking can damage your organization's reputation and erode user trust.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable auto-renewal:</strong> Configure your Route 53 domains to automatically renew when they are about to expire.</li> <li><strong>Review auto-renewal settings:</strong> Regularly review and update auto-renewal settings to ensure they align with your organization's needs.</li> <li><strong>Use a credit card or billing method:</strong> Ensure that you have a valid credit card or billing method associated with your Route 53 account to facilitate automatic renewal.</li> <li><strong>Monitor domain expiration dates:</strong> Keep track of your domain expiration dates to ensure that auto-renewal is functioning correctly.</li> </ul>",7,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:M,CWE-16: Configuration,cloud
Remove AWS Route 53 Dangling DNS Records,"This vulnerability occurs when dangling DNS records exist in a Route 53 zone. Dangling DNS records are records that point to resources that no longer exist, such as deleted S3 buckets or EC2 instances. These records can be exploited by attackers to redirect traffic to malicious websites or compromise the integrity of your DNS infrastructure.","<ul class=""list-disc pl-4""> <li><strong>Website redirection:</strong> Dangling DNS records can redirect traffic to malicious websites, potentially leading to data breaches or phishing attacks.</li> <li><strong>Loss of trust:</strong> A domain hijacking can damage your organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to maintain accurate and up-to-date DNS records. Dangling DNS records can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Regularly review DNS records:</strong> Periodically review your Route 53 zones to identify and remove dangling DNS records.</li> <li><strong>Automate DNS record management:</strong> Use tools or scripts to automate the process of identifying and removing dangling DNS records.</li> <li><strong>Implement DNS record lifecycle management:</strong> Establish a process for creating, updating, and deleting DNS records to prevent the creation of dangling records.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7,AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:M,CWE-16: Configuration,cloud
Enable WHOIS Privacy Protection,"This vulnerability occurs when WHOIS privacy protection is not enabled for your domain names. WHOIS is a public database that contains information about domain registrations, including the registrant's name, email address, and contact information. Without privacy protection, this information can be publicly accessible, increasing the risk of unsolicited contact, phishing attacks, and identity theft.","<ul class=""list-disc pl-4""> <li><strong>Unsolicited contact:</strong> Publicly accessible WHOIS information can lead to unsolicited contact from spammers, telemarketers, or scammers.</li> <li><strong>Phishing attacks:</strong> Phishing attackers can use publicly available WHOIS information to target individuals or organizations.</li> <li><strong>Identity theft:</strong> Sensitive personal information exposed in WHOIS records can be used for identity theft.</li> <li><strong>Compliance risks:</strong> Some privacy regulations require organizations to protect the personal information of their customers. Publicly accessible WHOIS information can violate these requirements.</li> </ul>",LOW,,"<ul class=""list-disc pl-4""> <li><strong>Enable WHOIS privacy protection:</strong> Configure your domain registrar to enable WHOIS privacy protection for your domain names.</li> <li><strong>Review privacy settings:</strong> Regularly review and update your WHOIS privacy settings to ensure they align with your organization's needs.</li> <li><strong>Use a privacy service:</strong> Consider using a third-party privacy service to protect your domain registration information.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",3.4,AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N,CWE-200: Information Exposure,cloud
Enable Query Logging for Route 53 Hosted Zones,"This vulnerability occurs when query logging is not enabled for Route 53 hosted zones. Query logging records DNS queries and responses, providing valuable insights into DNS traffic and potential security threats. Disabling query logging can hinder the ability to detect and respond to DNS-related attacks or unauthorized access.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into DNS traffic:</strong> Without query logging, it can be difficult to track and monitor DNS queries and responses, making it harder to detect unauthorized access or malicious activity.</li> <li><strong>Delayed response to security incidents:</strong> Lack of logging can delay the detection and response to security incidents, increasing the risk of data breaches or other adverse consequences.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to log and monitor network activity. Disabling query logging can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable query logging:</strong> Configure your Route 53 hosted zones to enable query logging.</li> <li><strong>Configure query log settings:</strong> Customize query log settings to capture the desired events and data types.</li> <li><strong>Review and analyze logs:</strong> Regularly review query logs to identify any suspicious activity or security incidents.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant events or security threats detected in query logs.</li> <li><strong>Consider using CloudTrail Advanced Event Formats:</strong> Enable CloudTrail Advanced Event Formats to capture more detailed information about API calls related to your Route 53 hosted zones.</li> </ul>",5.5,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L,CWE-532: Information Exposure Through Log Files,cloud
Enable DNSSEC Signing for Route 53 Hosted Zones,This vulnerability occurs when DNSSEC signing is not enabled for Route 53 hosted zones. DNSSEC (Domain Name System Security Extensions) is a suite of technologies that helps to protect the DNS system from spoofing and other attacks. Disabling DNSSEC signing can increase the risk of domain hijacking and data breaches.,"<ul class=""list-disc pl-4""> <li><strong>Domain hijacking:</strong> Without DNSSEC, attackers can manipulate DNS records, redirecting traffic to malicious websites.</li> <li><strong>Data breaches:</strong> Domain hijacking can lead to data breaches if sensitive data is stored on websites that are affected by the attack.</li> <li><strong>Loss of trust:</strong> A domain hijacking can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to implement DNSSEC to protect their domains from attacks. Disabling DNSSEC can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable DNSSEC signing:</strong> Configure your Route 53 hosted zones to enable DNSSEC signing.</li> <li><strong>Create a DNSSEC key pair:</strong> Generate a public/private key pair for DNSSEC signing.</li> <li><strong>Publish the DNSKEY record:</strong> Publish the DNSKEY record for your domain in your DNS zone.</li> <li><strong>Monitor DNSSEC status:</strong> Regularly monitor the status of DNSSEC signing for your domains to ensure it is working correctly.</li> <li><strong>Consider using a DNSSEC validation service:</strong> Use a third-party DNSSEC validation service to verify the integrity of your DNS records.</li> </ul>",6,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-295: Improper Certificate Validation,cloud
Configure S3 Object Ownership,"This vulnerability occurs when S3 object ownership is not configured correctly, allowing unauthorized users to access and modify objects. Improper object ownership can lead to data breaches and unauthorized access.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> If object ownership is not configured correctly, unauthorized users may be able to access and modify S3 objects.</li> <li><strong>Data breaches:</strong> Compromised S3 objects can lead to data breaches if sensitive information is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Improper object ownership can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Set object ownership to the bucket owner:</strong> Configure your S3 buckets to have object ownership set to the bucket owner. This ensures that only authorized users with permissions on the bucket can access and modify objects.</li> <li><strong>Use bucket policies:</strong> Implement bucket policies to control access to S3 objects and prevent unauthorized access.</li> <li><strong>Enable server-side encryption:</strong> Encrypt S3 objects at rest to protect sensitive data from unauthorized access, even if the bucket is compromised.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Enable S3 Bucket Logging,"This vulnerability occurs when S3 bucket logging is not enabled. S3 bucket logging records user activity and system events, providing valuable insights into security incidents and compliance violations. Disabling S3 bucket logging can hinder the ability to detect and respond to security threats.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into bucket activity:</strong> Without S3 bucket logging, it can be difficult to track and monitor user activity, making it harder to detect unauthorized access or malicious actions.</li> <li><strong>Delayed response to security incidents:</strong> Lack of logging can delay the detection and response to security incidents, increasing the risk of data breaches or other adverse consequences.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to log and monitor AWS activities. Disabling S3 bucket logging can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable S3 bucket logging:</strong> Configure your S3 buckets to enable logging.</li> <li><strong>Configure logging settings:</strong> Customize logging settings to capture the desired events and data types.</li> <li><strong>Review and analyze logs:</strong> Regularly review S3 bucket logs to identify any suspicious activity or security incidents.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant events or security threats detected in S3 bucket logs.</li> <li><strong>Consider using CloudTrail Advanced Event Formats:</strong> Enable CloudTrail Advanced Event Formats to capture more detailed information about API calls related to your S3 buckets.</li> </ul>",5.5,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L,CWE-532: Information Exposure Through Log Files,cloud
Deny S3 Log Delivery Group Write Permission,"This vulnerability occurs when the S3 log delivery group does not have write permissions to the target S3 bucket. Without write permissions, log data cannot be delivered to the bucket, hindering the ability to monitor and analyze S3 bucket activity.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into S3 bucket activity:</strong> Without log delivery, it can be difficult to track and monitor user activity, making it harder to detect unauthorized access or malicious actions.</li> <li><strong>Delayed response to security incidents:</strong> Lack of logging can delay the detection and response to security incidents, increasing the risk of data breaches or other adverse consequences.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to log and monitor AWS activities. Disabling S3 log delivery can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Grant write permissions:</strong> Ensure that the S3 log delivery group has write permissions to the target S3 bucket.</li> <li><strong>Verify bucket ownership:</strong> Confirm that the S3 log delivery group and the target S3 bucket belong to the same AWS account or have appropriate cross-account permissions.</li> <li><strong>Review and analyze logs:</strong> Regularly review S3 bucket logs to identify any suspicious activity or security incidents.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant events or security threats detected in S3 bucket logs.</li> <li><strong>Consider using CloudTrail Advanced Event Formats:</strong> Enable CloudTrail Advanced Event Formats to capture more detailed information about API calls related to your S3 buckets.</li> </ul>",6,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-284: Improper Access Control,cloud
Enable S3 Bucket Server Side Encryption,"This vulnerability occurs when S3 buckets are not configured with server-side encryption. Server-side encryption helps protect sensitive data stored in S3 buckets from unauthorized access, even if the underlying storage is compromised.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Compromised S3 buckets can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to enable server-side encryption can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable server-side encryption:</strong> Configure your S3 buckets to use server-side encryption.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your S3 buckets to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable S3 Object Lock,"This vulnerability occurs when S3 object lock is not enabled for S3 buckets. S3 object lock prevents accidental or malicious deletion or modification of objects, safeguarding valuable data.","<ul class=""list-disc pl-4""> <li><strong>Accidental deletion of data:</strong> Objects can be accidentally deleted, leading to data loss and disruption of services.</li> <li><strong>Malicious deletion of data:</strong> Attackers can attempt to delete S3 objects to disrupt operations or steal data.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized deletion or modification. Failure to enable S3 object lock can violate these requirements.</li> </ul>",LOW,,"<ul class=""list-disc pl-4""> <li><strong>Enable S3 object lock:</strong> Configure your S3 buckets to have object lock enabled.</li> <li><strong>Choose the appropriate object lock mode:</strong> Select either Governance mode or Legal Hold mode based on your organization's specific requirements.</li> <li><strong>Set retention periods:</strong> Specify retention periods for objects to prevent accidental or malicious deletion.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",3.4,AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N,CWE-16: Configuration,cloud
Configure Cross Account Access For S3,"This vulnerability occurs when cross-account access to S3 buckets is not configured properly. Cross-account access allows resources in one AWS account to access resources in another account. If not managed correctly, it can increase the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Misconfigured cross-account access can allow unauthorized individuals to access and manipulate S3 buckets in other accounts.</li> <li><strong>Data breaches:</strong> Compromised S3 buckets can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of control over resources:</strong> Granting cross-account access to S3 buckets can make it difficult to manage and control access to resources in other accounts.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to restrict access to sensitive data. Misconfigured cross-account access can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Use IAM roles:</strong> Grant access to S3 buckets using IAM roles rather than individual users to improve management and control.</li> <li><strong>Implement least privilege principle:</strong> Grant IAM roles only the minimum permissions necessary to perform their tasks.</li> <li><strong>Review and update permissions regularly:</strong> Monitor and update IAM roles and permissions as your organization's needs change.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Disable S3 Bucket Public Access Via Policy,"This vulnerability occurs when an S3 bucket has public access enabled through bucket policies. Publicly accessible S3 buckets can be discovered and exploited by attackers, allowing them to access and modify objects without proper authorization.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible S3 buckets can be discovered and exploited by attackers, allowing them to access and modify objects.</li> <li><strong>Data breaches:</strong> Compromised S3 buckets can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible S3 buckets can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Disable public access:</strong> Configure your S3 buckets to block public access by removing any public access policies.</li> <li><strong>Use bucket policies:</strong> Implement granular bucket policies to control access to S3 objects and prevent unauthorized access.</li> <li><strong>Enable server-side encryption:</strong> Encrypt S3 objects at rest to protect sensitive data from unauthorized access, even if the bucket is compromised.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
Configure S3 Bucket Public ACL Access,"This vulnerability occurs when an S3 bucket has public ACL access enabled. A public ACL allows anyone with the bucket's name to access and modify objects, increasing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible S3 buckets can be discovered and exploited by attackers, allowing them to access and modify objects.</li> <li><strong>Data breaches:</strong> Compromised S3 buckets can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible S3 buckets can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Disable public ACL access:</strong> Remove any public ACLs from your S3 buckets to prevent unauthorized access.</li> <li><strong>Use bucket policies:</strong> Implement granular bucket policies to control access to S3 objects and prevent unauthorized access.</li> <li><strong>Enable server-side encryption:</strong> Encrypt S3 objects at rest to protect sensitive data from unauthorized access, even if the bucket is compromised.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
Enable S3 Bucket Versioning,"This vulnerability occurs when S3 bucket versioning is not enabled. S3 bucket versioning creates a copy of every object put into a bucket, allowing you to restore previous versions of objects if they are accidentally deleted or modified. Disabling versioning can increase the risk of data loss and unauthorized access.","<ul class=""list-disc pl-4""> <li><strong>Accidental data deletion:</strong> Without versioning, accidentally deleted objects cannot be recovered.</li> <li><strong>Unauthorized modifications:</strong> If objects are modified without versioning, there is no way to revert to previous versions.</li> <li><strong>Data breaches:</strong> Compromised S3 buckets can lead to data breaches if sensitive data is stored within them, and versioning can provide a way to recover from such incidents.</li> </ul>",LOW,,"<ul class=""list-disc pl-4""> <li><strong>Enable versioning:</strong> Configure your S3 buckets to have versioning enabled.</li> <li><strong>Review versioning settings:</strong> Regularly review and update versioning settings to ensure they align with your organization's needs.</li> <li><strong>Implement retention policies:</strong> Set retention policies to automatically delete older versions of objects to manage storage costs.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",3.4,AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N,CWE-16: Configuration,cloud
Enable S3 Bucket MFA Delete,"This vulnerability occurs when S3 bucket MFA delete is not enabled. MFA delete requires multi-factor authentication (MFA) for deleting S3 buckets, preventing accidental or malicious deletion.","<ul class=""list-disc pl-4""> <li><strong>Accidental deletion of data:</strong> If an S3 bucket is accidentally deleted, it can result in data loss and disruption of services.</li> <li><strong>Malicious deletion of data:</strong> Attackers can attempt to delete S3 buckets to disrupt operations or steal data.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized deletion. Failure to enable MFA delete can violate these requirements.</li> </ul>",LOW,,"<ul class=""list-disc pl-4""> <li><strong>Enable MFA delete:</strong> Configure your S3 buckets to require MFA for deletion.</li> <li><strong>Use strong MFA methods:</strong> Choose strong MFA methods, such as time-based one-time passwords (TOTP) or hardware tokens, to enhance security.</li> <li><strong>Review MFA settings:</strong> Regularly review and update MFA settings to ensure they align with your organization's needs.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",3.4,AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N,CWE-16: Configuration,cloud
Configure S3 Bucket Authenticated Users Access,"This vulnerability occurs when S3 bucket access is not restricted to authenticated users. Publicly accessible S3 buckets can be discovered and exploited by attackers, allowing them to access and modify objects without proper authorization.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible S3 buckets can be discovered and exploited by attackers, allowing them to access and modify objects.</li> <li><strong>Data breaches:</strong> Compromised S3 buckets can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible S3 buckets can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Restrict public access:</strong> Disable public access to your S3 buckets to prevent unauthorized access.</li> <li><strong>Use bucket policies:</strong> Implement granular bucket policies to control access to S3 objects and prevent unauthorized access.</li> <li><strong>Enable server-side encryption:</strong> Encrypt S3 objects at rest to protect sensitive data from unauthorized access, even if the bucket is compromised.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Enable S3 Block Public Access for AWS Accounts,This vulnerability occurs when S3 block public access is not enabled for AWS accounts. Block public access is a feature that prevents public access to S3 buckets and objects by default. Disabling block public access can increase the risk of unauthorized access and data breaches.,"<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible S3 buckets can be discovered and exploited by attackers, allowing them to access and modify objects.</li> <li><strong>Data breaches:</strong> Compromised S3 buckets can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible S3 buckets can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable block public access:</strong> Enable block public access at the account level to prevent new buckets from being created with public access.</li> <li><strong>Review existing buckets:</strong> Check your existing S3 buckets and ensure that they do not have public access enabled.</li> <li><strong>Use bucket policies:</strong> Implement granular bucket policies to control access to S3 objects and prevent unauthorized access.</li> <li><strong>Enable server-side encryption:</strong> Encrypt S3 objects at rest to protect sensitive data from unauthorized access, even if the bucket is compromised.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
SNS Topic Publicly Accessible,"This vulnerability occurs when an SNS topic is publicly accessible without proper access controls. A publicly accessible SNS topic can be discovered and exploited by attackers, allowing them to send messages to subscribers without authorization.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible SNS topics can be discovered and exploited by attackers, allowing them to send messages to subscribers without authorization.</li> <li><strong>Data breaches:</strong> If sensitive data is sent through the SNS topic, it could be intercepted by unauthorized individuals.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible SNS topics can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Restrict access:</strong> Limit access to your SNS topic using IAM policies or security groups.</li> <li><strong>Use private VPCs:</strong> Place your SNS topic in a private VPC to prevent direct access from the public internet.</li> <li><strong>Implement client authentication:</strong> Require client authentication to verify the identity of clients publishing messages to the SNS topic.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Enable SNS Topic Encryption,"This vulnerability occurs when SNS topics are not encrypted at rest. Encryption at rest helps protect sensitive data from unauthorized access, even if the underlying storage is compromised.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> If an attacker gains unauthorized access to the underlying storage, they could potentially decrypt and exfiltrate sensitive data.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to do so can result in fines or penalties.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable encryption at rest:</strong> Configure your SNS topics to use encryption at rest.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your SNS topics to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable Queue Server Side Encryption,"This vulnerability occurs when Amazon SQS queues are not configured with server-side encryption. Server-side encryption helps protect sensitive data stored in SQS queues from unauthorized access, even if the underlying storage is compromised.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Compromised SQS queues can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to enable server-side encryption can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable server-side encryption:</strong> Configure your SQS queues to use server-side encryption.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your SQS queues to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-311: Missing Encryption of Sensitive Data,cloud
Queue Unprocessed Messages,"This vulnerability occurs when SQS queues have a large number of unprocessed messages. Unprocessed messages can accumulate due to various reasons, such as processing delays or failures. A backlog of unprocessed messages can impact the performance and reliability of applications that rely on SQS.","<ul class=""list-disc pl-4""> <li><strong>Performance degradation:</strong> A large backlog of unprocessed messages can cause performance issues for applications that rely on SQS.</li> <li><strong>Service disruptions:</strong> Unprocessed messages can lead to service disruptions if applications cannot process messages at a sufficient rate.</li> <li><strong>Increased costs:</strong> SQS charges for storing messages, and a large backlog of unprocessed messages can increase costs.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Monitor message processing:</strong> Regularly monitor the number of unprocessed messages in your SQS queues.</li> <li><strong>Identify and address bottlenecks:</strong> Identify and address any issues that are causing message processing delays or failures.</li> <li><strong>Adjust queue settings:</strong> If necessary, adjust queue settings, such as the visibility timeout or maximum message size, to improve message processing efficiency.</li> <li><strong>Consider using a dead-letter queue (DLQ):</strong> Implement a DLQ to handle messages that cannot be processed successfully. This can help prevent message accumulation and improve overall system reliability.</li> </ul>",5.5,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L,CWE-20: Improper Input Validation,cloud
SQS Queue Publicly Exposed,"This vulnerability occurs when an SQS queue is publicly accessible without proper access controls. A publicly accessible SQS queue can be discovered and exploited by attackers, allowing them to send and receive messages without authorization.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible SQS queues can be discovered and exploited by attackers, allowing them to send and receive messages without authorization.</li> <li><strong>Data breaches:</strong> If sensitive data is sent through the SQS queue, it could be intercepted by unauthorized individuals.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible SQS queues can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Restrict access:</strong> Limit access to your SQS queue using IAM policies or security groups.</li> <li><strong>Use private VPCs:</strong> Place your SQS queue in a private VPC to prevent direct access from the public internet.</li> <li><strong>Implement client authentication:</strong> Require client authentication to verify the identity of clients sending and receiving messages on the SQS queue.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-284: Improper Access Control,cloud
Enable SSM Parameter Encryption,"This vulnerability occurs when AWS Systems Manager (SSM) parameters are not encrypted at rest. Unencrypted parameters can expose sensitive data if compromised, leading to data breaches.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Compromised SSM parameters can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to encrypt SSM parameters can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable parameter encryption:</strong> Configure your SSM parameters to use encryption at rest.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your SSM parameters to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
SageMaker Notebook Instance Not In VPC,"This vulnerability occurs when a SageMaker notebook instance is not placed within a Virtual Private Cloud (VPC). A VPC provides a private network within AWS, isolating resources from the public internet and enhancing security.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> SageMaker notebook instances not in VPCs are directly accessible from the public internet, making them vulnerable to attacks.</li> <li><strong>Data breaches:</strong> Compromised notebook instances can lead to data breaches if sensitive data is stored within them or accessed from the notebook.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. SageMaker notebook instances not in VPCs can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Place notebook instance in VPC:</strong> Move your SageMaker notebook instance into a private VPC to restrict access from the public internet.</li> <li><strong>Use security groups:</strong> Configure security groups to control inbound and outbound traffic to your notebook instance.</li> <li><strong>Implement client authentication:</strong> Require client authentication to verify the identity of users accessing the notebook instance.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
SageMaker Notebook Instance Missing Execution Role,"This vulnerability occurs when a SageMaker notebook instance does not have an associated execution role. An execution role grants the notebook instance permissions to access AWS resources, such as S3 buckets or other services. Without an execution role, the notebook instance cannot function properly and may be unable to access necessary resources.","<ul class=""list-disc pl-4""> <li><strong>Limited functionality:</strong> A notebook instance without an execution role cannot access AWS resources, limiting its functionality and preventing users from performing tasks.</li> <li><strong>Data access issues:</strong> If the notebook instance cannot access data stored in S3 buckets or other resources, it may be unable to perform its intended functions.</li> <li><strong>Reduced productivity:</strong> Users may experience frustration and decreased productivity due to the limitations imposed by a missing execution role.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Assign an execution role:</strong> Associate an appropriate execution role with your SageMaker notebook instance to grant it the necessary permissions.</li> <li><strong>Review and update permissions:</strong> Regularly review and update the permissions granted to the execution role to ensure it aligns with your security policies and the notebook instance's requirements.</li> <li><strong>Monitor for errors:</strong> Keep an eye out for error messages or unexpected behavior in your notebook instance, which could indicate issues related to the execution role.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-275: Permission Issues,cloud
Disable Direct Internet Access For Notebook Instances,"This vulnerability occurs when SageMaker notebook instances have direct internet access enabled. Allowing direct internet access can increase the risk of unauthorized access, data breaches, and exposure to malicious content.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Directly accessible notebook instances can be discovered and exploited by attackers, allowing them to gain unauthorized access and potentially compromise sensitive data.</li> <li><strong>Data breaches:</strong> Compromised notebook instances can lead to data breaches if sensitive data is stored within them or accessed from the notebook.</li> <li><strong>Exposure to malicious content:</strong> Notebook instances with direct internet access can be exposed to malicious content, such as viruses, malware, or phishing attacks.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to restrict network access to protect sensitive data. Allowing direct internet access can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Disable direct internet access:</strong> Configure your SageMaker notebook instances to have direct internet access disabled.</li> <li><strong>Use VPC endpoints:</strong> If you need to access external resources from your notebook instances, use VPC endpoints to securely connect to those resources.</li> <li><strong>Implement security groups:</strong> Configure security groups to control inbound and outbound traffic to your notebook instances.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Disable Root Access For SageMaker Notebook Instances,"This vulnerability occurs when SageMaker notebook instances have root access enabled. Root access provides unrestricted privileges within the notebook instance, increasing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Root access can be exploited by attackers to gain full control of a notebook instance and potentially compromise sensitive data.</li> <li><strong>Data breaches:</strong> Compromised notebook instances can lead to data breaches if sensitive data is stored within them or accessed from the notebook.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to restrict the privileges of users and applications. Allowing root access can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Disable root access:</strong> Configure your SageMaker notebook instances to use a non-root user for everyday tasks.</li> <li><strong>Use sudo for elevated privileges:</strong> If you need to perform administrative tasks, use the <i>sudo</i> command to elevate privileges temporarily.</li> <li><strong>Review and update permissions:</strong> Regularly review and update the permissions granted to the non-root user to ensure they align with your security policies and the notebook instance's requirements.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Enable Data Capture For SageMaker Endpoints,"This vulnerability occurs when data capture is not enabled for SageMaker endpoints. Data capture records information about API calls made to your SageMaker endpoints, providing valuable insights into usage patterns, performance, and security threats. Disabling data capture can hinder the ability to monitor and troubleshoot your SageMaker endpoints.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into endpoint usage:</strong> Without data capture, it can be difficult to track and monitor API calls made to your SageMaker endpoints, making it harder to detect unauthorized access or performance issues.</li> <li><strong>Delayed response to security incidents:</strong> Lack of logging can delay the detection and response to security incidents, increasing the risk of data breaches or other adverse consequences.</li> <li><strong>Performance issues:</strong> Unresolved performance issues can lead to degraded user experience and decreased application availability.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable data capture:</strong> Configure your SageMaker endpoints to enable data capture.</li> <li><strong>Configure data capture settings:</strong> Customize data capture settings to capture the desired events and data types.</li> <li><strong>Review and analyze logs:</strong> Regularly review data capture logs to identify any suspicious activity or performance issues.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant events or security threats detected in data capture logs.</li> <li><strong>Consider using CloudWatch Logs Insights:</strong> Use CloudWatch Logs Insights to analyze and query data capture logs for valuable insights.</li> </ul>",5.5,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L,CWE-532: Information Exposure Through Log Files,cloud
Enable Inter-Container Traffic Encryption,"This vulnerability occurs when inter-container traffic within a Kubernetes cluster is not encrypted. Unencrypted traffic can be intercepted and decrypted by attackers, exposing sensitive data.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Sensitive data transmitted between containers can be intercepted and decrypted by attackers.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data in transit. Failure to enable inter-container traffic encryption can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable inter-container traffic encryption:</strong> Configure your Kubernetes cluster to use inter-container traffic encryption.</li> <li><strong>Use strong cryptographic algorithms:</strong> Choose strong cryptographic algorithms and ciphers for inter-container traffic encryption.</li> <li><strong>Verify certificate authenticity:</strong> Ensure that the certificates used for inter-container traffic encryption are issued by trusted certificate authorities.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-319: Improper Encryption,cloud
Enable Network Isolation For SageMaker Models,"This vulnerability occurs when SageMaker models are not configured with network isolation. Network isolation prevents SageMaker models from accessing resources outside of their VPC, reducing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> SageMaker models without network isolation can be accessed from the public internet, increasing the risk of unauthorized access.</li> <li><strong>Data breaches:</strong> Compromised SageMaker models can lead to data breaches if sensitive data is stored within them or accessed from the model.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. SageMaker models without network isolation can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable network isolation:</strong> Configure your SageMaker models to use network isolation.</li> <li><strong>Use VPC endpoints:</strong> If you need to access external resources from your SageMaker models, use VPC endpoints to securely connect to those resources.</li> <li><strong>Implement security groups:</strong> Configure security groups to control inbound and outbound traffic to your SageMaker models.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Enable VPC Only For SageMaker Domains,"This vulnerability occurs when SageMaker domains are not configured to use VPC only mode. VPC only mode restricts access to SageMaker domains to resources within a VPC, reducing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> SageMaker domains that are not configured for VPC only mode can be accessed from the public internet, increasing the risk of unauthorized access.</li> <li><strong>Data breaches:</strong> Compromised SageMaker domains can lead to data breaches if sensitive data is stored within them or accessed from the domain.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. SageMaker domains that are not configured for VPC only mode can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable VPC only mode:</strong> Configure your SageMaker domains to use VPC only mode.</li> <li><strong>Use VPC endpoints:</strong> If you need to access SageMaker domains from outside your VPC, use VPC endpoints to securely connect to them.</li> <li><strong>Implement security groups:</strong> Configure security groups to control inbound and outbound traffic to your SageMaker domains.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-284: Improper Access Control,cloud
Enable Notebook Data Encryption With KMS Customer Managed Keys,This vulnerability occurs when notebook data is not encrypted using KMS customer managed keys. KMS customer managed keys provide a higher level of control and security for data encryption compared to default keys.,"<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Compromised notebook data can lead to data breaches if sensitive information is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to use KMS customer managed keys can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable KMS customer managed keys:</strong> Configure your notebook instances to use KMS customer managed keys for data encryption.</li> <li><strong>Create dedicated CMKs:</strong> Create dedicated CMKs for your notebook instances to ensure that they are not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMKs used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable Endpoints Encryption With KMS Customer Managed Keys,"This vulnerability occurs when endpoints (e.g., API Gateway, Lambda, AppSync) are not configured to use KMS customer managed keys for encryption. Default encryption keys can be less secure, increasing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Compromised endpoints can lead to data breaches if sensitive data is stored within them or transmitted through them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest and in transit. Failure to use KMS customer managed keys can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable KMS customer managed keys:</strong> Configure your endpoints to use KMS customer managed keys for encryption.</li> <li><strong>Create dedicated CMKs:</strong> Create dedicated CMKs for your endpoints to ensure that they are not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMKs used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Secrets Manager Not In Use,"This vulnerability occurs when AWS Secrets Manager is not used to store and manage sensitive information. Secrets Manager provides a secure way to store and retrieve secrets, such as API keys, database credentials, and passwords. Failure to use Secrets Manager can increase the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Sensitive information stored in plain text or code can be easily discovered and exploited by attackers.</li> <li><strong>Data breaches:</strong> Compromised credentials can lead to data breaches if they are used to access sensitive systems or data.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Failure to use Secrets Manager can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Use Secrets Manager:</strong> Store and manage sensitive information using Secrets Manager to protect it from unauthorized access.</li> <li><strong>Configure access controls:</strong> Use IAM roles and permissions to control access to Secrets Manager resources.</li> <li><strong>Enable rotation:</strong> Configure Secrets Manager to automatically rotate secrets to reduce the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-256: Missing Password Protection,cloud
Enable Secret Encryption With KMS Customer Master Keys,"This vulnerability occurs when Secrets Manager secrets are not encrypted using KMS customer managed keys. Default encryption keys can be less secure, increasing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Compromised Secrets Manager secrets can lead to data breaches if sensitive information is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to use KMS customer managed keys can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable KMS customer managed keys:</strong> Configure your Secrets Manager secrets to use KMS customer managed keys for encryption.</li> <li><strong>Create dedicated CMKs:</strong> Create dedicated CMKs for your Secrets Manager secrets to ensure that they are not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMKs used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",8.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable Secret Rotation,"This vulnerability occurs when Secrets Manager secrets are not rotated regularly. Over time, secrets can become compromised, increasing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Compromised secrets can be used to gain unauthorized access to systems and data.</li> <li><strong>Data breaches:</strong> Compromised secrets can lead to data breaches if they are used to access sensitive information.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to rotate secrets regularly to maintain security. Failure to do so can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable secret rotation:</strong> Configure Secrets Manager to automatically rotate your secrets on a regular schedule.</li> <li><strong>Set appropriate rotation intervals:</strong> Determine the appropriate rotation interval based on your organization's security needs and risk tolerance.</li> <li><strong>Monitor rotation status:</strong> Ensure that secrets are being rotated as scheduled and that there are no errors or failures in the rotation process.</li> <li><strong>Consider using a dedicated CMK:</strong> Use a dedicated Customer Master Key (CMK) for secret rotation to enhance security and reduce the risk of compromise.</li> </ul>",6,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-330: Use of Insufficiently Random Values,cloud
Long Secret Rotation Interval,"This vulnerability occurs when Secrets Manager secrets are rotated at intervals that are too long, increasing the risk of compromise and data breaches. A long rotation interval means that secrets remain in use for an extended period, making them more susceptible to attacks.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Secrets that are not rotated regularly can be compromised, allowing unauthorized individuals to gain access to systems and data.</li> <li><strong>Data breaches:</strong> Compromised secrets can lead to data breaches if they are used to access sensitive information.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to rotate secrets regularly to maintain security. A long rotation interval can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Reduce rotation interval:</strong> Set a shorter rotation interval for your Secrets Manager secrets, ensuring they are rotated frequently.</li> <li><strong>Evaluate risk tolerance:</strong> Determine the appropriate rotation interval based on your organization's security needs and risk tolerance.</li> <li><strong>Monitor rotation status:</strong> Ensure that secrets are being rotated as scheduled and that there are no errors or failures in the rotation process.</li> <li><strong>Consider using a dedicated CMK:</strong> Use a dedicated Customer Master Key (CMK) for secret rotation to enhance security and reduce the risk of compromise.</li> </ul>",6,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-330: Use of Insufficiently Random Values,cloud
Enable Security Hub,"This vulnerability occurs when AWS Security Hub is not enabled. Security Hub provides a centralized view of security alerts and findings across your AWS environment, helping you to detect and respond to security threats more effectively.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into security threats:</strong> Without Security Hub, it can be difficult to track and monitor security alerts and findings across your AWS environment.</li> <li><strong>Delayed response to security incidents:</strong> Lack of a centralized view of security threats can delay the detection and response to security incidents.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to have a centralized security monitoring solution. Disabling Security Hub can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable Security Hub:</strong> Enable Security Hub in your AWS account to gain a centralized view of security alerts and findings.</li> <li><strong>Configure Security Hub settings:</strong> Customize Security Hub settings to enable the desired security standards and controls.</li> <li><strong>Review and analyze findings:</strong> Regularly review Security Hub findings to identify and address any security threats.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant security events or findings.</li> <li><strong>Integrate with other security tools:</strong> Integrate Security Hub with other security tools to get a more comprehensive view of your security posture.</li> </ul>",5.5,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L,CWE-16: Configuration,cloud
Use KMS Customer Master Keys For AWS Storage Gateway Volumes,"This vulnerability occurs when AWS Storage Gateway volumes are not encrypted using KMS customer managed keys. Default encryption keys can be less secure, increasing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Compromised Storage Gateway volumes can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to use KMS customer managed keys can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable KMS customer managed keys:</strong> Configure your Storage Gateway volumes to use KMS customer managed keys for encryption.</li> <li><strong>Create dedicated CMKs:</strong> Create dedicated Customer Master Keys (CMKs) for your Storage Gateway volumes to ensure that they are not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMKs used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Use KMS Customer Master Keys For AWS Storage Gateway Tapes,"This vulnerability occurs when AWS Storage Gateway tapes are not encrypted using KMS customer managed keys. Default encryption keys can be less secure, increasing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Compromised Storage Gateway tapes can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to use KMS customer managed keys can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable KMS customer managed keys:</strong> Configure your Storage Gateway tapes to use KMS customer managed keys for encryption.</li> <li><strong>Create dedicated CMKs:</strong> Create dedicated Customer Master Keys (CMKs) for your Storage Gateway tapes to ensure that they are not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMKs used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Use KMS Customer Master Keys For AWS Storage Gateway File Shares,"This vulnerability occurs when AWS Storage Gateway file shares are not encrypted using KMS customer managed keys. Default encryption keys can be less secure, increasing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Compromised Storage Gateway file shares can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to use KMS customer managed keys can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable KMS customer managed keys:</strong> Configure your Storage Gateway file shares to use KMS customer managed keys for encryption.</li> <li><strong>Create dedicated CMKs:</strong> Create dedicated Customer Master Keys (CMKs) for your Storage Gateway file shares to ensure that they are not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMKs used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud
Enable AWS Transfer For SFTP Logging Activity,"This vulnerability occurs when AWS Transfer for SFTP logging activity is not enabled. Logging activity provides valuable insights into user behavior, security incidents, and performance issues. Disabling logging can hinder the ability to detect and respond to security threats.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into SFTP activity:</strong> Without logging, it can be difficult to track and monitor user activity, making it harder to detect unauthorized access or malicious actions.</li> <li><strong>Delayed response to security incidents:</strong> Lack of logging can delay the detection and response to security incidents, increasing the risk of data breaches or other adverse consequences.</li> <li><strong>Performance issues:</strong> Unresolved performance issues can lead to degraded user experience and decreased application availability.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable logging:</strong> Configure your AWS Transfer for SFTP servers to enable logging.</li> <li><strong>Configure logging settings:</strong> Customize logging settings to capture the desired events and data types.</li> <li><strong>Review and analyze logs:</strong> Regularly review SFTP logs to identify any suspicious activity or performance issues.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant events or security threats detected in SFTP logs.</li> <li><strong>Consider using CloudWatch Logs Insights:</strong> Use CloudWatch Logs Insights to analyze and query SFTP logs for valuable insights.</li> </ul>",5.5,AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L,CWE-532: Information Exposure Through Log Files,cloud
Use AWS PrivateLink For Transfer for SFTP Server Endpoints,"This vulnerability occurs when AWS Transfer for SFTP server endpoints are not configured to use AWS PrivateLink. AWS PrivateLink provides a private connection between your VPC and AWS services, reducing the risk of unauthorized access and data breaches.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible SFTP server endpoints can be discovered and exploited by attackers, allowing them to access and transfer files without authorization.</li> <li><strong>Data breaches:</strong> Compromised SFTP server endpoints can lead to data breaches if sensitive data is transferred through them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible SFTP server endpoints can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Use AWS PrivateLink:</strong> Configure your AWS Transfer for SFTP server endpoints to use AWS PrivateLink to connect to your VPC.</li> <li><strong>Restrict access:</strong> Use security groups to control inbound and outbound traffic to your SFTP server endpoints.</li> <li><strong>Implement client authentication:</strong> Require client authentication to verify the identity of users accessing the SFTP server endpoints.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-284: Improper Access Control,cloud
VPC Endpoints Not In Use,"This vulnerability occurs when VPC endpoints are not configured or used correctly, potentially exposing your VPC resources to the public internet. VPC endpoints provide a private connection between your VPC and AWS services, reducing the risk of unauthorized access.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> If VPC endpoints are not used correctly, VPC resources could be exposed to the public internet, making them vulnerable to attacks.</li> <li><strong>Data breaches:</strong> Compromised VPC resources can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Incorrectly configured VPC endpoints can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Use VPC endpoints:</strong> Configure your VPCs to use VPC endpoints for accessing AWS services that require public internet connectivity.</li> <li><strong>Restrict access:</strong> Use security groups to control inbound and outbound traffic to your VPC endpoints.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-284: Improper Access Control,cloud
VPC Endpoint Publicly Exposed,"This vulnerability occurs when a VPC endpoint is publicly accessible without proper access controls. A publicly accessible VPC endpoint can be discovered and exploited by attackers, allowing them to gain unauthorized access to resources within your VPC.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of unauthorized access:</strong> Publicly accessible VPC endpoints can be discovered and exploited by attackers, allowing them to gain unauthorized access to resources within your VPC.</li> <li><strong>Data breaches:</strong> Compromised VPC resources can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect sensitive data from unauthorized access. Publicly accessible VPC endpoints can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Restrict access:</strong> Limit access to your VPC endpoint using security groups and network ACLs.</li> <li><strong>Use private VPCs:</strong> Place your VPC in a private VPC to prevent direct access from the public internet.</li> <li><strong>Implement client authentication:</strong> Require client authentication to verify the identity of clients accessing the VPC endpoint.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",6,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-284: Improper Access Control,cloud
AWS Web Application Firewall Not In Use,"This vulnerability occurs when AWS WAF is not enabled or configured properly to protect your web applications from common web attacks. WAF acts as a web application firewall, filtering and blocking malicious requests before they reach your web servers.","<ul class=""list-disc pl-4""> <li><strong>Increased risk of web attacks:</strong> Without WAF, your web applications are more susceptible to common web attacks such as SQL injection, cross-site scripting (XSS), and cross-site request forgery (CSRF).</li> <li><strong>Data breaches:</strong> Successful web attacks can lead to data breaches if sensitive data is stored or processed by your web applications.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to protect their web applications from attacks. Disabling WAF can violate these requirements.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable AWS WAF:</strong> Enable AWS WAF and configure it to protect your web applications.</li> <li><strong>Use managed rules:</strong> Leverage AWS Managed Rules to quickly apply pre-configured rulesets to protect against common web attacks.</li> <li><strong>Create custom rules:</strong> Create custom rules to address specific security threats or requirements.</li> <li><strong>Monitor WAF logs:</strong> Regularly review WAF logs to identify and address any security incidents.</li> <li><strong>Keep WAF rules updated:</strong> Stay up-to-date with the latest WAF rules and updates to protect against emerging threats.</li> </ul>",6,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-284: Improper Access Control,cloud
Enable Logging For Web Access Control Lists,"This vulnerability occurs when logging is not enabled for Web Access Control Lists (WACLs) in AWS CloudFront. WACLs control access to your CloudFront distributions, and logging provides valuable insights into user activity, security incidents, and performance issues.","<ul class=""list-disc pl-4""> <li><strong>Reduced visibility into WACL activity:</strong> Without logging, it can be difficult to track and monitor user activity, making it harder to detect unauthorized access or malicious actions.</li> <li><strong>Delayed response to security incidents:</strong> Lack of logging can delay the detection and response to security incidents, increasing the risk of data breaches or other adverse consequences.</li> <li><strong>Performance issues:</strong> Unresolved performance issues can lead to degraded user experience and decreased application availability.</li> </ul>",MEDIUM,,"<ul class=""list-disc pl-4""> <li><strong>Enable logging:</strong> Configure your CloudFront distributions to enable logging.</li> <li><strong>Configure logging settings:</strong> Customize logging settings to capture the desired events and data types.</li> <li><strong>Review and analyze logs:</strong> Regularly review CloudFront logs to identify any suspicious activity or performance issues.</li> <li><strong>Implement alerting:</strong> Set up alerts to notify you of significant events or security threats detected in CloudFront logs.</li> <li><strong>Consider using CloudWatch Logs Insights:</strong> Use CloudWatch Logs Insights to analyze and query CloudFront logs for valuable insights.</li> </ul>",6,AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N,CWE-284: Improper Access Control,cloud
Enable WorkSpaces Storage Encryption,"This vulnerability occurs when WorkSpaces storage is not encrypted at rest. Unencrypted storage can expose sensitive data to unauthorized access, even if the underlying storage infrastructure is compromised.","<ul class=""list-disc pl-4""> <li><strong>Data breaches:</strong> Compromised WorkSpaces storage can lead to data breaches if sensitive data is stored within them.</li> <li><strong>Loss of trust:</strong> A data breach can damage an organization's reputation and erode user trust.</li> <li><strong>Compliance risks:</strong> Many compliance frameworks require organizations to encrypt sensitive data at rest. Failure to encrypt WorkSpaces storage can violate these requirements.</li> </ul>",HIGH,,"<ul class=""list-disc pl-4""> <li><strong>Enable storage encryption:</strong> Configure your WorkSpaces to use storage encryption.</li> <li><strong>Use a dedicated CMK:</strong> Create a dedicated Customer Master Key (CMK) for your WorkSpaces to ensure that it is not used for other purposes, reducing the risk of compromise.</li> <li><strong>Implement a key rotation policy:</strong> Regularly rotate the CMK used for encryption to minimize the risk of compromise.</li> <li><strong>Monitor for suspicious activity:</strong> Keep an eye out for unusual network traffic or unauthorized access attempts, as these could indicate a security breach.</li> </ul>",7.5,AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,CWE-311: Missing Encryption of Sensitive Data,cloud